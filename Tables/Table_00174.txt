OBJECT Table 174 Standard Purchase Line
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;
               StdPurchCode.GET("Standard Purchase Code");
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Standard Purchase Line;
               ESM=L¡nea compras est ndar;
               FRC=Ligne d'achat standard;
               ENC=Standard Purchase Line];
    PasteIsValid=No;
  }
  FIELDS
  {
    { 1   ;   ;Standard Purchase Code;Code10      ;TableRelation="Standard Purchase Code";
                                                   CaptionML=[ENU=Standard Purchase Code;
                                                              ESM=C¢digo compras est ndar;
                                                              FRC=Code d'achat standard;
                                                              ENC=Standard Purchase Code];
                                                   Editable=No }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESM=N§ l¡nea;
                                                              FRC=Nø ligne;
                                                              ENC=Line No.];
                                                   Editable=No }
    { 3   ;   ;Type                ;Option        ;OnValidate=VAR
                                                                OldType@1000 : Integer;
                                                              BEGIN
                                                                OldType := Type;
                                                                INIT;
                                                                Type := OldType;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ESM=Tipo;
                                                              FRC=Type;
                                                              ENC=Type];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,Fixed Asset,Charge (Item)";
                                                                    ESM=" ,Cuenta,Producto,,Activo fijo,Cargo (Prod.)";
                                                                    FRC=" ,Compte (GL),Article,,Immobilisation,Frais annexes";
                                                                    ENC=" ,G/L Account,Item,,Fixed Asset,Charge (Item)"];
                                                   OptionString=[ ,G/L Account,Item,,Fixed Asset,Charge (Item)] }
    { 4   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(3)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   OnValidate=VAR
                                                                GLAcc@1001 : Record 15;
                                                                Item@1002 : Record 27;
                                                                ItemCharge@1006 : Record 5800;
                                                                FA@1003 : Record 5600;
                                                                StdTxt@1004 : Record 7;
                                                                StdPurchCode@1000 : Record 173;
                                                              BEGIN
                                                                Quantity := 0;
                                                                "Amount Excl. VAT" := 0;
                                                                "Unit of Measure Code" := '';
                                                                Description := '';
                                                                IF "No." = '' THEN
                                                                  EXIT;
                                                                StdPurchCode.GET("Standard Purchase Code");
                                                                CASE Type OF
                                                                  Type::" ":
                                                                    BEGIN
                                                                      StdTxt.GET("No.");
                                                                      Description := StdTxt.Description;
                                                                    END;
                                                                  Type::"G/L Account":
                                                                    BEGIN
                                                                      GLAcc.GET("No.");
                                                                      GLAcc.CheckGLAcc;
                                                                      GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                      Description := GLAcc.Name;
                                                                    END;
                                                                  Type::Item:
                                                                    BEGIN
                                                                      Item.GET("No.");
                                                                      Item.TESTFIELD(Blocked,FALSE);
                                                                      Item.TESTFIELD("Gen. Prod. Posting Group");
                                                                      IF Item.Type = Item.Type::Inventory THEN
                                                                        Item.TESTFIELD("Inventory Posting Group");
                                                                      "Unit of Measure Code" := Item."Purch. Unit of Measure";
                                                                      Description := Item.Description;
                                                                      "Variant Code" := '';
                                                                    END;
                                                                  Type::"3":
                                                                    ERROR(Text001);
                                                                  Type::"Fixed Asset":
                                                                    BEGIN
                                                                      FA.GET("No.");
                                                                      FA.TESTFIELD(Inactive,FALSE);
                                                                      FA.TESTFIELD(Blocked,FALSE);
                                                                      Description := FA.Description;
                                                                    END;
                                                                  Type::"Charge (Item)":
                                                                    BEGIN
                                                                      ItemCharge.GET("No.");
                                                                      Description := ItemCharge.Description;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESM=N§;
                                                              FRC=Nø;
                                                              ENC=No.] }
    { 5   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 6   ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              ESM=Cantidad;
                                                              FRC=Quantit‚;
                                                              ENC=Quantity];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 7   ;   ;Amount Excl. VAT    ;Decimal       ;OnValidate=BEGIN
                                                                IF (Type <> Type::"G/L Account") AND (Type <> Type::"Charge (Item)") THEN
                                                                  ERROR(Text002,FIELDCAPTION(Type),Type);
                                                              END;

                                                   CaptionML=[ENU=Amount Excl. Tax;
                                                              ESM=Importe sin IVA;
                                                              FRC=Montant sans taxes;
                                                              ENC=Amount Excl. Tax];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrency }
    { 8   ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ESM=C¢d. unidad medida;
                                                              FRC=Code unit‚ de mesure;
                                                              ENC=Unit of Measure Code] }
    { 9   ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ESM=C¢d. dim. acceso dir. 1;
                                                              FRC=Code raccourci de dimension 1;
                                                              ENC=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 10  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ESM=C¢d. dim. acceso dir. 2;
                                                              FRC=Code raccourci de dimension 2;
                                                              ENC=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 11  ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=VAR
                                                                Item@1001 : Record 27;
                                                                ItemVariant@1000 : Record 5401;
                                                              BEGIN
                                                                IF "Variant Code" = '' THEN BEGIN
                                                                  IF Type = Type::Item THEN BEGIN
                                                                    Item.GET("No.");
                                                                    Description := Item.Description;
                                                                  END;
                                                                  EXIT;
                                                                END;

                                                                TESTFIELD(Type,Type::Item);
                                                                ItemVariant.GET("No.","Variant Code");
                                                                Description := ItemVariant.Description;
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              ESM=C¢d. variante;
                                                              FRC=Code variante;
                                                              ENC=Variant Code] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ESM=Id. grupo dimensiones;
                                                              FRC=Code ensemble de dimensions;
                                                              ENC=Dimension Set ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Standard Purchase Code,Line No.         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StdPurchCode@1001 : Record 173;
      DimMgt@1000 : Codeunit 408;
      Text000@1003 : TextConst 'ENU=You cannot rename a %1.;ESM=No se puede cambiar el nombre a %1.;FRC=Vous ne pouvez pas renommer un %1.;ENC=You cannot rename a %1.';
      Text001@1004 : TextConst 'ENU=You cannot purchase resources.;ESM=No se pueden comprar recursos.;FRC=Impossible d''acheter des ressources.;ENC=You cannot purchase resources.';
      Text002@1005 : TextConst 'ENU=%1 must not be %2.;ESM=%1 no debe ser %2.;FRC=%1 ne doit pas ˆtre %2.;ENC=%1 must not be %2.';

    PROCEDURE EmptyLine@5() : Boolean;
    BEGIN
      EXIT(("No." = '') AND (Quantity = 0))
    END;

    PROCEDURE InsertLine@1() : Boolean;
    BEGIN
      EXIT((Type = Type::" ") OR (NOT EmptyLine));
    END;

    LOCAL PROCEDURE GetCurrency@2() : Code[10];
    VAR
      StdPurchCode@1000 : Record 173;
    BEGIN
      IF StdPurchCode.GET("Standard Purchase Code") THEN
        EXIT(StdPurchCode."Currency Code");

      EXIT('');
    END;

    PROCEDURE ShowDimensions@3();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',"Standard Purchase Code","Line No."));
      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@28(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE ShowShortcutDimCode@27(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    BEGIN
    END.
  }
}

