OBJECT Table 221 Gen. Jnl. Allocation
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;
               GenJnlLine.GET("Journal Template Name","Journal Batch Name","Journal Line No.");

               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
             END;

    OnDelete=BEGIN
               VALIDATE(Amount,0);
             END;

    CaptionML=[ENU=Gen. Jnl. Allocation;
               ESM=Diario gen. distribuci¢n;
               FRC=Imputation journal g‚n‚ral;
               ENC=Gen. Jnl. Allocation];
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Gen. Journal Template";
                                                   CaptionML=[ENU=Journal Template Name;
                                                              ESM=Nombre libro diario;
                                                              FRC=Nom modŠle journal;
                                                              ENC=Journal Template Name] }
    { 2   ;   ;Journal Batch Name  ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              ESM=Nombre secci¢n diario;
                                                              FRC=Nom lot de journal;
                                                              ENC=Journal Batch Name] }
    { 3   ;   ;Journal Line No.    ;Integer       ;TableRelation="Gen. Journal Line"."Line No." WHERE (Journal Template Name=FIELD(Journal Template Name),
                                                                                                       Journal Batch Name=FIELD(Journal Batch Name));
                                                   CaptionML=[ENU=Journal Line No.;
                                                              ESM=N§ l¡nea diario;
                                                              FRC=Nø ligne de journal;
                                                              ENC=Journal Line No.] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESM=N§ l¡nea;
                                                              FRC=Nø ligne;
                                                              ENC=Line No.] }
    { 5   ;   ;Account No.         ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "Account No." = '' THEN BEGIN
                                                                  GLAcc.INIT;
                                                                  CreateDim(DATABASE::"G/L Account","Account No.");
                                                                END ELSE BEGIN
                                                                  GLAcc.GET("Account No.");
                                                                  GLAcc.CheckGLAcc;
                                                                  GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                END;
                                                                "Account Name" := GLAcc.Name;
                                                                "Gen. Posting Type" := GLAcc."Gen. Posting Type";
                                                                "Gen. Bus. Posting Group" := GLAcc."Gen. Bus. Posting Group";
                                                                "Gen. Prod. Posting Group" := GLAcc."Gen. Prod. Posting Group";
                                                                "VAT Bus. Posting Group" := GLAcc."VAT Bus. Posting Group";
                                                                "VAT Prod. Posting Group" := GLAcc."VAT Prod. Posting Group";
                                                                VALIDATE("VAT Prod. Posting Group");

                                                                CreateDim(DATABASE::"G/L Account","Account No.");
                                                              END;

                                                   CaptionML=[ENU=Account No.;
                                                              ESM=N§ cuenta;
                                                              FRC=Nø de compte;
                                                              ENC=Account No.] }
    { 6   ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ESM=C¢d. dim. acceso dir. 1;
                                                              FRC=Code raccourci de dimension 1;
                                                              ENC=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 7   ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ESM=C¢d. dim. acceso dir. 2;
                                                              FRC=Code raccourci de dimension 2;
                                                              ENC=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 8   ;   ;Allocation Quantity ;Decimal       ;OnValidate=BEGIN
                                                                IF "Allocation Quantity" = 0 THEN BEGIN
                                                                  "Allocation %" := 0;
                                                                  Amount := 0;
                                                                END;
                                                                UpdateAllocations(GenJnlLine);
                                                              END;

                                                   CaptionML=[ENU=Allocation Quantity;
                                                              ESM=Cantidad a distribuir;
                                                              FRC=Quantit‚ appliqu‚e;
                                                              ENC=Allocation Quantity];
                                                   DecimalPlaces=0:5 }
    { 9   ;   ;Allocation %        ;Decimal       ;OnValidate=BEGIN
                                                                "Allocation Quantity" := 0;
                                                                IF "Allocation %" = 0 THEN
                                                                  Amount := 0;
                                                                UpdateAllocations(GenJnlLine);
                                                              END;

                                                   CaptionML=[ENU=Allocation %;
                                                              ESM=% Distribuci¢n;
                                                              FRC=% affectation;
                                                              ENC=Allocation %];
                                                   DecimalPlaces=2:2 }
    { 10  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Allocation Quantity" <> 0) OR ("Allocation %" <> 0) THEN BEGIN
                                                                  "Allocation Quantity" := 0;
                                                                  "Allocation %" := 0;
                                                                  UpdateAllocations(GenJnlLine);
                                                                END ELSE BEGIN
                                                                  VALIDATE("VAT Prod. Posting Group");
                                                                  MODIFY;
                                                                  UpdateJnlBalance(GenJnlLine);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              ESM=Importe;
                                                              FRC=Montant;
                                                              ENC=Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 11  ;   ;Gen. Posting Type   ;Option        ;OnValidate=BEGIN
                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Posting Type;
                                                              ESM=Tipo IVA;
                                                              FRC=Type de report g‚n‚ral;
                                                              ENC=Gen. Posting Type];
                                                   OptionCaptionML=[ENU=" ,Purchase,Sale";
                                                                    ESM=" ,Compras,Ventas";
                                                                    FRC=" ,Achat,Vente";
                                                                    ENC=" ,Purchase,Sale"];
                                                   OptionString=[ ,Purchase,Sale] }
    { 12  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group" THEN
                                                                  IF GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") THEN
                                                                    VALIDATE("VAT Bus. Posting Group",GenBusPostingGrp."Def. VAT Bus. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ESM=Grupo contable negocio;
                                                              FRC=Groupe de report de march‚;
                                                              ENC=Gen. Bus. Posting Group] }
    { 13  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Prod. Posting Group" <> "Gen. Prod. Posting Group" THEN
                                                                  IF GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Gen. Prod. Posting Group") THEN
                                                                    VALIDATE("VAT Prod. Posting Group",GenProdPostingGrp."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ESM=Grupo contable producto;
                                                              FRC=Groupe de report de produit;
                                                              ENC=Gen. Prod. Posting Group] }
    { 14  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=Tax Calculation Type;
                                                              ESM=Tipo c lculo IVA;
                                                              FRC=Type de calcul taxe;
                                                              ENC=Tax Calculation Type];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    ESM=Normal,Reversi¢n,Total,Impto. venta;
                                                                    FRC=TVA normale,Frais renvers‚s TVA,TVA complŠte,Taxe de vente;
                                                                    ENC=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   Editable=No }
    { 15  ;   ;VAT Amount          ;Decimal       ;CaptionML=[ENU=Tax Amount;
                                                              ESM=Importe IVA;
                                                              FRC=Montant de TVA;
                                                              ENC=Tax Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 16  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=Tax %;
                                                              ESM=% IVA;
                                                              FRC=% TVA;
                                                              ENC=Tax %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 17  ;   ;Account Name        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("G/L Account".Name WHERE (No.=FIELD(Account No.)));
                                                   CaptionML=[ENU=Account Name;
                                                              ESM=Nombre cuenta;
                                                              FRC=Nom du compte;
                                                              ENC=Account Name];
                                                   Editable=No }
    { 18  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Tax Area Code;
                                                              ESM=C¢d.  rea impuesto;
                                                              FRC=Code de r‚gion fiscale;
                                                              ENC=Tax Area Code] }
    { 19  ;   ;Tax Liable          ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Tax Liable;
                                                              ESM=Sujeto a impuesto;
                                                              FRC=Imposable;
                                                              ENC=Tax Liable] }
    { 20  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Tax Group Code;
                                                              ESM=C¢d. grupo impuesto;
                                                              FRC=Code groupe fiscal;
                                                              ENC=Tax Group Code] }
    { 21  ;   ;Use Tax             ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Use Tax;
                                                              ESM=Impuesto de importaci¢n;
                                                              FRC=Taxe de service;
                                                              ENC=Use Tax] }
    { 22  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Tax Bus. Posting Group;
                                                              ESM=Grupo registro IVA neg.;
                                                              FRC=Groupe de reports de taxe sur la valeur ajout‚e de l'entreprise;
                                                              ENC=Tax Bus. Posting Group] }
    { 23  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                GenJnlLine.GET("Journal Template Name","Journal Batch Name","Journal Line No.");
                                                                CheckVAT(GenJnlLine);
                                                                UpdateVAT(GenJnlLine);
                                                              END;

                                                   CaptionML=[ENU=Tax Prod. Posting Group;
                                                              ESM=Grupo registro IVA prod.;
                                                              FRC=Groupe de report de produit taxe;
                                                              ENC=Tax Prod. Posting Group] }
    { 24  ;   ;Additional-Currency Amount;Decimal ;CaptionML=[ENU=Additional-Currency Amount;
                                                              ESM=Importe divisa-adicional;
                                                              FRC=Montant devise add.;
                                                              ENC=Additional-Currency Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ESM=Id. grupo dimensiones;
                                                              FRC=Code ensemble de dimensions;
                                                              ENC=Dimension Set ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Journal Line No.,Line No.;
                                                   SumIndexFields=Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 cannot be used in allocations when they are completed on the general journal line.;ESM=No se puede utilizar %1 en distribuciones cuando estan rellenados en la l¡neas del diario general.;FRC=%1 ne peut ˆtre utilis‚ dans les imputations lorsqu''elles sont complŠtes sur une ligne de journal g‚n‚ral.;ENC=%1 cannot be used in allocations when they are completed on the general journal line.';
      GLAcc@1001 : Record 15;
      GenJnlLine@1002 : Record 81;
      GenBusPostingGrp@1003 : Record 250;
      GenProdPostingGrp@1004 : Record 251;
      DimMgt@1005 : Codeunit 408;

    PROCEDURE UpdateAllocations@2(VAR GenJnlLine@1000 : Record 81);
    VAR
      GenJnlAlloc@1001 : Record 221;
      GenJnlAlloc2@1002 : Record 221;
      FromAllocations@1003 : Boolean;
      TotalQty@1004 : Decimal;
      TotalPct@1005 : Decimal;
      TotalPctRnded@1006 : Decimal;
      TotalAmountLCY@1007 : Decimal;
      TotalAmountLCY2@1008 : Decimal;
      TotalAmountLCYRnded@1009 : Decimal;
      TotalAmountLCYRnded2@1010 : Decimal;
      UpdateGenJnlLine@1011 : Boolean;
    BEGIN
      IF "Line No." <> 0 THEN BEGIN
        FromAllocations := TRUE;
        GenJnlAlloc.UpdateVAT(GenJnlLine);
        MODIFY;
        GenJnlLine.GET("Journal Template Name","Journal Batch Name","Journal Line No.");
        CheckVAT(GenJnlLine);
      END;

      GenJnlAlloc.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
      GenJnlAlloc.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
      GenJnlAlloc.SETRANGE("Journal Line No.",GenJnlLine."Line No.");
      IF FromAllocations THEN
        UpdateGenJnlLine := TRUE
      ELSE
        IF NOT GenJnlAlloc.ISEMPTY THEN BEGIN
          GenJnlAlloc.LOCKTABLE;
          UpdateGenJnlLine := TRUE;
        END;
      IF GenJnlAlloc.FINDSET THEN
        REPEAT
          IF (GenJnlAlloc."Allocation Quantity" <> 0) OR (GenJnlAlloc."Allocation %" <> 0) THEN BEGIN
            IF NOT FromAllocations THEN
              GenJnlAlloc.CheckVAT(GenJnlLine);
            IF GenJnlAlloc."Allocation Quantity" = 0 THEN BEGIN
              TotalAmountLCY2 := TotalAmountLCY2 - GenJnlLine."Amount (LCY)" * GenJnlAlloc."Allocation %" / 100;
              GenJnlAlloc.Amount := ROUND(TotalAmountLCY2) - TotalAmountLCYRnded2;
              TotalAmountLCYRnded2 := TotalAmountLCYRnded2 + GenJnlAlloc.Amount;
            END ELSE BEGIN
              IF TotalQty = 0 THEN BEGIN
                GenJnlAlloc2.COPY(GenJnlAlloc);
                GenJnlAlloc2.SETFILTER("Allocation Quantity",'<>0');
                REPEAT
                  TotalQty := TotalQty + GenJnlAlloc2."Allocation Quantity";
                UNTIL GenJnlAlloc2.NEXT = 0;
                IF TotalQty = 0 THEN
                  TotalQty := 1;
              END;
              TotalPct := TotalPct + GenJnlAlloc."Allocation Quantity" / TotalQty * 100;
              GenJnlAlloc."Allocation %" := ROUND(TotalPct,0.01) - TotalPctRnded;
              TotalPctRnded := TotalPctRnded + GenJnlAlloc."Allocation %";
              TotalAmountLCY := TotalAmountLCY - GenJnlLine."Amount (LCY)" * GenJnlAlloc."Allocation Quantity" / TotalQty;
              GenJnlAlloc.Amount := ROUND(TotalAmountLCY) - TotalAmountLCYRnded;
              TotalAmountLCYRnded := TotalAmountLCYRnded + GenJnlAlloc.Amount;
            END;
            GenJnlAlloc.UpdateVAT(GenJnlLine);
            GenJnlAlloc.MODIFY;
          END;
        UNTIL GenJnlAlloc.NEXT = 0;

      IF UpdateGenJnlLine THEN
        UpdateJnlBalance(GenJnlLine);

      IF FromAllocations THEN
        FIND;
    END;

    PROCEDURE UpdateAllocationsAddCurr@6(VAR GenJnlLine@1000 : Record 81;AddCurrAmount@1001 : Decimal);
    VAR
      GenJnlAlloc@1002 : Record 221;
      GenJnlAlloc2@1003 : Record 221;
      GLSetup@1004 : Record 98;
      Currency@1005 : Record 4;
      TotalQty@1006 : Decimal;
      TotalPct@1007 : Decimal;
      TotalPctRnded@1008 : Decimal;
      TotalAmountAddCurr@1009 : Decimal;
      TotalAmountAddCurr2@1010 : Decimal;
      TotalAmountAddCurrRnded@1011 : Decimal;
      TotalAmountAddCurrRnded2@1012 : Decimal;
    BEGIN
      GenJnlAlloc.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
      GenJnlAlloc.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
      GenJnlAlloc.SETRANGE("Journal Line No.",GenJnlLine."Line No.");
      GenJnlAlloc.LOCKTABLE;
      IF GenJnlAlloc.FINDSET THEN BEGIN
        GLSetup.GET;
        Currency.GET(GLSetup."Additional Reporting Currency");
        Currency.TESTFIELD("Amount Rounding Precision");
        REPEAT
          IF (GenJnlAlloc."Allocation Quantity" <> 0) OR (GenJnlAlloc."Allocation %" <> 0) THEN BEGIN
            IF GenJnlAlloc."Allocation Quantity" = 0 THEN BEGIN
              TotalAmountAddCurr2 :=
                TotalAmountAddCurr2 - AddCurrAmount * GenJnlAlloc."Allocation %" / 100;
              GenJnlAlloc."Additional-Currency Amount" :=
                ROUND(TotalAmountAddCurr2,Currency."Amount Rounding Precision") -
                TotalAmountAddCurrRnded2;
              TotalAmountAddCurrRnded2 :=
                TotalAmountAddCurrRnded2 + GenJnlAlloc."Additional-Currency Amount";
            END ELSE BEGIN
              IF TotalQty = 0 THEN BEGIN
                GenJnlAlloc2.COPY(GenJnlAlloc);
                GenJnlAlloc2.SETFILTER("Allocation Quantity",'<>0');
                REPEAT
                  TotalQty := TotalQty + GenJnlAlloc2."Allocation Quantity";
                UNTIL GenJnlAlloc2.NEXT = 0;
                IF TotalQty = 0 THEN
                  TotalQty := 1;
              END;
              TotalPct := TotalPct + GenJnlAlloc."Allocation Quantity" / TotalQty * 100;
              GenJnlAlloc."Allocation %" := ROUND(TotalPct,0.01) - TotalPctRnded;
              TotalPctRnded := TotalPctRnded + GenJnlAlloc."Allocation %";
              TotalAmountAddCurr :=
                TotalAmountAddCurr -
                AddCurrAmount * GenJnlAlloc."Allocation Quantity" / TotalQty;
              GenJnlAlloc."Additional-Currency Amount" :=
                ROUND(TotalAmountAddCurr,Currency."Amount Rounding Precision") -
                TotalAmountAddCurrRnded;
              TotalAmountAddCurrRnded :=
                TotalAmountAddCurrRnded + GenJnlAlloc."Additional-Currency Amount";
            END;
            GenJnlAlloc.MODIFY;
          END;
        UNTIL GenJnlAlloc.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE UpdateJnlBalance@4(VAR GenJnlLine@1000 : Record 81);
    BEGIN
      GenJnlLine.CALCFIELDS("Allocated Amt. (LCY)");
      IF GenJnlLine."Bal. Account No." = '' THEN
        GenJnlLine."Balance (LCY)" := GenJnlLine."Amount (LCY)" + GenJnlLine."Allocated Amt. (LCY)"
      ELSE
        GenJnlLine."Balance (LCY)" := GenJnlLine."Allocated Amt. (LCY)";
      GenJnlLine.MODIFY;
    END;

    PROCEDURE CheckVAT@1(VAR GenJnlLine@1000 : Record 81);
    BEGIN
      IF ("Gen. Posting Type" <> 0) AND (GenJnlLine."Gen. Posting Type" <> 0) THEN
        ERROR(
          Text000,
          GenJnlLine.FIELDCAPTION("Gen. Posting Type"));
    END;

    PROCEDURE UpdateVAT@3(VAR GenJnlLine@1000 : Record 81);
    VAR
      GenJnlLine2@1001 : Record 81;
    BEGIN
      GenJnlLine2."Account No." := "Account No.";
      GenJnlLine2.Amount := Amount;
      GenJnlLine2."Amount (LCY)" := Amount;
      GenJnlLine2."Gen. Posting Type" := "Gen. Posting Type";
      GenJnlLine2."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
      GenJnlLine2."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
      GenJnlLine2."VAT Bus. Posting Group" := "VAT Bus. Posting Group";
      GenJnlLine2."VAT Prod. Posting Group" := "VAT Prod. Posting Group";
      GenJnlLine2."Tax Area Code" := "Tax Area Code";
      GenJnlLine2."Tax Liable" := "Tax Liable";
      GenJnlLine2."Tax Group Code" := "Tax Group Code";
      GenJnlLine2."Use Tax" := "Use Tax";
      GenJnlLine2."VAT Calculation Type" := "VAT Calculation Type";
      GenJnlLine2."VAT Amount" := "VAT Amount";
      GenJnlLine2."VAT %" := "VAT %";
      GenJnlLine2."Posting Date" := GenJnlLine."Posting Date";
      GenJnlLine2.VALIDATE("VAT Prod. Posting Group");
      Amount := GenJnlLine2."Amount (LCY)";
      "VAT Calculation Type" := GenJnlLine2."VAT Calculation Type";
      "VAT Amount" := GenJnlLine2."VAT Amount";
      "VAT %" := GenJnlLine2."VAT %";
    END;

    PROCEDURE GetCurrencyCode@5() : Code[10];
    VAR
      GenJnlLine3@1000 : Record 81;
    BEGIN
      GenJnlLine3.SETRANGE("Journal Template Name","Journal Template Name");
      GenJnlLine3.SETRANGE("Journal Batch Name","Journal Batch Name");
      GenJnlLine3.SETRANGE("Line No.","Journal Line No.");
      IF GenJnlLine3.FINDFIRST THEN
        EXIT(GenJnlLine3."Currency Code");

      EXIT('');
    END;

    LOCAL PROCEDURE CreateDim@13(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(TableID,No,'',"Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
    END;

    PROCEDURE ValidateShortcutDimCode@14(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE ShowShortcutDimCode@15(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    PROCEDURE ShowDimensions@7();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2("Dimension Set ID",
          STRSUBSTNO('%1 %2 %3',"Journal Template Name","Journal Batch Name","Journal Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    BEGIN
    END.
  }
}

