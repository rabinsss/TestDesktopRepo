OBJECT Table 330 Currency Exchange Rate
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Currency Code;
    CaptionML=[ENU=Currency Exchange Rate;
               ESM=Tipo cambio divisa;
               FRC=Taux de change devise;
               ENC=Currency Exchange Rate];
    LookupPageID=Page483;
    DrillDownPageID=Page483;
  }
  FIELDS
  {
    { 1   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = "Relational Currency Code" THEN
                                                                  ERROR(
                                                                    Text000,FIELDCAPTION("Currency Code"),FIELDCAPTION("Relational Currency Code"));
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ESM=C¢d. divisa;
                                                              FRC=Code devise;
                                                              ENC=Currency Code];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 2   ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              ESM=Fecha inicial;
                                                              FRC=Date d‚but;
                                                              ENC=Starting Date];
                                                   NotBlank=Yes }
    { 3   ;   ;Exchange Rate Amount;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Exchange Rate Amount");
                                                              END;

                                                   CaptionML=[ENU=Exchange Rate Amount;
                                                              ESM=Valor tipo cambio divisa;
                                                              FRC=Montant taux de change;
                                                              ENC=Exchange Rate Amount];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 4   ;   ;Adjustment Exch. Rate Amount;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Adjustment Exch. Rate Amount");
                                                              END;

                                                   AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Adjustment Exch. Rate Amount;
                                                              ESM=Valor t. c. ajustes divisa;
                                                              FRC=Montant taux de change ajust.;
                                                              ENC=Adjustment Exch. Rate Amount];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 5   ;   ;Relational Currency Code;Code10    ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = "Relational Currency Code" THEN
                                                                  ERROR(
                                                                    Text000,FIELDCAPTION("Currency Code"),FIELDCAPTION("Relational Currency Code"));
                                                              END;

                                                   CaptionML=[ENU=Relational Currency Code;
                                                              ESM=C¢d. divisa relacionada;
                                                              FRC=Code devise relationnelle;
                                                              ENC=Relational Currency Code] }
    { 6   ;   ;Relational Exch. Rate Amount;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relational Exch. Rate Amount");
                                                              END;

                                                   AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Relational Exch. Rate Amount;
                                                              ESM=Valor t.c. divisa relacionada;
                                                              FRC=Montant taux change relation.;
                                                              ENC=Relational Exch. Rate Amount];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 7   ;   ;Fix Exchange Rate Amount;Option    ;CaptionML=[ENU=Fix Exchange Rate Amount;
                                                              ESM=Valor tipo cambio fijo;
                                                              FRC=Fixer montant taux de change;
                                                              ENC=Fix Exchange Rate Amount];
                                                   OptionCaptionML=[ENU=Currency,Relational Currency,Both;
                                                                    ESM=Divisa,Divisa relacionada,Ambos;
                                                                    FRC=Devise,Devise relationnelle,Les deux;
                                                                    ENC=Currency,Relational Currency,Both];
                                                   OptionString=Currency,Relational Currency,Both }
    { 8   ;   ;Relational Adjmt Exch Rate Amt;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relational Adjmt Exch Rate Amt");
                                                              END;

                                                   AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Relational Adjmt Exch Rate Amt;
                                                              ESM=Valor t.c. ajustes divisa rel.;
                                                              FRC=Mont. taux ch. relation. ajus.;
                                                              ENC=Relational Adjmt Exch Rate Amt];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
  }
  KEYS
  {
    {    ;Currency Code,Starting Date             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The currency code in the %1 field and the %2 field cannot be the same.;ESM=El c¢digo de divisa no puede ser el mismo en los campos %1 y %2.;FRC=Le code de devise du champ %1 et le champ %2 ne peuvent ˆtre identiques.;ENC=The currency code in the %1 field and the %2 field cannot be the same.';
      CurrencyExchRate2@1001 : ARRAY [2] OF Record 330;
      CurrencyExchRate3@1002 : ARRAY [3] OF Record 330;
      RelExchangeRateAmt@1003 : Decimal;
      ExchangeRateAmt@1004 : Decimal;
      RelCurrencyCode@1005 : Code[10];
      FixExchangeRateAmt@1006 : Option;
      CurrencyFactor@1007 : Decimal;
      UseAdjmtAmounts@1008 : Boolean;
      CurrencyCode2@1009 : ARRAY [2] OF Code[10];
      Date2@1010 : ARRAY [2] OF Date;

    PROCEDURE ExchangeAmtLCYToFCY@1(Date@1000 : Date;CurrencyCode@1001 : Code[10];Amount@1002 : Decimal;Factor@1003 : Decimal) : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN
        EXIT(Amount);
      FindCurrency(Date,CurrencyCode,1);
      TESTFIELD("Exchange Rate Amount");
      TESTFIELD("Relational Exch. Rate Amount");
      IF "Relational Currency Code" = '' THEN
        IF "Fix Exchange Rate Amount" = "Fix Exchange Rate Amount"::Both THEN
          Amount := (Amount / "Relational Exch. Rate Amount") * "Exchange Rate Amount"
        ELSE
          Amount := Amount * Factor
      ELSE BEGIN
        RelExchangeRateAmt := "Relational Exch. Rate Amount";
        ExchangeRateAmt := "Exchange Rate Amount";
        RelCurrencyCode := "Relational Currency Code";
        FixExchangeRateAmt := "Fix Exchange Rate Amount";
        FindCurrency(Date,RelCurrencyCode,2);
        TESTFIELD("Exchange Rate Amount");
        TESTFIELD("Relational Exch. Rate Amount");
        CASE FixExchangeRateAmt OF
          "Fix Exchange Rate Amount"::"Relational Currency":
            ExchangeRateAmt :=
              (Factor * RelExchangeRateAmt * "Relational Exch. Rate Amount") /
              "Exchange Rate Amount";
          "Fix Exchange Rate Amount"::Currency:
            RelExchangeRateAmt :=
              (ExchangeRateAmt * "Exchange Rate Amount") /
              (Factor * "Relational Exch. Rate Amount");
          "Fix Exchange Rate Amount"::Both:
            CASE "Fix Exchange Rate Amount" OF
              "Fix Exchange Rate Amount"::"Relational Currency":
                "Exchange Rate Amount" :=
                  (Factor * RelExchangeRateAmt * "Relational Exch. Rate Amount") /
                  ExchangeRateAmt;
              "Fix Exchange Rate Amount"::Currency:
                "Relational Exch. Rate Amount" :=
                  (ExchangeRateAmt * "Exchange Rate Amount") /
                  (Factor * RelExchangeRateAmt);
            END;
        END;
        Amount := (Amount / RelExchangeRateAmt) * ExchangeRateAmt;
        Amount := (Amount / "Relational Exch. Rate Amount") * "Exchange Rate Amount";
      END;
      EXIT(Amount);
    END;

    PROCEDURE ExchangeAmtFCYToLCY@6(Date@1000 : Date;CurrencyCode@1001 : Code[10];Amount@1002 : Decimal;Factor@1003 : Decimal) : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN
        EXIT(Amount);
      FindCurrency(Date,CurrencyCode,1);
      IF NOT UseAdjmtAmounts THEN BEGIN
        TESTFIELD("Exchange Rate Amount");
        TESTFIELD("Relational Exch. Rate Amount");
      END ELSE BEGIN
        TESTFIELD("Adjustment Exch. Rate Amount");
        TESTFIELD("Relational Adjmt Exch Rate Amt");
        "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
        "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
      END;
      IF "Relational Currency Code" = '' THEN
        IF "Fix Exchange Rate Amount" = "Fix Exchange Rate Amount"::Both THEN
          Amount := (Amount / "Exchange Rate Amount") * "Relational Exch. Rate Amount"
        ELSE
          Amount := Amount / Factor
      ELSE BEGIN
        RelExchangeRateAmt := "Relational Exch. Rate Amount";
        ExchangeRateAmt := "Exchange Rate Amount";
        RelCurrencyCode := "Relational Currency Code";
        FixExchangeRateAmt := "Fix Exchange Rate Amount";
        FindCurrency(Date,RelCurrencyCode,2);
        IF NOT UseAdjmtAmounts THEN BEGIN
          TESTFIELD("Exchange Rate Amount");
          TESTFIELD("Relational Exch. Rate Amount");
        END ELSE BEGIN
          TESTFIELD("Adjustment Exch. Rate Amount");
          TESTFIELD("Relational Adjmt Exch Rate Amt");
          "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
          "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
        END;
        CASE FixExchangeRateAmt OF
          "Fix Exchange Rate Amount"::"Relational Currency":
            ExchangeRateAmt :=
              (RelExchangeRateAmt * "Relational Exch. Rate Amount") /
              ("Exchange Rate Amount" * Factor);
          "Fix Exchange Rate Amount"::Currency:
            RelExchangeRateAmt :=
              ((Factor * ExchangeRateAmt * "Exchange Rate Amount") /
               "Relational Exch. Rate Amount");
          "Fix Exchange Rate Amount"::Both:
            CASE "Fix Exchange Rate Amount" OF
              "Fix Exchange Rate Amount"::"Relational Currency":
                "Exchange Rate Amount" :=
                  (RelExchangeRateAmt * "Relational Exch. Rate Amount") /
                  (ExchangeRateAmt * Factor);
              "Fix Exchange Rate Amount"::Currency:
                "Relational Exch. Rate Amount" :=
                  ((Factor * ExchangeRateAmt * "Exchange Rate Amount") /
                   RelExchangeRateAmt);
              "Fix Exchange Rate Amount"::Both:
                BEGIN
                  Amount := (Amount / ExchangeRateAmt) * RelExchangeRateAmt;
                  Amount := (Amount / "Exchange Rate Amount") * "Relational Exch. Rate Amount";
                  EXIT(Amount);
                END;
            END;
        END;
        Amount := (Amount / RelExchangeRateAmt) * ExchangeRateAmt;
        Amount := (Amount / "Relational Exch. Rate Amount") * "Exchange Rate Amount";
      END;
      EXIT(Amount);
    END;

    PROCEDURE ExchangeRate@2(Date@1000 : Date;CurrencyCode@1001 : Code[10]) : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN
        EXIT(1);
      FindCurrency(Date,CurrencyCode,1);
      IF NOT UseAdjmtAmounts THEN BEGIN
        TESTFIELD("Exchange Rate Amount");
        TESTFIELD("Relational Exch. Rate Amount");
      END ELSE BEGIN
        TESTFIELD("Adjustment Exch. Rate Amount");
        TESTFIELD("Relational Adjmt Exch Rate Amt");
        "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
        "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
      END;
      RelExchangeRateAmt := "Relational Exch. Rate Amount";
      ExchangeRateAmt := "Exchange Rate Amount";
      RelCurrencyCode := "Relational Currency Code";
      IF "Relational Currency Code" = '' THEN
        CurrencyFactor := "Exchange Rate Amount" / "Relational Exch. Rate Amount"
      ELSE BEGIN
        FindCurrency(Date,RelCurrencyCode,2);
        IF NOT UseAdjmtAmounts THEN BEGIN
          TESTFIELD("Exchange Rate Amount");
          TESTFIELD("Relational Exch. Rate Amount");
        END ELSE BEGIN
          TESTFIELD("Adjustment Exch. Rate Amount");
          TESTFIELD("Relational Adjmt Exch Rate Amt");
          "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
          "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
        END;
        CurrencyFactor := (ExchangeRateAmt * "Exchange Rate Amount") / (RelExchangeRateAmt * "Relational Exch. Rate Amount");
      END;
      EXIT(CurrencyFactor);
    END;

    PROCEDURE ExchangeAmtLCYToFCYOnlyFactor@3(Amount@1000 : Decimal;Factor@1001 : Decimal) : Decimal;
    BEGIN
      Amount := Factor * Amount;
      EXIT(Amount);
    END;

    PROCEDURE ExchangeAmtFCYToLCYAdjmt@5(Date@1000 : Date;CurrencyCode@1001 : Code[10];Amount@1002 : Decimal;Factor@1003 : Decimal) : Decimal;
    BEGIN
      UseAdjmtAmounts := TRUE;
      EXIT(ExchangeAmtFCYToLCY(Date,CurrencyCode,Amount,Factor));
    END;

    PROCEDURE ExchangeRateAdjmt@4(Date@1000 : Date;CurrencyCode@1001 : Code[10]) : Decimal;
    BEGIN
      UseAdjmtAmounts := TRUE;
      EXIT(ExchangeRate(Date,CurrencyCode));
    END;

    PROCEDURE ExchangeAmount@43(Amount@1000 : Decimal;FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];UsePostingDate@1003 : Date) : Decimal;
    VAR
      ToCurrency@1004 : Record 4;
    BEGIN
      IF (FromCurrencyCode = ToCurrencyCode) OR (Amount = 0) THEN
        EXIT(Amount);

      Amount :=
        ExchangeAmtFCYToFCY(
          UsePostingDate,FromCurrencyCode,ToCurrencyCode,Amount);

      IF ToCurrencyCode <> '' THEN BEGIN
        ToCurrency.GET(ToCurrencyCode);
        Amount := ROUND(Amount,ToCurrency."Amount Rounding Precision");
      END ELSE
        Amount := ROUND(Amount);

      EXIT(Amount);
    END;

    PROCEDURE FindCurrency@7(Date@1000 : Date;CurrencyCode@1001 : Code[10];CacheNo@1002 : Integer);
    BEGIN
      IF (CurrencyCode2[CacheNo] = CurrencyCode) AND (Date2[CacheNo] = Date) THEN
        Rec := CurrencyExchRate2[CacheNo]
      ELSE BEGIN
        IF Date = 0D THEN
          Date := WORKDATE;
        CurrencyExchRate2[CacheNo].SETRANGE("Currency Code",CurrencyCode);
        CurrencyExchRate2[CacheNo].SETRANGE("Starting Date",0D,Date);
        CurrencyExchRate2[CacheNo].FINDLAST;
        Rec := CurrencyExchRate2[CacheNo];
        CurrencyCode2[CacheNo] := CurrencyCode;
        Date2[CacheNo] := Date;
      END;
    END;

    PROCEDURE ExchangeAmtFCYToFCY@8(Date@1000 : Date;FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];Amount@1003 : Decimal) : Decimal;
    BEGIN
      IF FromCurrencyCode = ToCurrencyCode THEN
        EXIT(Amount);
      IF ToCurrencyCode = '' THEN BEGIN
        FindCurrency2(Date,FromCurrencyCode,1);
        IF CurrencyExchRate3[1]."Relational Currency Code" = '' THEN
          EXIT(
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
            CurrencyExchRate3[1]."Relational Exch. Rate Amount");

        FindCurrency2(Date,CurrencyExchRate3[1]."Relational Currency Code",3);
        Amount :=
          ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
           CurrencyExchRate3[1]."Relational Exch. Rate Amount");
        EXIT(
          (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
          CurrencyExchRate3[3]."Relational Exch. Rate Amount");
      END;
      IF FromCurrencyCode = '' THEN BEGIN
        FindCurrency2(Date,ToCurrencyCode,2);
        IF CurrencyExchRate3[2]."Relational Currency Code" = '' THEN
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");

        FindCurrency2(Date,CurrencyExchRate3[2]."Relational Currency Code",3);
        Amount :=
          ((Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
           CurrencyExchRate3[2]."Exchange Rate Amount");
        EXIT(
          (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[3]."Exchange Rate Amount");
      END;
      FindCurrency2(Date,FromCurrencyCode,1);
      FindCurrency2(Date,ToCurrencyCode,2);
      IF CurrencyExchRate3[1]."Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Currency Code" THEN
        EXIT(
          (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
          CurrencyExchRate3[1]."Relational Exch. Rate Amount");

      IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN BEGIN
        Amount :=
          ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
           CurrencyExchRate3[1]."Relational Exch. Rate Amount");
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
      IF (CurrencyExchRate3[1]."Relational Currency Code" = '') AND
         (CurrencyExchRate3[2]."Relational Currency Code" <> '')
      THEN BEGIN
        FindCurrency2(Date,CurrencyExchRate3[2]."Relational Currency Code",3);
        Amount :=
          (Amount * CurrencyExchRate3[1]."Relational Exch. Rate Amount") /
          CurrencyExchRate3[1]."Exchange Rate Amount";
        Amount :=
          (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[3]."Exchange Rate Amount";
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
      IF (CurrencyExchRate3[1]."Relational Currency Code" <> '') AND
         (CurrencyExchRate3[2]."Relational Currency Code" = '')
      THEN BEGIN
        FindCurrency2(Date,CurrencyExchRate3[1]."Relational Currency Code",3);
        Amount :=
          (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
          CurrencyExchRate3[1]."Relational Exch. Rate Amount";
        Amount :=
          (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
          CurrencyExchRate3[3]."Relational Exch. Rate Amount";
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
    END;

    LOCAL PROCEDURE FindCurrency2@9(Date@1000 : Date;CurrencyCode@1001 : Code[10];Number@1002 : Integer);
    BEGIN
      IF Date = 0D THEN
        Date := WORKDATE;
      CurrencyExchRate3[Number].SETRANGE("Currency Code",CurrencyCode);
      CurrencyExchRate3[Number].SETRANGE("Starting Date",0D,Date);
      CurrencyExchRate3[Number].FINDLAST;
      CurrencyExchRate3[Number].TESTFIELD("Exchange Rate Amount");
      CurrencyExchRate3[Number].TESTFIELD("Relational Exch. Rate Amount");
    END;

    PROCEDURE ApplnExchangeAmtFCYToFCY@13(Date@1000 : Date;FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];Amount@1003 : Decimal;VAR ExchRateFound@1004 : Boolean) : Decimal;
    BEGIN
      IF FromCurrencyCode = ToCurrencyCode THEN
        EXIT(Amount);
      IF ToCurrencyCode = '' THEN BEGIN
        ExchRateFound := FindApplnCurrency(Date,FromCurrencyCode,1);
        IF NOT ExchRateFound THEN
          EXIT(0);

        IF CurrencyExchRate3[1]."Relational Currency Code" = '' THEN
          EXIT(
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
            CurrencyExchRate3[1]."Relational Exch. Rate Amount");

        ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[1]."Relational Currency Code",3);
        IF NOT ExchRateFound THEN
          EXIT(0);

        Amount :=
          (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
          CurrencyExchRate3[1]."Relational Exch. Rate Amount";
        EXIT(
          (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
          CurrencyExchRate3[3]."Relational Exch. Rate Amount");
      END;
      IF FromCurrencyCode = '' THEN BEGIN
        ExchRateFound := FindApplnCurrency(Date,ToCurrencyCode,2);
        IF NOT ExchRateFound THEN
          EXIT(0);

        IF CurrencyExchRate3[2]."Relational Currency Code" = '' THEN
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");

        ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[2]."Relational Currency Code",3);
        IF NOT ExchRateFound THEN
          EXIT(0);

        Amount :=
          ((Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
           CurrencyExchRate3[2]."Exchange Rate Amount");
        EXIT(
          (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[3]."Exchange Rate Amount");
      END;
      ExchRateFound := FindApplnCurrency(Date,FromCurrencyCode,1);
      IF NOT ExchRateFound THEN
        EXIT(0);

      ExchRateFound := FindApplnCurrency(Date,ToCurrencyCode,2);
      IF NOT ExchRateFound THEN
        EXIT(0);

      IF CurrencyExchRate3[1]."Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Currency Code" THEN
        EXIT(
          (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
          CurrencyExchRate3[1]."Relational Exch. Rate Amount");

      IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN BEGIN
        Amount :=
          ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
           CurrencyExchRate3[1]."Relational Exch. Rate Amount");
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
      IF (CurrencyExchRate3[1]."Relational Currency Code" = '') AND
         (CurrencyExchRate3[2]."Relational Currency Code" <> '')
      THEN BEGIN
        ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[2]."Relational Currency Code",3);
        IF NOT ExchRateFound THEN
          EXIT(0);

        Amount :=
          (Amount * CurrencyExchRate3[1]."Relational Exch. Rate Amount") /
          CurrencyExchRate3[1]."Exchange Rate Amount";
        Amount :=
          (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[3]."Exchange Rate Amount";
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
      IF (CurrencyExchRate3[1]."Relational Currency Code" <> '') AND
         (CurrencyExchRate3[2]."Relational Currency Code" = '')
      THEN BEGIN
        ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[1]."Relational Currency Code",3);
        IF NOT ExchRateFound THEN
          EXIT(0);

        Amount :=
          (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
          CurrencyExchRate3[1]."Relational Exch. Rate Amount";
        Amount :=
          (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
          CurrencyExchRate3[3]."Relational Exch. Rate Amount";
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
    END;

    LOCAL PROCEDURE FindApplnCurrency@12(Date@1000 : Date;CurrencyCode@1001 : Code[10];Number@1002 : Integer) : Boolean;
    BEGIN
      CurrencyExchRate3[Number].SETRANGE("Currency Code",CurrencyCode);
      CurrencyExchRate3[Number].SETRANGE("Starting Date",0D,Date);
      IF NOT CurrencyExchRate3[Number].FINDLAST THEN
        EXIT(FALSE);

      CurrencyExchRate3[Number].TESTFIELD("Exchange Rate Amount");
      CurrencyExchRate3[Number].TESTFIELD("Relational Exch. Rate Amount");
      EXIT(TRUE);
    END;

    PROCEDURE GetCurrentCurrencyFactor@14(CurrencyCode@1000 : Code[10]) : Decimal;
    BEGIN
      SETRANGE("Currency Code",CurrencyCode);
      IF FINDLAST THEN
        IF "Relational Exch. Rate Amount" <> 0 THEN
          EXIT("Exchange Rate Amount" / "Relational Exch. Rate Amount");
    END;

    PROCEDURE GetLastestExchangeRate@20(CurrencyCode@1000 : Code[10];VAR Date@1001 : Date;VAR Amt@1002 : Decimal);
    BEGIN
      Date := 0D;
      Amt := 0;
      SETRANGE("Currency Code",CurrencyCode);
      IF FINDLAST THEN BEGIN
        Date := "Starting Date";
        IF "Exchange Rate Amount" <> 0 THEN
          Amt := "Relational Exch. Rate Amount" / "Exchange Rate Amount";
      END;
    END;

    PROCEDURE SetCurrentCurrencyFactor@15(CurrencyCode@1000 : Code[10];CurrencyFactor@1001 : Decimal);
    VAR
      RateForTodayExists@1002 : Boolean;
    BEGIN
      "Currency Code" := CurrencyCode;
      TESTFIELD("Currency Code");
      RateForTodayExists := GET(CurrencyCode,TODAY);
      "Exchange Rate Amount" := 1;
      "Relational Exch. Rate Amount" := 1 / CurrencyFactor;
      "Adjustment Exch. Rate Amount" := "Exchange Rate Amount";
      "Relational Adjmt Exch Rate Amt" := "Relational Exch. Rate Amount";
      IF RateForTodayExists THEN BEGIN
        "Relational Currency Code" := '';
        MODIFY;
      END ELSE BEGIN
        "Starting Date" := TODAY;
        INSERT;
      END;
    END;

    BEGIN
    END.
  }
}

