OBJECT Table 1207 Direct Debit Collection
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Identifier,Created Date-Time;
    CaptionML=[ENU=Direct Debit Collection;
               ESM=Cobro por adeudo directo;
               FRC=Recouvrement de prÇlävement;
               ENC=Direct Debit Collection];
    LookupPageID=Page1207;
    DrillDownPageID=Page1207;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Integer       ;CaptionML=[ENU=No.;
                                                              ESM=Nß;
                                                              FRC=N¯;
                                                              ENC=No.] }
    { 2   ;   ;Identifier          ;Code20        ;CaptionML=[ENU=Identifier;
                                                              ESM=Identificador;
                                                              FRC=Identificateur;
                                                              ENC=Identifier] }
    { 3   ;   ;Created Date-Time   ;DateTime      ;CaptionML=[ENU=Created Date-Time;
                                                              ESM=Fecha / hora creaci¢n;
                                                              FRC=Date/heure crÇation;
                                                              ENC=Created Date-Time] }
    { 4   ;   ;Created by User     ;Code50        ;TableRelation=User."User Name";
                                                   CaptionML=[ENU=Created by User;
                                                              ESM=Creado por usuario;
                                                              FRC=CrÇÇ par l'utilisateur;
                                                              ENC=Created by User] }
    { 5   ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ESM=Estado;
                                                              FRC=êtat;
                                                              ENC=Status];
                                                   OptionCaptionML=[ENU=New,Canceled,File Created,Posted,Closed;
                                                                    ESM=Nuevos,Cancelados,Archivo creado,Registrados,Cerrados;
                                                                    FRC=Nouveau,AnnulÇ,Fichier crÇÇ,ReportÇ,FermÇ;
                                                                    ENC=New,Cancelled,File Created,Posted,Closed];
                                                   OptionString=New,Canceled,File Created,Posted,Closed }
    { 6   ;   ;No. of Transfers    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Direct Debit Collection Entry" WHERE (Direct Debit Collection No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Transfers;
                                                              ESM=Nß de transferencias;
                                                              FRC=Nbre de transferts;
                                                              ENC=No. of Transfers] }
    { 7   ;   ;To Bank Account No. ;Code20        ;TableRelation="Bank Account";
                                                   CaptionML=[ENU=To Bank Account No.;
                                                              ESM=Nß banco destino;
                                                              FRC=N¯ compte bancaire de destination;
                                                              ENC=To Bank Account No.] }
    { 8   ;   ;To Bank Account Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Bank Account".Name WHERE (No.=FIELD(To Bank Account No.)));
                                                   CaptionML=[ENU=To Bank Account Name;
                                                              ESM=Nombre banco destino;
                                                              FRC=Nom compte bancaire de destination;
                                                              ENC=To Bank Account Name] }
    { 9   ;   ;Message ID          ;Code35        ;CaptionML=[ENU=Message ID;
                                                              ESM=Id. de mensaje;
                                                              FRC=Code message;
                                                              ENC=Message ID] }
    { 10  ;   ;Partner Type        ;Option        ;CaptionML=[ENU=Partner Type;
                                                              ESM=Tipo socio;
                                                              FRC=Type partenaire;
                                                              ENC=Partner Type];
                                                   OptionCaptionML=[ENU=" ,Company,Person";
                                                                    ESM=" ,Empresa,Persona";
                                                                    FRC=" ,Compagnie,Personne";
                                                                    ENC=" ,Company,Person"];
                                                   OptionString=[ ,Company,Person];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CloseQst@1000 : TextConst 'ENU=If you close the collection, you will not be able to register the payments from the collection. Do you want to close the collection anyway?;ESM=Si cierra el cobro, no podr† registrar los pagos a partir del cobro. ®Desea cerrarlo de todos modos?;FRC=Si vous clìturez la collection, vous ne pourrez pas enregistrer les paiements provenant de la collection. Voulez-vous fermer la collection malgrÇ toutˇ?;ENC=If you close the collection, you will not be able to register the payments from the collection. Do you want to close the collection anyway?';

    PROCEDURE CreateNew@1(NewIdentifier@1000 : Code[20];NewBankAccountNo@1001 : Code[20];PartnerType@1002 : Option);
    BEGIN
      RESET;
      LOCKTABLE;
      IF FINDLAST THEN;
      INIT;
      "No." += 1;
      Identifier := NewIdentifier;
      "Message ID" := Identifier;
      "Created Date-Time" := CURRENTDATETIME;
      "Created by User" := USERID;
      "To Bank Account No." := NewBankAccountNo;
      "Partner Type" := PartnerType;
      INSERT;
    END;

    PROCEDURE CloseCollection@2();
    VAR
      DirectDebitCollectionEntry@1000 : Record 1208;
    BEGIN
      IF Status IN [Status::Closed,Status::Canceled] THEN
        EXIT;
      IF NOT CONFIRM(CloseQst) THEN
        EXIT;

      IF Status = Status::New THEN
        Status := Status::Canceled
      ELSE
        Status := Status::Closed;
      MODIFY;

      DirectDebitCollectionEntry.SETRANGE("Direct Debit Collection No.","No.");
      DirectDebitCollectionEntry.SETRANGE(Status,DirectDebitCollectionEntry.Status::New);
      DirectDebitCollectionEntry.MODIFYALL(Status,DirectDebitCollectionEntry.Status::Rejected);
    END;

    PROCEDURE Export@5();
    VAR
      DirectDebitCollectionEntry@1000 : Record 1208;
    BEGIN
      DirectDebitCollectionEntry.SETRANGE("Direct Debit Collection No.","No.");
      IF DirectDebitCollectionEntry.FINDFIRST THEN
        DirectDebitCollectionEntry.ExportSEPA;
    END;

    PROCEDURE HasPaymentFileErrors@4() : Boolean;
    VAR
      GenJnlLine@1000 : Record 81;
    BEGIN
      GenJnlLine."Document No." := COPYSTR(FORMAT("No."),1,MAXSTRLEN(GenJnlLine."Document No."));
      EXIT(GenJnlLine.HasPaymentFileErrorsInBatch);
    END;

    PROCEDURE SetStatus@3(NewStatus@1000 : Option);
    BEGIN
      LOCKTABLE;
      FIND;
      Status := NewStatus;
      MODIFY;
    END;

    PROCEDURE DeletePaymentFileErrors@6();
    VAR
      DirectDebitCollectionEntry@1000 : Record 1208;
    BEGIN
      DirectDebitCollectionEntry.SETRANGE("Direct Debit Collection No.","No.");
      IF DirectDebitCollectionEntry.FINDSET THEN
        REPEAT
          DirectDebitCollectionEntry.DeletePaymentFileErrors;
        UNTIL DirectDebitCollectionEntry.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

