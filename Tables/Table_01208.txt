OBJECT Table 1208 Direct Debit Collection Entry
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Customer No.,Transaction ID;
    OnInsert=VAR
               DirectDebitCollectionEntry@1000 : Record 1208;
             BEGIN
               IF "Entry No." = 0 THEN BEGIN
                 DirectDebitCollectionEntry.SETRANGE("Direct Debit Collection No.","Direct Debit Collection No.");
                 LOCKTABLE;
                 IF DirectDebitCollectionEntry.FINDLAST THEN;
                 "Entry No." := DirectDebitCollectionEntry."Entry No." + 1;
               END;
             END;

    OnModify=BEGIN
               TESTFIELD(Status,Status::New);
               CALCFIELDS("Direct Debit Collection Status");
               TESTFIELD("Direct Debit Collection Status","Direct Debit Collection Status"::New);
             END;

    OnDelete=BEGIN
               DeletePaymentFileErrors;
             END;

    CaptionML=[ENU=Direct Debit Collection Entry;
               ESM=Movimiento de cobro de adeudo directo;
               FRC=êcriture recouvrement de prÇlävement;
               ENC=Direct Debit Collection Entry];
    LookupPageID=Page1208;
    DrillDownPageID=Page1208;
  }
  FIELDS
  {
    { 1   ;   ;Direct Debit Collection No.;Integer;TableRelation="Direct Debit Collection";
                                                   CaptionML=[ENU=Direct Debit Collection No.;
                                                              ESM=Nß cobro por adeudo directo;
                                                              FRC=N¯ de recouvrement de prÇlävement;
                                                              ENC=Direct Debit Collection No.] }
    { 2   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ESM=Nß mov.;
                                                              FRC=N¯ sÇquence;
                                                              ENC=Entry No.] }
    { 3   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                IF xRec."Customer No." <> '' THEN
                                                                  TESTFIELD(Status,Status::New);
                                                              END;

                                                   CaptionML=[ENU=Customer No.;
                                                              ESM=Nß cliente;
                                                              FRC=N¯ client;
                                                              ENC=Customer No.] }
    { 4   ;   ;Applies-to Entry No.;Integer       ;TableRelation="Cust. Ledger Entry" WHERE (Customer No.=FIELD(Customer No.),
                                                                                             Document Type=FILTER(Invoice|Finance Charge Memo|Reminder),
                                                                                             Open=CONST(Yes));
                                                   OnValidate=VAR
                                                                CustLedgerEntry@1000 : Record 21;
                                                                DirectDebitCollection@1001 : Record 1207;
                                                              BEGIN
                                                                IF xRec."Applies-to Entry No." <> "Applies-to Entry No." THEN BEGIN
                                                                  TESTFIELD("Customer No.");
                                                                  CustLedgerEntry.GET("Applies-to Entry No.");
                                                                  CustLedgerEntry.TESTFIELD("Customer No.","Customer No.");
                                                                  CustLedgerEntry.TESTFIELD(Open);

                                                                  IF NOT (CustLedgerEntry."Document Type" IN
                                                                          [CustLedgerEntry."Document Type"::Invoice,
                                                                           CustLedgerEntry."Document Type"::"Finance Charge Memo",
                                                                           CustLedgerEntry."Document Type"::Reminder])
                                                                  THEN
                                                                    ERROR(DocTypeErr);

                                                                  CustLedgerEntry.CALCFIELDS("Remaining Amount");
                                                                  IF CustLedgerEntry."Remaining Amount" <= 0 THEN
                                                                    ERROR(AmountMustBePositiveErr);

                                                                  "Transfer Date" := CustLedgerEntry."Due Date";
                                                                  "Currency Code" := CustLedgerEntry."Currency Code";
                                                                  "Transfer Amount" := CustLedgerEntry."Remaining Amount" - GetAmountInActiveCollections;
                                                                  VALIDATE("Mandate ID",CustLedgerEntry."Direct Debit Mandate ID");

                                                                  DirectDebitCollection.GET("Direct Debit Collection No.");
                                                                  "Transaction ID" := STRSUBSTNO('%1/%2',DirectDebitCollection.Identifier,"Entry No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Applies-to Entry No.;
                                                              ESM=Liq. por nß mov.;
                                                              FRC=N¯ Çcriture affectÇ Ö;
                                                              ENC=Applies-to Entry No.] }
    { 5   ;   ;Transfer Date       ;Date          ;CaptionML=[ENU=Transfer Date;
                                                              ESM=Fecha de transferencia;
                                                              FRC=Date transfert;
                                                              ENC=Transfer Date] }
    { 6   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ESM=C¢d. divisa;
                                                              FRC=Code devise;
                                                              ENC=Currency Code];
                                                   Editable=No }
    { 7   ;   ;Transfer Amount     ;Decimal       ;OnValidate=VAR
                                                                CustLedgEntry@1000 : Record 21;
                                                              BEGIN
                                                                IF "Transfer Amount" <= 0 THEN
                                                                  ERROR(AmountMustBePositiveErr);
                                                                TESTFIELD("Applies-to Entry No.");
                                                                CustLedgEntry.GET("Applies-to Entry No.");
                                                                CustLedgEntry.CALCFIELDS("Remaining Amount");
                                                                IF "Transfer Amount" > CustLedgEntry."Remaining Amount" - GetAmountInActiveCollections THEN
                                                                  ERROR(LargerThanRemainingErr,CustLedgEntry."Remaining Amount",CustLedgEntry."Currency Code");
                                                              END;

                                                   CaptionML=[ENU=Transfer Amount;
                                                              ESM=Importe de transferencia;
                                                              FRC=Montant transfert;
                                                              ENC=Transfer Amount] }
    { 8   ;   ;Transaction ID      ;Text35        ;CaptionML=[ENU=Transaction ID;
                                                              ESM=Id. de transacci¢n;
                                                              FRC=Code transaction;
                                                              ENC=Transaction ID];
                                                   Editable=No }
    { 9   ;   ;Sequence Type       ;Option        ;CaptionML=[ENU=Sequence Type;
                                                              ESM=Tipo de pago;
                                                              FRC=Type de paiement;
                                                              ENC=Sequence Type];
                                                   OptionCaptionML=[ENU=One Off,First,Recurring,Last;
                                                                    ESM=Pago £nico,Primer pago,Pago recurrente,Èltimo pago;
                                                                    FRC=Ponctuel,Premier,RÇcurrent,Dernier;
                                                                    ENC=One Off,First,Recurring,Last];
                                                   OptionString=One Off,First,Recurring,Last;
                                                   Editable=No }
    { 10  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ESM=Estado;
                                                              FRC=êtat;
                                                              ENC=Status];
                                                   OptionCaptionML=[ENU=New,File Created,Rejected,Posted;
                                                                    ESM=Nuevos,Archivo creado,Rechazados,Registrados;
                                                                    FRC=Nouveau,Fichier crÇÇ,RejetÇ,ReportÇ;
                                                                    ENC=New,File Created,Rejected,Posted];
                                                   OptionString=New,File Created,Rejected,Posted;
                                                   Editable=No }
    { 11  ;   ;Mandate ID          ;Code35        ;TableRelation="SEPA Direct Debit Mandate".ID WHERE (Customer No.=FIELD(Customer No.));
                                                   OnValidate=VAR
                                                                SEPADirectDebitMandate@1000 : Record 1230;
                                                              BEGIN
                                                                IF "Mandate ID" = '' THEN
                                                                  EXIT;
                                                                SEPADirectDebitMandate.GET("Mandate ID");
                                                                "Sequence Type" := SEPADirectDebitMandate.GetSequenceType;
                                                              END;

                                                   CaptionML=[ENU=Mandate ID;
                                                              ESM=Id. de orden de domiciliaci¢n;
                                                              FRC=Code mandat;
                                                              ENC=Mandate ID] }
    { 12  ;   ;Mandate Type of Payment;Option     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("SEPA Direct Debit Mandate"."Type of Payment" WHERE (ID=FIELD(Mandate ID)));
                                                   CaptionML=[ENU=Mandate Type of Payment;
                                                              ESM=Tipo de pago la orden de domiciliaci¢n;
                                                              FRC=Type de paiement mandat;
                                                              ENC=Mandate Type of Payment];
                                                   OptionCaptionML=[ENU=One Off,Recurrent;
                                                                    ESM=Pago £nico,Pago recurrente;
                                                                    FRC=Ponctuel,RÇcurrent;
                                                                    ENC=One Off,Recurrent];
                                                   OptionString=One Off,Recurrent;
                                                   Editable=No }
    { 13  ;   ;Customer Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Customer Name;
                                                              ESM=Nombre del deudor;
                                                              FRC=Nom du dÇbiteur;
                                                              ENC=Customer Name];
                                                   Editable=No }
    { 14  ;   ;Applies-to Entry Document No.;Code20;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Cust. Ledger Entry"."Document No." WHERE (Entry No.=FIELD(Applies-to Entry No.)));
                                                   CaptionML=[ENU=Applies-to Entry Document No.;
                                                              ESM=Nß documento de Liq. por nß orden;
                                                              FRC=N¯ document Çcriture rÇfÇrence;
                                                              ENC=Applies-to Entry Document No.];
                                                   Editable=No }
    { 15  ;   ;Applies-to Entry Description;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Cust. Ledger Entry".Description WHERE (Entry No.=FIELD(Applies-to Entry No.)));
                                                   CaptionML=[ENU=Applies-to Entry Description;
                                                              ESM=Descripci¢n de Liq. por nß de orden;
                                                              FRC=Description Çcriture rÇfÇrence;
                                                              ENC=Applies-to Entry Description];
                                                   Editable=No }
    { 16  ;   ;Applies-to Entry Posting Date;Date ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Cust. Ledger Entry"."Posting Date" WHERE (Entry No.=FIELD(Applies-to Entry No.)));
                                                   CaptionML=[ENU=Applies-to Entry Posting Date;
                                                              ESM=Fecha de registro de Liq. por nß de orden;
                                                              FRC=Date de report Çcriture rÇfÇrence;
                                                              ENC=Applies-to Entry Posting Date];
                                                   Editable=No }
    { 17  ;   ;Applies-to Entry Currency Code;Code10;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Cust. Ledger Entry"."Currency Code" WHERE (Entry No.=FIELD(Applies-to Entry No.)));
                                                   TableRelation=Currency;
                                                   CaptionML=[ENU=Applies-to Entry Currency Code;
                                                              ESM=C¢digo de divisa de Liq. por nß de orden;
                                                              FRC=Code devise Çcriture rÇfÇrence;
                                                              ENC=Applies-to Entry Currency Code];
                                                   Editable=No }
    { 18  ;   ;Applies-to Entry Amount;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Applies-to Entry No.),
                                                                                                              Entry Type=FILTER(Initial Entry|Unrealized Loss|Unrealized Gain|Realized Loss|Realized Gain|Payment Discount|'Payment Discount (VAT Excl.)'|'Payment Discount (VAT Adjustment)'|Payment Tolerance|Payment Discount Tolerance|'Payment Tolerance (VAT Excl.)'|'Payment Tolerance (VAT Adjustment)'|'Payment Discount Tolerance (VAT Excl.)'|'Payment Discount Tolerance (VAT Adjustment)')));
                                                   CaptionML=[ENU=Applies-to Entry Amount;
                                                              ESM=Importe de Liq. por nß de orden;
                                                              FRC=Montant Çcriture rÇfÇrence;
                                                              ENC=Applies-to Entry Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 19  ;   ;Applies-to Entry Rem. Amount;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Applies-to Entry No.)));
                                                   CaptionML=[ENU=Applies-to Entry Rem. Amount;
                                                              ESM=Importe pend. de Liq. por nß de orden;
                                                              FRC=Montant ouvert Çcriture rÇfÇrence;
                                                              ENC=Applies-to Entry Rem. Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 20  ;   ;Applies-to Entry Open;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Cust. Ledger Entry".Open WHERE (Entry No.=FIELD(Applies-to Entry No.)));
                                                   CaptionML=[ENU=Applies-to Entry Open;
                                                              ESM=Entrada aplicable abierta;
                                                              FRC=êcriture rÇfÇrence ouverte;
                                                              ENC=Applies-to Entry Open];
                                                   Editable=No }
    { 21  ;   ;Direct Debit Collection Status;Option;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Direct Debit Collection".Status WHERE (No.=FIELD(Direct Debit Collection No.)));
                                                   CaptionML=[ENU=Direct Debit Collection Status;
                                                              ESM=Estado cobro por adeudo directo;
                                                              FRC=Statut recouvrement prÇlävement;
                                                              ENC=Direct Debit Collection Status];
                                                   OptionCaptionML=[ENU=New,Canceled,File Created,Posted,Closed;
                                                                    ESM=Nuevos,Cancelados,Archivo creado,Registrados,Cerrados;
                                                                    FRC=Nouveau,AnnulÇ,Fichier crÇÇ,ReportÇ,FermÇ;
                                                                    ENC=New,Cancelled,File Created,Posted,Closed];
                                                   OptionString=New,Canceled,File Created,Posted,Closed }
  }
  KEYS
  {
    {    ;Direct Debit Collection No.,Entry No.   ;Clustered=Yes }
    {    ;Applies-to Entry No.,Status              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DocTypeErr@1000 : TextConst 'ENU=The customer ledger entry must be of type Invoice, Finance Charge Memo, or Reminder.;ESM=El movimiento del cliente debe ser del tipo Factura, Documento interÇs o Recordatorio.;FRC=L''Çcriture client doit àtre de type Facture, Note de frais financiers ou Rappel.;ENC=The customer ledger entry must be of type Invoice, Finance Charge Memo, or Reminder.';
      AmountMustBePositiveErr@1001 : TextConst 'ENU=The amount must be positive.;ESM=El importe debe ser positivo.;FRC=Le montant doit àtre positif.;ENC=The amount must be positive.';
      LargerThanRemainingErr@1002 : TextConst '@@@="%1 = an amount. %2 = currency code, e.g. 123.45 EUR";ENU=You cannot collect an amount that is larger than the remaining amount for the invoice (%1 %2) that is not on other collection entries.;ESM=No puede realizar el cobro de un importe mayor que el importe pendiente de la factura (%1 %2) que no figura en otros movimientos de cobro.;FRC=Vous ne pouvez pas prÇlever un montant plus ÇlevÇ que le montant restant pour la facture (%1 %2) ne se trouvant pas sur d''autres Çcritures de prÇlävement.;ENC=You cannot collect an amount that is larger than the remaining amount for the invoice (%1 %2) that is not on other collection entries.';
      RejectQst@1003 : TextConst 'ENU=Do you want to reject this collection entry?;ESM=®Confirma que desea rechazar este movimiento de cobro?;FRC=Souhaitez-vous rejeter cette Çcriture collectionˇ?;ENC=Do you want to reject this collection entry?';

    PROCEDURE CreateNew@3(DirectDebitCollectionNo@1000 : Integer;CustLedgerEntry@1001 : Record 21);
    BEGIN
      "Direct Debit Collection No." := DirectDebitCollectionNo;
      SETRANGE("Direct Debit Collection No.",DirectDebitCollectionNo);
      LOCKTABLE;
      IF FINDLAST THEN;
      "Entry No." += 1;
      INIT;
      VALIDATE("Customer No.",CustLedgerEntry."Customer No.");
      VALIDATE("Applies-to Entry No.",CustLedgerEntry."Entry No.");
      INSERT;
      CODEUNIT.RUN(CODEUNIT::"SEPA DD-Check Line",Rec);
    END;

    PROCEDURE DeletePaymentFileErrors@61();
    VAR
      GenJnlLine@1001 : Record 81;
    BEGIN
      TransferPKToGenJnlLine(GenJnlLine);
      GenJnlLine.DeletePaymentFileErrors;
    END;

    PROCEDURE HasPaymentFileErrors@5() : Boolean;
    VAR
      GenJnlLine@1001 : Record 81;
    BEGIN
      TransferPKToGenJnlLine(GenJnlLine);
      EXIT(GenJnlLine.HasPaymentFileErrors);
    END;

    PROCEDURE ExportSEPA@2();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"SEPA DD-Export File",Rec);
    END;

    PROCEDURE InsertPaymentFileError@64(Text@1001 : Text);
    VAR
      GenJnlLine@1002 : Record 81;
    BEGIN
      TransferPKToGenJnlLine(GenJnlLine);
      GenJnlLine.InsertPaymentFileError(Text);
    END;

    PROCEDURE Reject@1();
    VAR
      SEPADirectDebitMandate@1000 : Record 1230;
    BEGIN
      TESTFIELD(Status,Status::"File Created");
      IF NOT CONFIRM(RejectQst) THEN
        EXIT;
      Status := Status::Rejected;
      MODIFY;
      IF "Mandate ID" = '' THEN
        EXIT;
      SEPADirectDebitMandate.GET("Mandate ID");
      SEPADirectDebitMandate.RollBackSequenceType;
    END;

    LOCAL PROCEDURE TransferPKToGenJnlLine@4(VAR GenJnlLine@1000 : Record 81);
    BEGIN
      GenJnlLine."Document No." := COPYSTR(FORMAT("Direct Debit Collection No.",0,9),1,MAXSTRLEN(GenJnlLine."Document No."));
      GenJnlLine."Line No." := "Entry No.";
    END;

    LOCAL PROCEDURE GetAmountInActiveCollections@6() : Decimal;
    VAR
      DirectDebitCollectionEntry@1001 : Record 1208;
      AmountAlreadyInCollection@1000 : Decimal;
    BEGIN
      IF "Applies-to Entry No." = 0 THEN
        EXIT(0);

      DirectDebitCollectionEntry.SETRANGE("Applies-to Entry No.","Applies-to Entry No.");
      DirectDebitCollectionEntry.SETFILTER(Status,'%1|%2',Status::New,Status::"File Created");
      IF DirectDebitCollectionEntry.FINDSET THEN
        REPEAT
          IF (DirectDebitCollectionEntry."Direct Debit Collection No." <> "Direct Debit Collection No.") OR
             (DirectDebitCollectionEntry."Entry No." <> "Entry No.")
          THEN
            AmountAlreadyInCollection += DirectDebitCollectionEntry."Transfer Amount";
        UNTIL DirectDebitCollectionEntry.NEXT = 0;
      EXIT(AmountAlreadyInCollection);
    END;

    BEGIN
    END.
  }
}

