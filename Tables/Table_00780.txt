OBJECT Table 780 Certificate of Supply
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Certificate of Supply;
               ESM=Certificado de suministro;
               FRC=Certificat d'approvisionnement;
               ENC=Certificate of Supply];
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ESM=Tipo documento;
                                                              FRC=Type de document;
                                                              ENC=Document Type];
                                                   OptionCaptionML=[ENU=Sales Shipment,Service Shipment,Return Shipment;
                                                                    ESM=Remisi¢n venta,Entrega servicio,Env°o devoluci¢n;
                                                                    FRC=Livraison vente,Livraison service,Livraison retour;
                                                                    ENC=Sales Shipment,Service Shipment,Return Shipment];
                                                   OptionString=Sales Shipment,Service Shipment,Return Shipment }
    { 2   ;   ;Document No.        ;Code20        ;TableRelation=IF (Document Type=FILTER(Sales Shipment)) "Sales Shipment Header".No.
                                                                 ELSE IF (Document Type=FILTER(Service Shipment)) "Service Shipment Header".No.
                                                                 ELSE IF (Document Type=FILTER(Return Shipment)) "Return Shipment Header".No.;
                                                   CaptionML=[ENU=Document No.;
                                                              ESM=Nß documento;
                                                              FRC=N¯ de document;
                                                              ENC=Document No.] }
    { 3   ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                IF xRec.Status = Status THEN
                                                                  EXIT;

                                                                IF  "No." = '' THEN
                                                                  "No." := "Document No.";

                                                                IF Status = Status::Received THEN
                                                                  "Receipt Date" := WORKDATE
                                                                ELSE
                                                                  "Receipt Date" := 0D;

                                                                IF Status = Status::"Not Applicable" THEN
                                                                  "No." := ''
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              ESM=Estado;
                                                              FRC=êtat;
                                                              ENC=Status];
                                                   OptionCaptionML=[ENU=Not Applicable,Required,Received,Not Received;
                                                                    ESM=No aplica,Obligatorio,Recibido,No recibido;
                                                                    FRC=Non applicable,Requis,Reáu,Non reáu;
                                                                    ENC=Not Applicable,Required,Received,Not Received];
                                                   OptionString=Not Applicable,Required,Received,Not Received }
    { 4   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF Status = Status::"Not Applicable" THEN BEGIN
                                                                  IF "No." <> '' THEN
                                                                    ERROR(NoCannotBeEnteredErr);
                                                                END ELSE
                                                                  IF "No." = '' THEN
                                                                    ERROR(NoCannotBeEmptyErr)
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESM=Nß;
                                                              FRC=N¯;
                                                              ENC=No.] }
    { 5   ;   ;Receipt Date        ;Date          ;OnValidate=BEGIN
                                                                CheckRcptDate
                                                              END;

                                                   CaptionML=[ENU=Receipt Date;
                                                              ESM=Fecha recepci¢n;
                                                              FRC=Date de rÇception;
                                                              ENC=Receipt Date] }
    { 6   ;   ;Printed             ;Boolean       ;CaptionML=[ENU=Printed;
                                                              ESM=Impreso;
                                                              FRC=ImprimÇ;
                                                              ENC=Printed] }
    { 7   ;   ;Customer/Vendor Name;Text50        ;CaptionML=[ENU=Customer/Vendor Name;
                                                              ESM=Nombre Cliente/Proveedor;
                                                              FRC=Nom client/fournisseur;
                                                              ENC=Customer/Vendor Name];
                                                   Editable=No }
    { 8   ;   ;Shipment Method Code;Code10        ;CaptionML=[ENU=Shipment Method Code;
                                                              ESM=C¢d. mÇtodo de env°o;
                                                              FRC=Code mÇthode de livraison;
                                                              ENC=Shipment Method Code];
                                                   Editable=No }
    { 9   ;   ;Shipment/Posting Date;Date         ;CaptionML=[ENU=Shipment/Posting Date;
                                                              ESM=Fecha de env°o/registro;
                                                              FRC=Date expÇdition/comptabilisation;
                                                              ENC=Shipment/Posting Date];
                                                   Editable=No }
    { 10  ;   ;Ship-to Country/Region Code;Code10 ;CaptionML=[ENU=Ship-to Country/Region Code;
                                                              ESM=C¢d. pa°s/regi¢n direcci¢n de env°o;
                                                              FRC=Code pays/rÇgion destinataire;
                                                              ENC=Ship-to Country/Region Code];
                                                   Editable=No }
    { 11  ;   ;Customer/Vendor No. ;Code20        ;CaptionML=[ENU=Customer/Vendor No.;
                                                              ESM=Nß Cliente/Proveedor;
                                                              FRC=N¯ client/fournisseur;
                                                              ENC=Customer/Vendor No.] }
    { 12  ;   ;Vehicle Registration No.;Text20    ;OnValidate=BEGIN
                                                                IF (Status = Status::Received) AND ("Vehicle Registration No." <> xRec."Vehicle Registration No.") THEN
                                                                  ERROR(STRSUBSTNO(VehicleRegNoCannotBeChangedErr,FIELDCAPTION("Vehicle Registration No."),Status::Received))
                                                              END;

                                                   CaptionML=[ENU=Vehicle Registration No.;
                                                              ESM=N.ß reg. del veh°culo;
                                                              FRC=N¯ enregistrement vÇhicule;
                                                              ENC=Vehicle Registration No.] }
  }
  KEYS
  {
    {    ;Document Type,Document No.              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      RecDateCannotBeEmptyErr@1000 : TextConst 'ENU=The Receipt Date cannot be empty when Status is Received.;ESM=La fecha de recepci¢n no puede estar vac°a si el estado es Recibido.;FRC=La Date rÇception ne peut pas àtre vide si l''Çtat est Reáu.;ENC=The Receipt Date cannot be empty when Status is Received.';
      RecDateCannotBeEnteredErr@1001 : TextConst 'ENU=You can enter the Receipt Date only if the status of the Certificate of Supply is Received.;ESM=Puede escribir la fecha de recepci¢n solo si el estado del certificado de suministro es Recibido.;FRC=Vous ne pouvez entrer la Date rÇception que si l''Çtat du Certificat d''approvisionnement est Reáu.;ENC=You can enter the Receipt Date only if the status of the Certificate of Supply is Received.';
      CertRecDateBeforeShipmPostDateErr@1003 : TextConst 'ENU=The Receipt Date of the certificate cannot be earlier than the Shipment/Posting Date.;ESM=La fecha de recepci¢n del certificado no puede ser anterior a la fecha de env°o o registro.;FRC=La Date rÇception du certificat ne peut pas àtre antÇrieure Ö la Date expÇdition/comptabilisation.;ENC=The Receipt Date of the certificate cannot be earlier than the Shipment/Posting Date.';
      NoCannotBeEnteredErr@1002 : TextConst 'ENU=The No. field cannot be filled in when the status of the Certificate of Supply is set to Not Applicable.;ESM=El campo Nß no puede rellenarse si el estado del certificado de suministro se establece en No aplica.;FRC=Le champ N¯ ne peut pas àtre renseignÇ si l''Çtat du Certificat d''approvisionnement est dÇfini sur Non applicable.;ENC=The No. field cannot be filled in when the status of the Certificate of Supply is set to Not Applicable.';
      NoCannotBeEmptyErr@1004 : TextConst 'ENU=The No. field cannot be empty when the status of the Certificate of Supply is set to Required, Received, or Not Received.;ESM=El campo Nß no puede estar vac°o si el estado del certificado de suministro se establece en Obligatorio, Recibido o No recibido.;FRC=Le champ N¯ ne peut pas àtre vide si l''Çtat du Certificat d''approvisionnement est dÇfini sur Requis, Reáu ou Non reáu.;ENC=The No. field cannot be empty when the status of the Certificate of Supply is set to Required, Received, or Not Received.';
      VehicleRegNoCannotBeChangedErr@1005 : TextConst 'ENU=The %1 field cannot be changed when the status of the Certificate of Supply is set to %2.;ESM=No se puede cambiar el campo %1 si se establece el estado del certificado de suministro en %2.;FRC=Le champ %1 ne peut pas àtre modifiÇ lorsque l''Çtat du Certificat d''approvisionnement est dÇfini sur %2.;ENC=The %1 field cannot be changed when the status of the Certificate of Supply is set to %2.';

    PROCEDURE Print@1();
    BEGIN
      REPORT.RUNMODAL(REPORT::"Certificate of Supply",TRUE,FALSE,Rec);
    END;

    PROCEDURE SetPrintedTrue@2();
    BEGIN
      IF Status = Status::"Not Applicable" THEN
        SetRequired("Document No.");
      Printed := TRUE;

      MODIFY;
    END;

    PROCEDURE SetRequired@3(CertificateNo@1000 : Code[20]);
    BEGIN
      Status := Status::Required;
      "No." := CertificateNo;
      "Receipt Date" := 0D;
      MODIFY
    END;

    LOCAL PROCEDURE CheckRcptDate@37();
    BEGIN
      IF Status = Status::Received THEN BEGIN
        IF "Receipt Date" = 0D THEN
          ERROR(RecDateCannotBeEmptyErr);
        IF "Shipment/Posting Date" > "Receipt Date" THEN
          ERROR(CertRecDateBeforeShipmPostDateErr);
      END ELSE
        IF "Receipt Date" <> 0D THEN
          ERROR(RecDateCannotBeEnteredErr);
    END;

    PROCEDURE InitFromSales@11(VAR SalesShipmentHeader@1000 : Record 110);
    BEGIN
      IF NOT GET("Document Type"::"Sales Shipment",SalesShipmentHeader."No.") THEN BEGIN
        INIT;
        "Document Type" := "Document Type"::"Sales Shipment";
        "Document No." := SalesShipmentHeader."No.";
        "Customer/Vendor Name" := SalesShipmentHeader."Ship-to Name";
        "Shipment Method Code" := SalesShipmentHeader."Shipment Method Code";
        "Shipment/Posting Date" := SalesShipmentHeader."Shipment Date";
        "Ship-to Country/Region Code" := SalesShipmentHeader."Ship-to Country/Region Code";
        "Customer/Vendor No." := SalesShipmentHeader."Bill-to Customer No.";
        INSERT(TRUE);
      END
    END;

    PROCEDURE InitFromPurchase@10(VAR ReturnShipmentHeader@1000 : Record 6650);
    BEGIN
      IF NOT GET("Document Type"::"Return Shipment",ReturnShipmentHeader."No.") THEN BEGIN
        INIT;
        "Document Type" := "Document Type"::"Return Shipment";
        "Document No." := ReturnShipmentHeader."No.";
        "Customer/Vendor Name" := ReturnShipmentHeader."Ship-to Name";
        "Shipment Method Code" := ReturnShipmentHeader."Shipment Method Code";
        "Shipment/Posting Date" := ReturnShipmentHeader."Posting Date";
        "Ship-to Country/Region Code" := ReturnShipmentHeader."Ship-to Country/Region Code";
        "Customer/Vendor No." := ReturnShipmentHeader."Pay-to Vendor No.";
        INSERT(TRUE);
      END
    END;

    PROCEDURE InitFromService@5(VAR ServiceShipmentHeader@1000 : Record 5990);
    BEGIN
      IF NOT GET("Document Type"::"Service Shipment",ServiceShipmentHeader."No.") THEN BEGIN
        INIT;
        "Document Type" := "Document Type"::"Service Shipment";
        "Document No." := ServiceShipmentHeader."No.";
        "Customer/Vendor Name" := ServiceShipmentHeader."Ship-to Name";
        "Shipment Method Code" := '';
        "Shipment/Posting Date" := ServiceShipmentHeader."Posting Date";
        "Ship-to Country/Region Code" := ServiceShipmentHeader."Ship-to Country/Region Code";
        "Customer/Vendor No." := ServiceShipmentHeader."Bill-to Customer No.";
        INSERT(TRUE);
      END
    END;

    PROCEDURE InitRecord@4(DocumentType@1000 : Option;DocumentNo@1001 : Code[20]);
    VAR
      SalesShipmentHeader@1004 : Record 110;
      ServiceShipmentHeader@1003 : Record 5990;
      ReturnShipmentHeader@1002 : Record 6650;
    BEGIN
      CASE DocumentType OF
        "Document Type"::"Sales Shipment":
          BEGIN
            SalesShipmentHeader.GET(DocumentNo);
            InitFromSales(SalesShipmentHeader);
          END;
        "Document Type"::"Service Shipment":
          BEGIN
            ServiceShipmentHeader.GET(DocumentNo);
            InitFromService(ServiceShipmentHeader);
          END;
        "Document Type"::"Return Shipment":
          BEGIN
            ReturnShipmentHeader.GET(DocumentNo);
            InitFromPurchase(ReturnShipmentHeader);
          END;
      END
    END;

    BEGIN
    END.
  }
}

