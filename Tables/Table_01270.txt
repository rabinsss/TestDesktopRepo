OBJECT Table 1270 OCR Service Setup
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    Permissions=TableData 1261=rimd;
    OnInsert=BEGIN
               TESTFIELD("Primary Key",'');
             END;

    OnDelete=VAR
               OCRServiceDocTemplate@1000 : Record 1271;
             BEGIN
               DeletePassword("Password Key");
               DeletePassword("Authorization Key");
               OCRServiceDocTemplate.DELETEALL(TRUE)
             END;

    CaptionML=[ENU=OCR Service Setup;
               ESM=Configuraci¢n del servicio OCR;
               FRC=Configuration du service OCR;
               ENC=OCR Service Setup];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              ESM=Clave primaria;
                                                              FRC=ClÇ primaire;
                                                              ENC=Primary Key] }
    { 2   ;   ;User Name           ;Text50        ;CaptionML=[ENU=User Name;
                                                              ESM=Nombre de usuario;
                                                              FRC=Nom de l'utilisateur;
                                                              ENC=User Name] }
    { 3   ;   ;Password Key        ;GUID          ;TableRelation="Service Password".Key;
                                                   CaptionML=[ENU=Password Key;
                                                              ESM=Clave de contrase§a;
                                                              FRC=ClÇ mot de passe;
                                                              ENC=Password Key] }
    { 4   ;   ;Signup URL          ;Text250       ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Signup URL;
                                                              ESM=URL de registro;
                                                              FRC=URL inscription;
                                                              ENC=Signup URL] }
    { 5   ;   ;Service URL         ;Text250       ;OnValidate=VAR
                                                                HttpWebRequestMgt@1000 : Codeunit 1297;
                                                              BEGIN
                                                                IF "Service URL" = '' THEN
                                                                  EXIT;
                                                                HttpWebRequestMgt.CheckUrl("Service URL");
                                                                WHILE (STRLEN("Service URL") > 8) AND ("Service URL"[STRLEN("Service URL")] = '/') DO
                                                                  "Service URL" := COPYSTR("Service URL",1,STRLEN("Service URL") - 1);
                                                              END;

                                                   CaptionML=[ENU=Service URL;
                                                              ESM=URL de servicio;
                                                              FRC=URL service;
                                                              ENC=Service URL] }
    { 6   ;   ;Login URL           ;Text250       ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Login URL;
                                                              ESM=URL de conexi¢n;
                                                              FRC=URL d'ouverture de session;
                                                              ENC=Login URL] }
    { 7   ;   ;Authorization Key   ;GUID          ;TableRelation="Service Password".Key;
                                                   CaptionML=[ENU=Authorization Key;
                                                              ESM=Clave de autorizaci¢n;
                                                              FRC=ClÇ d'autorisation;
                                                              ENC=Authorization Key] }
    { 8   ;   ;Customer Name       ;Text80        ;CaptionML=[ENU=Customer Name;
                                                              ESM=Nombre del cliente;
                                                              FRC=Nom client;
                                                              ENC=Customer Name];
                                                   Editable=No }
    { 9   ;   ;Customer ID         ;Text50        ;CaptionML=[ENU=Customer ID;
                                                              ESM=Id. cliente;
                                                              FRC=Code de client;
                                                              ENC=Customer ID];
                                                   Editable=No }
    { 10  ;   ;Customer Status     ;Text30        ;CaptionML=[ENU=Customer Status;
                                                              ESM=Estado de cliente;
                                                              FRC=êtat du client;
                                                              ENC=Customer Status];
                                                   Editable=No }
    { 11  ;   ;Organization ID     ;Text50        ;CaptionML=[ENU=Organization ID;
                                                              ESM=Id. de organizaci¢n;
                                                              FRC=Code de l'organisation;
                                                              ENC=Organization ID];
                                                   Editable=No }
    { 12  ;   ;Default OCR Doc. Template;Code20   ;TableRelation="OCR Service Document Template";
                                                   CaptionML=[ENU=Default OCR Doc. Template;
                                                              ESM=Plantilla documento OCR predeterminada;
                                                              FRC=Modäle doc. OCR par dÇfaut;
                                                              ENC=Default OCR Doc. Template] }
    { 13  ;   ;Enabled             ;Boolean       ;OnValidate=BEGIN
                                                                IF Enabled THEN BEGIN
                                                                  TESTFIELD("Default OCR Doc. Template");
                                                                  ScheduleJobQueueEntries;
                                                                  IF CONFIRM(JobQEntriesCreatedQst) THEN
                                                                    ShowJobQueueEntry;
                                                                END ELSE
                                                                  CancelJobQueueEntries;
                                                              END;

                                                   CaptionML=[ENU=Enabled;
                                                              ESM=Activado;
                                                              FRC=ActivÇ;
                                                              ENC=Enabled] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EncryptionIsNotActivatedQst@1000 : TextConst 'ENU=Data encryption is not activated. It is recommended that you encrypt data. \Do you want to open the Data Encryption Management window?;ESM=El cifrado de datos no est† activado. Se recomienda cifrar los datos. \®Desea abrir la ventana Administraci¢n del cifrado de datos?;FRC=Le chiffrement des donnÇes n''est pas activÇ. Nous vous recommandons de chiffrer les donnÇes. \Voulez-vous ouvrir la fenàtre Gestion du chiffrement des donnÇesˇ?;ENC=Data encryption is not activated. It is recommended that you encrypt data. \Do you want to open the Data Encryption Management window?';
      MustBeEnabledErr@1001 : TextConst '@@@="OCR = Optical Character Recognition";ENU=The OCR service is not enabled.\\In the OCR Service Setup window, select the Enabled check box.;ESM=El servicio OCR no est† habilitado.\\En la ventana de configuraci¢n del servicio OCR, seleccione la casilla Habilitado.;FRC=Le service OCR n''est pas activÇ.\\Dans la fenàtre Configuration du service OCR, cochez la case ActivÇ.;ENC=The OCR service is not enabled.\\In the OCR Service Setup window, select the Enabled check box.';
      JobQEntriesCreatedQst@1002 : TextConst 'ENU=Job queue entries for sending and receiving electronic documents have been created.\\Do you want to open the Job Queue Entries window?;ESM=Se han creado movimientos de la cola de proyectos para enviar y recibir documentos electr¢nicos.\\®Desea abrir la ventana Movs. cola proyecto?;FRC=Des Çcritures file d''attente des travaux pour l''envoi et la rÇception de documents Çlectroniques ont ÇtÇ crÇÇes.\\Voulez-vous ouvrir la fenàtre êcritures file d''attente des travaux?;ENC=Job queue entries for sending and receiving electronic documents have been created.\\Do you want to open the Job Queue Entries window?';

    PROCEDURE SavePassword@1(VAR PasswordKey@1001 : GUID;PasswordText@1000 : Text);
    VAR
      ServicePassword@1002 : Record 1261;
    BEGIN
      IF ISNULLGUID(PasswordKey) OR NOT ServicePassword.GET(PasswordKey) THEN BEGIN
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.INSERT(TRUE);
        PasswordKey := ServicePassword.Key;
        MODIFY;
      END ELSE BEGIN
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.MODIFY;
      END;
      COMMIT;
      IF PasswordText <> '' THEN
        CheckEncryption;
    END;

    PROCEDURE GetPassword@2(PasswordKey@1001 : GUID) : Text;
    VAR
      ServicePassword@1000 : Record 1261;
    BEGIN
      ServicePassword.GET(PasswordKey);
      EXIT(ServicePassword.GetPassword);
    END;

    LOCAL PROCEDURE DeletePassword@4(PasswordKey@1000 : GUID);
    VAR
      ServicePassword@1001 : Record 1261;
    BEGIN
      IF ServicePassword.GET(PasswordKey) THEN
        ServicePassword.DELETE;
    END;

    PROCEDURE HasPassword@3(PasswordKey@1001 : GUID) : Boolean;
    VAR
      ServicePassword@1000 : Record 1261;
    BEGIN
      IF NOT ServicePassword.GET(PasswordKey) THEN
        EXIT(FALSE);
      EXIT(ServicePassword.GetPassword <> '');
    END;

    PROCEDURE SetURLsToDefault@5();
    VAR
      OCRServiceMgt@1000 : Codeunit 1294;
    BEGIN
      OCRServiceMgt.SetURLsToDefaultRSO(Rec);
    END;

    LOCAL PROCEDURE CheckEncryption@6();
    BEGIN
      IF NOT ENCRYPTIONENABLED THEN
        IF CONFIRM(EncryptionIsNotActivatedQst) THEN
          PAGE.RUN(PAGE::"Data Encryption Management");
    END;

    PROCEDURE CheckEnabled@7();
    BEGIN
      IF NOT Enabled THEN
        ERROR(MustBeEnabledErr);
    END;

    LOCAL PROCEDURE ScheduleJobQueueEntries@10();
    VAR
      JobQueueEntry@1000 : Record 472;
    BEGIN
      JobQueueEntry.ScheduleRecurrentJobQueueEntry(JobQueueEntry."Object Type to Run"::Codeunit,
        CODEUNIT::"OCR - Send to Service");
      JobQueueEntry.ScheduleRecurrentJobQueueEntry(JobQueueEntry."Object Type to Run"::Codeunit,
        CODEUNIT::"OCR - Receive from Service");
    END;

    LOCAL PROCEDURE CancelJobQueueEntries@11();
    VAR
      JobQueueEntry@1000 : Record 472;
    BEGIN
      CancelJobQueueEntry(JobQueueEntry."Object Type to Run"::Codeunit,
        CODEUNIT::"OCR - Send to Service");
      CancelJobQueueEntry(JobQueueEntry."Object Type to Run"::Codeunit,
        CODEUNIT::"OCR - Receive from Service");
    END;

    LOCAL PROCEDURE CancelJobQueueEntry@16(ObjType@1001 : Option;ObjID@1002 : Integer);
    VAR
      JobQueueEntry@1000 : Record 472;
    BEGIN
      IF JobQueueEntry.FindJobQueueEntry(ObjType,ObjID) THEN
        JobQueueEntry.Cancel;
    END;

    PROCEDURE ShowJobQueueEntry@8();
    VAR
      JobQueueEntry@1000 : Record 472;
    BEGIN
      JobQueueEntry.SETRANGE("Object Type to Run",JobQueueEntry."Object Type to Run"::Codeunit);
      JobQueueEntry.SETFILTER("Object ID to Run",'%1|%2',
        CODEUNIT::"OCR - Send to Service",
        CODEUNIT::"OCR - Receive from Service");
      IF JobQueueEntry.FINDFIRST THEN
        PAGE.RUN(PAGE::"Job Queue Entries",JobQueueEntry);
    END;

    BEGIN
    END.
  }
}

