OBJECT Table 9000 User Group
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               TESTFIELD(Code);
             END;

    OnDelete=VAR
               UserGroupMember@1000 : Record 9001;
               UserGroupPermissionSet@1001 : Record 9003;
             BEGIN
               UserGroupMember.SETRANGE("User Group Code",Code);
               IF NOT UserGroupMember.ISEMPTY THEN
                 ERROR(HasMembersErr);
               UserGroupPermissionSet.SETRANGE("User Group Code",Code);
               UserGroupPermissionSet.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=User Group;
               ESM=Grupo de usuarios;
               FRC=Groupe d'utilisateurs;
               ENC=User Group];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      HasMembersErr@1002 : TextConst 'ENU=You cannot delete this User Group because it has members.;ESM=No es posible eliminar este grupo de usuarios porque tiene miembros.;FRC=Vous ne pouvez pas supprimer ce groupe d''utilisateurs car il contient des membres.;ENC=You cannot delete this User Group because it has members.';

    PROCEDURE IsUserMember@14(VAR User@1001 : Record 2000000120;SelectedCompany@1000 : Text[30]) : Boolean;
    VAR
      UserGroupMember@1002 : Record 9001;
    BEGIN
      UserGroupMember.SETRANGE("User Group Code",Code);
      UserGroupMember.SETRANGE("User Security ID",User."User Security ID");
      UserGroupMember.SETRANGE("Company Name",SelectedCompany);
      EXIT(NOT UserGroupMember.ISEMPTY);
    END;

    PROCEDURE SetUserGroupMembership@7(VAR User@1001 : Record 2000000120;NewUserGroupMembership@1003 : Boolean;SelectedCompany@1000 : Text[30]);
    VAR
      UserGroupMember@1002 : Record 9001;
    BEGIN
      IF UserGroupMember.GET(Code,User."User Security ID",SelectedCompany) THEN BEGIN
        IF NOT NewUserGroupMembership THEN
          UserGroupMember.DELETE(TRUE);
        EXIT;
      END;
      IF NOT NewUserGroupMembership THEN
        EXIT;
      UserGroupMember.INIT;
      UserGroupMember."User Group Code" := Code;
      UserGroupMember."User Security ID" := User."User Security ID";
      UserGroupMember."Company Name" := SelectedCompany;
      UserGroupMember.INSERT(TRUE);
    END;

    PROCEDURE ExportUserGroups@1(FileName@1000 : Text) : Text;
    VAR
      TempBlob@1004 : Record 99008535;
      FileManagement@1003 : Codeunit 419;
      ExportImportUserGroups@1002 : XMLport 9000;
      OutStr@1001 : OutStream;
    BEGIN
      TempBlob.INIT;
      TempBlob.Blob.CREATEOUTSTREAM(OutStr);
      ExportImportUserGroups.SETDESTINATION(OutStr);
      ExportImportUserGroups.EXPORT;
      IF FileName = '' THEN
        EXIT(FileManagement.BLOBExport(TempBlob,TABLECAPTION + '.xml',TRUE));
      EXIT(FileManagement.BLOBExport(TempBlob,FileName,FALSE));
    END;

    PROCEDURE ImportUserGroups@2(FileName@1000 : Text);
    VAR
      TempBlob@1004 : Record 99008535;
      FileManagement@1003 : Codeunit 419;
      ExportImportUserGroups@1002 : XMLport 9000;
      InStr@1001 : InStream;
    BEGIN
      TempBlob.INIT;
      IF FileManagement.BLOBImport(TempBlob,FileName) = '' THEN
        EXIT;
      TempBlob.Blob.CREATEINSTREAM(InStr);
      ExportImportUserGroups.SETSOURCE(InStr);
      ExportImportUserGroups.IMPORT;
    END;

    BEGIN
    END.
  }
}

