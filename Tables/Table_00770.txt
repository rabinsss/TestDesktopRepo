OBJECT Table 770 Analysis Report Chart Setup
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               DeleteLines;
             END;

    CaptionML=[ENU=Analysis Report Chart Setup;
               ESM=Configuraci¢n gr fico informe an lisis;
               FRC=Configuration graphique rapport d'analyse;
               ENC=Analysis Report Chart Setup];
    LookupPageID=Page779;
  }
  FIELDS
  {
    { 1   ;   ;User ID             ;Text132       ;CaptionML=[ENU=User ID;
                                                              ESM=Id. usuario;
                                                              FRC=Code utilisateur;
                                                              ENC=User ID];
                                                   Editable=No }
    { 2   ;   ;Name                ;Text30        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 10  ;   ;Analysis Area       ;Option        ;CaptionML=[ENU=Analysis Area;
                                                              ESM=µrea an lisis;
                                                              FRC=Zone d'analyse;
                                                              ENC=Analysis Area];
                                                   OptionCaptionML=[ENU=Sales,Purchase,Inventory;
                                                                    ESM=Ventas,Compra,Inventario;
                                                                    FRC=Vente,Achat,Inventaire;
                                                                    ENC=Sales,Purchase,Inventory];
                                                   OptionString=Sales,Purchase,Inventory;
                                                   Editable=No }
    { 20  ;   ;Analysis Report Name;Code10        ;TableRelation="Analysis Report Name".Name WHERE (Analysis Area=FIELD(Analysis Area));
                                                   OnValidate=VAR
                                                                AnalysisReportName@1001 : Record 7111;
                                                                AnalysisReportChartMgt@1000 : Codeunit 770;
                                                              BEGIN
                                                                AnalysisReportName.GET("Analysis Area","Analysis Report Name");
                                                                "Analysis Line Template Name" := AnalysisReportName."Analysis Line Template Name";
                                                                "Analysis Column Template Name" := AnalysisReportName."Analysis Column Template Name";
                                                                AnalysisReportChartMgt.CheckDuplicateAnalysisLineDescription("Analysis Area","Analysis Line Template Name");
                                                                AnalysisReportChartMgt.CheckDuplicateAnalysisColumnHeader("Analysis Area","Analysis Column Template Name");

                                                                RefreshLines(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Analysis Report Name;
                                                              ESM=Nombre del informe de an lisis;
                                                              FRC=Nom du rapport d'analyse;
                                                              ENC=Analysis Report Name] }
    { 21  ;   ;Analysis Line Template Name;Code10 ;TableRelation="Analysis Report Name"."Analysis Line Template Name" WHERE (Analysis Area=FIELD(Analysis Area),
                                                                                                                             Name=FIELD(Analysis Report Name));
                                                   OnLookup=VAR
                                                              AnalysisLineTemplate@1000 : Record 7112;
                                                              AnalysisLineTemplate2@1001 : Record 7112;
                                                            BEGIN
                                                              AnalysisLineTemplate.SETRANGE("Analysis Area","Analysis Area");
                                                              AnalysisLineTemplate2.GET("Analysis Area","Analysis Line Template Name");
                                                              AnalysisLineTemplate := AnalysisLineTemplate2;
                                                              PAGE.RUNMODAL(0,AnalysisLineTemplate);
                                                            END;

                                                   CaptionML=[ENU=Analysis Line Template Name;
                                                              ESM=L¡nea an lisis: nombre plant.;
                                                              FRC=Nom modŠle ligne d'analyse;
                                                              ENC=Analysis Line Template Name];
                                                   Editable=No }
    { 22  ;   ;Analysis Column Template Name;Code10;
                                                   TableRelation="Analysis Report Name"."Analysis Column Template Name" WHERE (Analysis Area=FIELD(Analysis Area),
                                                                                                                               Name=FIELD(Analysis Report Name));
                                                   OnLookup=VAR
                                                              AnalysisColumnTemplate@1000 : Record 7116;
                                                              AnalysisColumnTemplate2@1001 : Record 7116;
                                                            BEGIN
                                                              AnalysisColumnTemplate.SETRANGE("Analysis Area","Analysis Area");
                                                              AnalysisColumnTemplate2.GET("Analysis Area","Analysis Column Template Name");
                                                              AnalysisColumnTemplate := AnalysisColumnTemplate2;
                                                              PAGE.RUNMODAL(0,AnalysisColumnTemplate);
                                                            END;

                                                   CaptionML=[ENU=Analysis Column Template Name;
                                                              ESM=Nombre plant. an lisis columna;
                                                              FRC=Nom modŠle colonne d'analyse;
                                                              ENC=Analysis Column Template Name];
                                                   Editable=No }
    { 30  ;   ;Base X-Axis on      ;Option        ;OnValidate=BEGIN
                                                                RefreshLines(FALSE);
                                                                IF "End Date" = 0D THEN
                                                                  "End Date" := "Start Date";
                                                              END;

                                                   CaptionML=[ENU=Base X-Axis on;
                                                              ESM=Basar eje X en;
                                                              FRC=Base axe X sur;
                                                              ENC=Base X-Axis on];
                                                   OptionCaptionML=[ENU=Period,Line,Column;
                                                                    ESM=Periodo,L¡nea,Columna;
                                                                    FRC=P‚riode,Ligne,Colonne;
                                                                    ENC=Period,Line,Column];
                                                   OptionString=Period,Line,Column }
    { 31  ;   ;Start Date          ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD("Start Date");
                                                              END;

                                                   CaptionML=[ENU=Start Date;
                                                              ESM=Fecha inicial;
                                                              FRC=Date de d‚but;
                                                              ENC=Start Date] }
    { 32  ;   ;End Date            ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD("End Date");
                                                              END;

                                                   CaptionML=[ENU=End Date;
                                                              ESM=Fecha final;
                                                              FRC=Date de fin;
                                                              ENC=End Date] }
    { 41  ;   ;Period Length       ;Option        ;CaptionML=[ENU=Period Length;
                                                              ESM=Longitud periodo;
                                                              FRC=Dur‚e de la p‚riode;
                                                              ENC=Period Length];
                                                   OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year;
                                                                    ESM=D¡a,Semana,Mes,Trimestre,A¤o;
                                                                    FRC=Jour,Semaine,Mois,Trimestre,Ann‚e;
                                                                    ENC=Day,Week,Month,Quarter,Year];
                                                   OptionString=Day,Week,Month,Quarter,Year }
    { 42  ;   ;No. of Periods      ;Integer       ;InitValue=12;
                                                   OnValidate=BEGIN
                                                                IF "No. of Periods" < 1 THEN
                                                                  ERROR(Text002,FIELDCAPTION("No. of Periods"),"No. of Periods");
                                                              END;

                                                   CaptionML=[ENU=No. of Periods;
                                                              ESM=N§ de periodos;
                                                              FRC=Nombre de p‚riodes;
                                                              ENC=No. of Periods] }
    { 50  ;   ;Last Viewed         ;Boolean       ;OnValidate=VAR
                                                                AnalysisReportChartSetup@1000 : Record 770;
                                                              BEGIN
                                                                IF (NOT "Last Viewed") OR ("Last Viewed" = xRec."Last Viewed") THEN
                                                                  EXIT;

                                                                AnalysisReportChartSetup.SETRANGE("User ID","User ID");
                                                                AnalysisReportChartSetup.SETRANGE("Analysis Area","Analysis Area");
                                                                AnalysisReportChartSetup.SETFILTER(Name,'<>%1',Name);
                                                                AnalysisReportChartSetup.SETRANGE("Last Viewed",TRUE);
                                                                AnalysisReportChartSetup.MODIFYALL("Last Viewed",FALSE);
                                                              END;

                                                   CaptionML=[ENU=Last Viewed;
                                                              ESM=éltima visualizaci¢n;
                                                              FRC=Affichage pr‚c‚dent;
                                                              ENC=Last Viewed];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;User ID,Analysis Area,Name              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000 : TextConst '@@@="%1=Analysis Line_Description %2=Analysis Column_Coulmn Header";ENU=%1 %2;ESM=%1 %2;FRC=%1 %2;ENC=%1 %2';
      Text002@1001 : TextConst 'ENU=You cannot set %1 to %2.;ESM=No se puede establecer %1 en %2.;FRC=Vous ne pouvez pas configurer %1 sur %2.;ENC=You cannot set %1 to %2.';

    PROCEDURE SetAnalysisReportName@11(ReportName@1000 : Code[10]);
    BEGIN
      VALIDATE("Analysis Report Name",ReportName);
      MODIFY(TRUE);
    END;

    PROCEDURE SetShowPer@12(ShowPer@1000 : Option);
    BEGIN
      VALIDATE("Base X-Axis on",ShowPer);
      MODIFY(TRUE);
    END;

    PROCEDURE SetPeriodLength@7(PeriodLength@1000 : Option);
    BEGIN
      "Period Length" := PeriodLength;
      MODIFY(TRUE);
    END;

    PROCEDURE SetLastViewed@17();
    BEGIN
      VALIDATE("Last Viewed",TRUE);
      MODIFY(TRUE);
    END;

    PROCEDURE SetLinkToLines@5(VAR AnalysisReportChartLine@1000 : Record 771);
    BEGIN
      AnalysisReportChartLine.SETRANGE("User ID","User ID");
      AnalysisReportChartLine.SETRANGE("Analysis Area","Analysis Area");
      AnalysisReportChartLine.SETRANGE(Name,Name);
    END;

    PROCEDURE SetLinkToMeasureLines@3(VAR AnalysisReportChartLine@1000 : Record 771);
    BEGIN
      SetLinkToLines(AnalysisReportChartLine);
      CASE "Base X-Axis on" OF
        "Base X-Axis on"::Period:
          ;
        "Base X-Axis on"::Line:
          AnalysisReportChartLine.SETRANGE("Analysis Line Line No.",0);
        "Base X-Axis on"::Column:
          AnalysisReportChartLine.SETRANGE("Analysis Column Line No.",0);
      END;
    END;

    PROCEDURE SetLinkToDimensionLines@14(VAR AnalysisReportChartLine@1000 : Record 771);
    BEGIN
      SetLinkToLines(AnalysisReportChartLine);
      CASE "Base X-Axis on" OF
        "Base X-Axis on"::Period:
          BEGIN
            AnalysisReportChartLine.SETRANGE("Analysis Line Line No.",0);
            AnalysisReportChartLine.SETRANGE("Analysis Column Line No.",0);
          END;
        "Base X-Axis on"::Line:
          AnalysisReportChartLine.SETRANGE("Analysis Column Line No.",0);
        "Base X-Axis on"::Column:
          AnalysisReportChartLine.SETRANGE("Analysis Line Line No.",0);
      END;
    END;

    PROCEDURE RefreshLines@1(Force@1002 : Boolean);
    VAR
      AnalysisReportChartLine@1000 : Record 771;
      TempAnalysisReportChartLine@1001 : TEMPORARY Record 771;
    BEGIN
      IF NOT Force THEN
        IF ("Analysis Report Name" = xRec."Analysis Report Name") AND
           ("Base X-Axis on" = xRec."Base X-Axis on")
        THEN
          EXIT;

      GetMeasuresInTemp(TempAnalysisReportChartLine);

      SetLinkToLines(AnalysisReportChartLine);
      AnalysisReportChartLine.DELETEALL;

      AnalysisReportChartLine.RESET;
      IF TempAnalysisReportChartLine.FINDSET THEN
        REPEAT
          AnalysisReportChartLine := TempAnalysisReportChartLine;
          AnalysisReportChartLine.INSERT;
        UNTIL TempAnalysisReportChartLine.NEXT = 0;
    END;

    PROCEDURE FilterAnalysisLine@6(VAR AnalysisLine@1000 : Record 7114);
    BEGIN
      AnalysisLine.SETRANGE("Analysis Area","Analysis Area");
      AnalysisLine.SETRANGE("Analysis Line Template Name","Analysis Line Template Name");
      AnalysisLine.SETFILTER(Description,'<>%1','');
    END;

    PROCEDURE FilterAnalysisColumn@8(VAR AnalysisColumn@1000 : Record 7118);
    BEGIN
      AnalysisColumn.SETRANGE("Analysis Area","Analysis Area");
      AnalysisColumn.SETRANGE("Analysis Column Template","Analysis Column Template Name");
      AnalysisColumn.SETFILTER("Column Header",'<>%1','');
    END;

    LOCAL PROCEDURE GetMeasuresInTemp@4(VAR TempAnalysisReportChartLine@1002 : TEMPORARY Record 771);
    VAR
      AnalysisLine@1000 : Record 7114;
      AnalysisColumn@1001 : Record 7118;
    BEGIN
      FilterAnalysisLine(AnalysisLine);
      FilterAnalysisColumn(AnalysisColumn);

      CASE "Base X-Axis on" OF
        "Base X-Axis on"::Period:
          BEGIN
            IF AnalysisColumn.FINDSET THEN
              REPEAT
                IF AnalysisLine.FINDSET THEN
                  REPEAT
                    InsertLineIntoTemp(TempAnalysisReportChartLine,AnalysisLine,AnalysisColumn);
                  UNTIL AnalysisLine.NEXT = 0;
              UNTIL AnalysisColumn.NEXT = 0;
          END;
        "Base X-Axis on"::Line,
        "Base X-Axis on"::Column:
          BEGIN
            IF AnalysisLine.FINDSET THEN
              REPEAT
                InsertLineIntoTemp(TempAnalysisReportChartLine,AnalysisLine,AnalysisColumn);
              UNTIL AnalysisLine.NEXT = 0;
            CLEAR(AnalysisLine);
            IF AnalysisColumn.FINDSET THEN
              REPEAT
                InsertLineIntoTemp(TempAnalysisReportChartLine,AnalysisLine,AnalysisColumn);
              UNTIL AnalysisColumn.NEXT = 0;
          END;
      END;

      SetChartTypesToDefault(TempAnalysisReportChartLine);
    END;

    LOCAL PROCEDURE InsertLineIntoTemp@9(VAR TempAnalysisReportChartLine@1000 : TEMPORARY Record 771;AnalysisLine@1002 : Record 7114;AnalysisColumn@1001 : Record 7118);
    VAR
      AnalysisReportChartLine@1003 : Record 771;
    BEGIN
      TempAnalysisReportChartLine.INIT;
      TempAnalysisReportChartLine."User ID" := "User ID";
      TempAnalysisReportChartLine."Analysis Area" := "Analysis Area";
      TempAnalysisReportChartLine.Name := Name;
      TempAnalysisReportChartLine."Analysis Line Line No." := AnalysisLine."Line No.";
      TempAnalysisReportChartLine."Analysis Column Line No." := AnalysisColumn."Line No.";
      TempAnalysisReportChartLine."Analysis Line Template Name" := "Analysis Line Template Name";
      TempAnalysisReportChartLine."Analysis Column Template Name" := "Analysis Column Template Name";

      CASE "Base X-Axis on" OF
        "Base X-Axis on"::Period:
          BEGIN
            TempAnalysisReportChartLine."Original Measure Name" :=
              STRSUBSTNO(Text001,AnalysisLine.Description,AnalysisColumn."Column Header");
            TempAnalysisReportChartLine."Measure Value" := STRSUBSTNO(Text001,AnalysisLine."Line No.",AnalysisColumn."Line No.");
          END;
        "Base X-Axis on"::Line,
        "Base X-Axis on"::Column:
          CASE TRUE OF
            AnalysisLine."Line No." = 0:
              BEGIN
                TempAnalysisReportChartLine."Original Measure Name" := AnalysisColumn."Column Header";
                TempAnalysisReportChartLine."Measure Value" := FORMAT(AnalysisColumn."Line No.");
              END;
            AnalysisColumn."Line No." = 0:
              BEGIN
                TempAnalysisReportChartLine."Original Measure Name" := AnalysisLine.Description;
                TempAnalysisReportChartLine."Measure Value" := FORMAT(AnalysisLine."Line No.");
              END;
          END;
      END;
      TempAnalysisReportChartLine."Measure Name" := TempAnalysisReportChartLine."Original Measure Name";

      IF AnalysisReportChartLine.GET(TempAnalysisReportChartLine."User ID",
           TempAnalysisReportChartLine."Analysis Area",
           TempAnalysisReportChartLine.Name,
           TempAnalysisReportChartLine."Analysis Line Line No.",
           TempAnalysisReportChartLine."Analysis Column Line No.")
      THEN
        TempAnalysisReportChartLine."Chart Type" := AnalysisReportChartLine."Chart Type";

      TempAnalysisReportChartLine.INSERT;
    END;

    LOCAL PROCEDURE SetChartTypesToDefault@13(VAR TempAnalysisReportChartLine@1000 : TEMPORARY Record 771);
    VAR
      TempAnalysisReportChartLine2@1004 : TEMPORARY Record 771;
    BEGIN
      TempAnalysisReportChartLine2.COPY(TempAnalysisReportChartLine,TRUE);

      SetMeasureChartTypesToDefault(TempAnalysisReportChartLine2);

      TempAnalysisReportChartLine2.RESET;
      SetLinkToDimensionLines(TempAnalysisReportChartLine2);
      TempAnalysisReportChartLine2.SETFILTER("Chart Type",'<>%1',TempAnalysisReportChartLine2."Chart Type"::" ");
      IF TempAnalysisReportChartLine2.ISEMPTY THEN
        SetDimensionChartTypesToDefault(TempAnalysisReportChartLine2);
    END;

    PROCEDURE SetMeasureChartTypesToDefault@15(VAR AnalysisReportChartLine@1000 : Record 771);
    VAR
      BusinessChartBuffer@1003 : Record 485;
      MaxNumMeasures@1002 : Integer;
      NumOfMeasuresToBeSet@1001 : Integer;
    BEGIN
      AnalysisReportChartLine.RESET;
      SetLinkToMeasureLines(AnalysisReportChartLine);
      AnalysisReportChartLine.SETFILTER("Chart Type",'<>%1',AnalysisReportChartLine."Chart Type"::" ");
      MaxNumMeasures := BusinessChartBuffer.GetMaxNumberOfMeasures;
      NumOfMeasuresToBeSet := MaxNumMeasures - AnalysisReportChartLine.COUNT;
      IF NumOfMeasuresToBeSet > 0 THEN BEGIN
        AnalysisReportChartLine.SETRANGE("Chart Type",AnalysisReportChartLine."Chart Type"::" ");
        IF AnalysisReportChartLine.FINDSET THEN
          REPEAT
            AnalysisReportChartLine."Chart Type" := AnalysisReportChartLine.GetDefaultChartType;
            AnalysisReportChartLine.MODIFY;
            NumOfMeasuresToBeSet -= 1;
          UNTIL (NumOfMeasuresToBeSet = 0) OR (AnalysisReportChartLine.NEXT = 0);
      END;
    END;

    PROCEDURE SetDimensionChartTypesToDefault@16(VAR AnalysisReportChartLine@1000 : Record 771);
    BEGIN
      AnalysisReportChartLine.RESET;
      SetLinkToDimensionLines(AnalysisReportChartLine);
      AnalysisReportChartLine.SETRANGE("Chart Type",AnalysisReportChartLine."Chart Type"::" ");
      AnalysisReportChartLine.MODIFYALL("Chart Type",AnalysisReportChartLine.GetDefaultChartType);
    END;

    LOCAL PROCEDURE DeleteLines@2();
    VAR
      AnalysisReportChartLine@1000 : Record 771;
    BEGIN
      AnalysisReportChartLine.SETRANGE("User ID","User ID");
      AnalysisReportChartLine.SETRANGE("Analysis Area","Analysis Area");
      AnalysisReportChartLine.SETRANGE(Name,Name);
      AnalysisReportChartLine.DELETEALL;
    END;

    BEGIN
    END.
  }
}

