OBJECT Table 133 Incoming Document Attachment
{
  OBJECT-PROPERTIES
  {
    Date=11/26/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.43897;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Incoming Document Entry No.");
               "Created Date-Time" := ROUNDDATETIME(CURRENTDATETIME,1000);
               "Created By User Name" := USERID;

               SetFirstAttachmentAsDefault;
               SetFirstAttachmentAsMain;

               CheckDefault;
               CheckMainAttachment;
             END;

    OnModify=BEGIN
               CheckDefault;
               CheckMainAttachment;
             END;

    OnDelete=VAR
               IncomingDocumentAttachment@1000 : Record 133;
             BEGIN
               IncomingDocumentAttachment.SETRANGE("Incoming Document Entry No.","Incoming Document Entry No.");
               IncomingDocumentAttachment.SETFILTER("Line No.",'<>%1',"Line No.");

               IF Default THEN BEGIN
                 IF NOT IncomingDocumentAttachment.ISEMPTY THEN
                   ERROR(DefaultAttachErr);
               END;

               IF "Main Attachment" THEN BEGIN
                 IF NOT IncomingDocumentAttachment.ISEMPTY THEN
                   ERROR(MainAttachErr);
               END;
             END;

    CaptionML=[ENU=Incoming Document Attachment;
               ESM=Arch. adj. de docs. entrantes;
               FRC=Document entrant joint;
               ENC=Incoming Document Attachment];
  }
  FIELDS
  {
    { 1   ;   ;Incoming Document Entry No.;Integer;TableRelation="Incoming Document";
                                                   CaptionML=[ENU=Incoming Document Entry No.;
                                                              ESM=N§ mov. de documentos entrantes;
                                                              FRC=Nø de s‚quence du document entrant;
                                                              ENC=Incoming Document Entry No.] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESM=N§ l¡nea;
                                                              FRC=Nø de ligne;
                                                              ENC=Line No.] }
    { 3   ;   ;Created Date-Time   ;DateTime      ;CaptionML=[ENU=Created Date-Time;
                                                              ESM=Fecha / hora creaci¢n;
                                                              FRC=Date/heure cr‚ation;
                                                              ENC=Created Date-Time] }
    { 4   ;   ;Created By User Name;Code50        ;CaptionML=[ENU=Created By User Name;
                                                              ESM=Creado por nombre de usuario;
                                                              FRC=Cr‚‚ par nom utilisateur;
                                                              ENC=Created By User Name] }
    { 5   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 6   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ESM=Tipo;
                                                              FRC=Type;
                                                              ENC=Type];
                                                   OptionCaptionML=[ENU=" ,Image,PDF,Word,Excel,PowerPoint,Email,XML,Other";
                                                                    ESM=" ,Imagen,PDF,Word,Excel,PowerPoint,Correo electr¢nico,XML,Otros";
                                                                    FRC=" ,Image,PDF,Word,Excel,PowerPoint,Email,XML,Autre";
                                                                    ENC=" ,Image,PDF,Word,Excel,PowerPoint,Email,XML,Other"];
                                                   OptionString=[ ,Image,PDF,Word,Excel,PowerPoint,Email,XML,Other] }
    { 7   ;   ;File Extension      ;Text30        ;OnValidate=BEGIN
                                                                CASE LOWERCASE("File Extension") OF
                                                                  'jpg','jpeg','bmp','png','tiff','tif','gif':
                                                                    Type := Type::Image;
                                                                  'pdf':
                                                                    Type := Type::PDF;
                                                                  'docx','doc':
                                                                    Type := Type::Word;
                                                                  'xlsx','xls':
                                                                    Type := Type::Excel;
                                                                  'pptx','ppt':
                                                                    Type := Type::PowerPoint;
                                                                  'msg':
                                                                    Type := Type::Email;
                                                                  'xml':
                                                                    Type := Type::XML;
                                                                  ELSE
                                                                    Type := Type::Other;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=File Extension;
                                                              ESM=Extensi¢n archivo;
                                                              FRC=Extension de fichier;
                                                              ENC=File Extension] }
    { 8   ;   ;Content             ;BLOB          ;CaptionML=[ENU=Content;
                                                              ESM=Contenido;
                                                              FRC=Contenu;
                                                              ENC=Content] }
    { 9   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ESM=N§ documento;
                                                              FRC=Nø de document;
                                                              ENC=Document No.] }
    { 10  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESM=Fecha registro;
                                                              FRC=Date de report;
                                                              ENC=Posting Date] }
    { 11  ;   ;Document Table No. Filter;Integer  ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Document Table No. Filter;
                                                              ESM=Filtro de n.§ de tabla de documentos;
                                                              FRC=Filtre nø table document;
                                                              ENC=Document Table No. Filter] }
    { 12  ;   ;Document Type Filter;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Document Type Filter;
                                                              ESM=Filtro de tipo de documento;
                                                              FRC=Filtre type document;
                                                              ENC=Document Type Filter];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    ESM=Cotizaci¢n,Pedido,Factura,Nota cr‚dito,Pedido abierto,Devoluci¢n;
                                                                    FRC=Devis,Commande,Facture,Note de cr‚dit,Commande permanente,Retour;
                                                                    ENC=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 13  ;   ;Document No. Filter ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Document No. Filter;
                                                              ESM=Filtro n§ documento;
                                                              FRC=Filtre de nø de document;
                                                              ENC=Document No. Filter] }
    { 14  ;   ;Journal Template Name Filter;Code20;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Journal Template Name Filter;
                                                              ESM=Filtro de nombre de libros diario;
                                                              FRC=Filtre du nom de modŠle de journal;
                                                              ENC=Journal Template Name Filter] }
    { 15  ;   ;Journal Batch Name Filter;Code20   ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Journal Batch Name Filter;
                                                              ESM=Filtro de nombre de lote de diarios;
                                                              FRC=Filtre de nom de lot de journal;
                                                              ENC=Journal Batch Name Filter] }
    { 16  ;   ;Journal Line No. Filter;Integer    ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Journal Line No. Filter;
                                                              ESM=Filtro de n.§ de l¡nea de diarios;
                                                              FRC=Filtre de nø de ligne de journal;
                                                              ENC=Journal Line No. Filter] }
    { 17  ;   ;Default             ;Boolean       ;OnValidate=BEGIN
                                                                IF Default AND (NOT xRec.Default) THEN BEGIN
                                                                  ClearDefaultAttachmentsFromIncomingDocument;
                                                                  FindDataExchType;
                                                                  UpdateIncomingDocumentHeaderFields;
                                                                END ELSE
                                                                  CheckDefault;
                                                              END;

                                                   CaptionML=[ENU=Default;
                                                              ESM=Predeterminado;
                                                              FRC=Par d‚faut;
                                                              ENC=Default] }
    { 18  ;   ;Use for OCR         ;Boolean       ;OnValidate=BEGIN
                                                                IF "Use for OCR" THEN
                                                                  IF NOT (Type IN [Type::PDF,Type::Image]) THEN
                                                                    ERROR(MustBePdfOrPictureErr,Type::PDF,Type::Image);
                                                              END;

                                                   CaptionML=[ENU=Use for OCR;
                                                              ESM=Usar para OCR;
                                                              FRC=Utiliser pour OCR;
                                                              ENC=Use for OCR] }
    { 19  ;   ;External Document Reference;Text50 ;CaptionML=[ENU=External Document Reference;
                                                              ESM=Referencia de documento externa;
                                                              FRC=R‚f‚rence document externe;
                                                              ENC=External Document Reference] }
    { 20  ;   ;OCR Service Document Reference;Text50;
                                                   CaptionML=[ENU=OCR Service Document Reference;
                                                              ESM=Referencia de documento de servicio OCR;
                                                              FRC=R‚f‚rence document de service OCR;
                                                              ENC=OCR Service Document Reference] }
    { 21  ;   ;Generated from OCR  ;Boolean       ;CaptionML=[ENU=Generated from OCR;
                                                              ESM=Generado desde OCR;
                                                              FRC=G‚n‚r‚ … partir de OCR;
                                                              ENC=Generated from OCR];
                                                   Editable=No }
    { 22  ;   ;Main Attachment     ;Boolean       ;OnValidate=BEGIN
                                                                CheckMainAttachment;
                                                              END;

                                                   CaptionML=[ENU=Main Attachment;
                                                              ESM=Archivo adjunto principal;
                                                              FRC=PiŠce jointe principale;
                                                              ENC=Main Attachment] }
  }
  KEYS
  {
    {    ;Incoming Document Entry No.,Line No.    ;Clustered=Yes }
    {    ;Document No.,Posting Date                }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Created Date-Time,Name,File Extension    }
  }
  CODE
  {
    VAR
      DeleteQst@1004 : TextConst 'ENU=Do you want to delete the attachment?;ESM=¨Confirma que desea eliminar el archivo adjunto?;FRC=Souhaitez-vous supprimer la piŠce jointe?;ENC=Do you want to delete the attachment?';
      DefaultAttachErr@1005 : TextConst 'ENU=There should be one and only one default attachment.;ESM=Deber¡a haber solo un archivo adjunto predeterminado.;FRC=Il faut un et seulement un document par d‚faut.;ENC=There should be one and only one default attachment.';
      MainAttachErr@1000 : TextConst 'ENU=There should be one and only one main attachment.;ESM=Deber¡a haber solo un archivo adjunto principal.;FRC=Il ne faut qu''une seule piŠce jointe principale.;ENC=There should be one and only one main attachment.';
      MustBePdfOrPictureErr@1007 : TextConst '@@@=%1 and %2 are file types: PDF and Picture;ENU=Only files of type %1 and %2 can be used for OCR.;ESM=Solo los archivos de tipo %1 y %2 se pueden usar para OCR.;FRC=Seuls les fichiers de type %1 et %2 peuvent ˆtre utilis‚s pour OCR.;ENC=Only files of type %1 and %2 can be used for OCR.';

    PROCEDURE NewAttachment@1();
    BEGIN
      IF NOT CODEUNIT.RUN(CODEUNIT::"Import Attachment - Inc. Doc.",Rec) THEN
        ERROR('');
    END;

    PROCEDURE NewAttachmentFromGenJnlLine@8(GenJournalLine@1000 : Record 81);
    BEGIN
      IF GenJournalLine."Line No." = 0 THEN
        EXIT;
      SETRANGE("Incoming Document Entry No.",GenJournalLine."Incoming Document Entry No.");
      SETRANGE("Journal Template Name Filter",GenJournalLine."Journal Template Name");
      SETRANGE("Journal Batch Name Filter",GenJournalLine."Journal Batch Name");
      SETRANGE("Journal Line No. Filter",GenJournalLine."Line No.");

      NewAttachment;
    END;

    PROCEDURE NewAttachmentFromSalesDocument@15(SalesHeader@1000 : Record 36);
    BEGIN
      NewAttachmentFromDocument(
        SalesHeader."Incoming Document Entry No.",
        DATABASE::"Sales Header",
        SalesHeader."Document Type",
        SalesHeader."No.");
    END;

    PROCEDURE NewAttachmentFromPurchaseDocument@9(PurchaseHeader@1000 : Record 38);
    BEGIN
      NewAttachmentFromDocument(
        PurchaseHeader."Incoming Document Entry No.",
        DATABASE::"Purchase Header",
        PurchaseHeader."Document Type",
        PurchaseHeader."No.");
    END;

    PROCEDURE NewAttachmentFromDocument@10(EntryNo@1003 : Integer;TableID@1002 : Integer;DocumentType@1001 : Option;DocumentNo@1000 : Code[20]);
    BEGIN
      SETRANGE("Incoming Document Entry No.",EntryNo);
      SETRANGE("Document Table No. Filter",TableID);
      SETRANGE("Document Type Filter",DocumentType);
      SETRANGE("Document No. Filter",DocumentNo);
      NewAttachment;
    END;

    PROCEDURE NewAttachmentFromPostedDocument@13(DocumentNo@1000 : Code[20];PostingDate@1001 : Date);
    BEGIN
      SETRANGE("Document No.",DocumentNo);
      SETRANGE("Posting Date",PostingDate);
      NewAttachment;
    END;

    PROCEDURE Import@6() : Boolean;
    BEGIN
      EXIT(CODEUNIT.RUN(CODEUNIT::"Import Attachment - Inc. Doc.",Rec));
    END;

    PROCEDURE Export@3(DefaultFileName@1003 : Text;ShowFileDialog@1002 : Boolean) : Text;
    VAR
      TempBlob@1001 : Record 99008535;
      FileMgt@1000 : Codeunit 419;
    BEGIN
      IF "Incoming Document Entry No." = 0 THEN
        EXIT;
      CALCFIELDS(Content);
      IF NOT Content.HASVALUE THEN
        EXIT;

      IF DefaultFileName = '' THEN
        DefaultFileName := Name + '.' + "File Extension";

      TempBlob.Blob := Content;
      EXIT(FileMgt.BLOBExport(TempBlob,DefaultFileName,ShowFileDialog));
    END;

    PROCEDURE DeleteAttachment@2();
    VAR
      IncomingDocument@1000 : Record 130;
    BEGIN
      TESTFIELD("Incoming Document Entry No.");
      TESTFIELD("Line No.");

      IF Default THEN
        ERROR(DefaultAttachErr);

      IncomingDocument.GET("Incoming Document Entry No.");
      IncomingDocument.TESTFIELD(Posted,FALSE);
      IF CONFIRM(DeleteQst,FALSE) THEN
        DELETE;
    END;

    LOCAL PROCEDURE CheckDefault@12();
    VAR
      IncomingDocumentAttachment@1000 : Record 133;
    BEGIN
      IncomingDocumentAttachment.SETRANGE("Incoming Document Entry No.","Incoming Document Entry No.");
      IncomingDocumentAttachment.SETFILTER("Line No.",'<>%1',"Line No.");
      IncomingDocumentAttachment.SETRANGE(Default,TRUE);
      IF IncomingDocumentAttachment.ISEMPTY THEN BEGIN
        IF NOT Default THEN
          ERROR(DefaultAttachErr);
      END ELSE
        IF Default THEN
          ERROR(DefaultAttachErr);
    END;

    LOCAL PROCEDURE ClearDefaultAttachmentsFromIncomingDocument@17();
    VAR
      IncomingDocumentAttachment@1000 : Record 133;
    BEGIN
      IncomingDocumentAttachment.SETRANGE("Incoming Document Entry No.","Incoming Document Entry No.");
      IncomingDocumentAttachment.SETFILTER("Line No.",'<>%1',"Line No.");
      IncomingDocumentAttachment.MODIFYALL(Default,FALSE);
    END;

    PROCEDURE SendToOCR@14();
    VAR
      IncomingDocument@1000 : Record 130;
      TempBlob@1001 : Record 99008535;
      OCRServiceMgt@1002 : Codeunit 1294;
    BEGIN
      CALCFIELDS(Content);
      TempBlob.INIT;
      TempBlob."Primary Key" := "Incoming Document Entry No.";
      TempBlob.Blob := Content;

      IF "External Document Reference" = '' THEN
        "External Document Reference" := LOWERCASE(DELCHR(FORMAT(CREATEGUID),'=','{}-'));
      MODIFY;
      IncomingDocument.GET("Incoming Document Entry No.");
      OCRServiceMgt.UploadAttachment(
        TempBlob,
        STRSUBSTNO('%1.%2',Name,"File Extension"),
        "External Document Reference",
        IncomingDocument."OCR Service Doc. Template Code",
        IncomingDocument.RECORDID);
    END;

    PROCEDURE GetFullName@4() : Text;
    BEGIN
      EXIT(STRSUBSTNO('%1.%2',Name,"File Extension"));
    END;

    [Integration(TRUE)]
    PROCEDURE OnAttachBinaryFile@16();
    BEGIN
    END;

    LOCAL PROCEDURE FindDataExchType@7();
    BEGIN
      IF Type = Type::XML THEN
        CODEUNIT.RUN(CODEUNIT::"Data Exch. Type Selector",Rec);
    END;

    LOCAL PROCEDURE UpdateIncomingDocumentHeaderFields@11();
    VAR
      TempBlob@1003 : Record 99008535;
      IncomingDocument@1004 : Record 130;
      XMLDOMManagement@1002 : Codeunit 6224;
      XMLRootNode@1005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      InStream@1001 : InStream;
    BEGIN
      TempBlob.INIT;
      TempBlob.Blob := Content;
      TempBlob.Blob.CREATEINSTREAM(InStream);
      IF NOT XMLDOMManagement.LoadXMLDocumentFromInStream(InStream,XMLRootNode) THEN
        EXIT;
      IF NOT IncomingDocument.GET("Incoming Document Entry No.") THEN
        EXIT;
      ExtractHeaderFields(XMLRootNode,IncomingDocument);
    END;

    PROCEDURE ExtractHeaderFields@5(VAR XMLRootNode@1008 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR IncomingDocument@1003 : Record 130);
    BEGIN
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Vendor Name"));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Vendor Invoice No."));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Order No."));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Document Date"));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Due Date"));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Amount Excl. VAT"));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Amount Incl. VAT"));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("VAT Amount"));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Currency Code"));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Vendor VAT Registration No."));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Vendor IBAN"));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Vendor Bank Branch No."));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Vendor Bank Account No."));
      ExtractHeaderField(XMLRootNode,IncomingDocument,IncomingDocument.FIELDNO("Vendor Phone No."));
    END;

    LOCAL PROCEDURE ExtractHeaderField@27(VAR XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR IncomingDocument@1007 : Record 130;FieldNo@1006 : Integer);
    VAR
      Field@1001 : Record 2000000041;
      XMLDOMManagement@1004 : Codeunit 6224;
      OCRServiceMgt@1002 : Codeunit 1294;
      ImportXMLFileToDataExch@1005 : Codeunit 1203;
      RecRef@1009 : RecordRef;
      FieldRef@1010 : FieldRef;
      XmlNamespaceManager@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamespaceManager";
      DateVar@1011 : Date;
      DecimalVar@1012 : Decimal;
      IntegerVar@1013 : Integer;
      XmlValue@1014 : Text;
      XPath@1008 : Text;
    BEGIN
      IncomingDocument.FIND;
      XPath := IncomingDocument.GetDataExchangePath(FieldNo);
      IF XPath = '' THEN
        EXIT;
      XPath := ImportXMLFileToDataExch.EscapeMissingNamespacePrefix(XPath);
      RecRef.GETTABLE(IncomingDocument);
      FieldRef := RecRef.FIELD(FieldNo);
      Field.INIT;
      XMLDOMManagement.AddNamespaces(XmlNamespaceManager,XMLRootNode.OwnerDocument);
      XmlValue := XMLDOMManagement.FindNodeTextNs(XMLRootNode,XPath,XmlNamespaceManager);

      CASE FORMAT(FieldRef.TYPE) OF
        FORMAT(Field.Type::Text),FORMAT(Field.Type::Code):
          FieldRef.VALUE := COPYSTR(XmlValue,1,FieldRef.LENGTH);
        FORMAT(Field.Type::Date):
          IF EVALUATE(DateVar,XmlValue,9) THEN
            FieldRef.VALUE := DateVar
          ELSE
            IF EVALUATE(DateVar,OCRServiceMgt.DateConvertYYYYMMDD2XML(XmlValue),9) THEN
              FieldRef.VALUE := DateVar;
        FORMAT(Field.Type::Integer):
          IF EVALUATE(IntegerVar,XmlValue,9) THEN
            FieldRef.VALUE := IntegerVar;
        FORMAT(Field.Type::Decimal):
          IF EVALUATE(DecimalVar,XmlValue,9) THEN
            FieldRef.VALUE := DecimalVar;
      END;
      RecRef.SETTABLE(IncomingDocument);
      IncomingDocument.MODIFY;
    END;

    LOCAL PROCEDURE CheckMainAttachment@20();
    VAR
      IncomingDocumentAttachment@1000 : Record 133;
      MoreThanOneMainAttachmentExist@1001 : Boolean;
      NoMainAttachmentExist@1002 : Boolean;
    BEGIN
      IncomingDocumentAttachment.SETRANGE("Incoming Document Entry No.","Incoming Document Entry No.");
      IncomingDocumentAttachment.SETFILTER("Line No.",'<>%1',"Line No.");
      IncomingDocumentAttachment.SETRANGE("Main Attachment",TRUE);

      MoreThanOneMainAttachmentExist := "Main Attachment" AND (NOT IncomingDocumentAttachment.ISEMPTY);
      NoMainAttachmentExist := (NOT "Main Attachment") AND IncomingDocumentAttachment.ISEMPTY;

      IF MoreThanOneMainAttachmentExist OR NoMainAttachmentExist THEN
        ERROR(MainAttachErr);
    END;

    LOCAL PROCEDURE SetFirstAttachmentAsDefault@18();
    VAR
      IncomingDocumentAttachment@1000 : Record 133;
    BEGIN
      IF NOT Default THEN BEGIN
        IncomingDocumentAttachment.SETRANGE("Incoming Document Entry No.","Incoming Document Entry No.");
        IncomingDocumentAttachment.SETRANGE(Default,TRUE);
        IF IncomingDocumentAttachment.ISEMPTY THEN
          VALIDATE(Default,TRUE);
      END;
    END;

    LOCAL PROCEDURE SetFirstAttachmentAsMain@19();
    VAR
      IncomingDocumentAttachment@1000 : Record 133;
    BEGIN
      IF NOT "Main Attachment" THEN BEGIN
        IncomingDocumentAttachment.SETRANGE("Incoming Document Entry No.","Incoming Document Entry No.");
        IncomingDocumentAttachment.SETRANGE("Main Attachment",TRUE);
        IF IncomingDocumentAttachment.ISEMPTY THEN
          VALIDATE("Main Attachment",TRUE);
      END;
    END;

    PROCEDURE SetFiltersFromMainRecord@21(VAR MainRecordRef@1009 : RecordRef;VAR IncomingDocumentAttachment@1000 : Record 133);
    VAR
      SalesHeader@1001 : Record 36;
      PurchaseHeader@1002 : Record 38;
      GenJournalLine@1003 : Record 81;
      PurchInvHeader@1008 : Record 122;
      DataTypeManagement@1005 : Codeunit 701;
      DocumentNoFieldRef@1004 : FieldRef;
      PostingDateFieldRef@1006 : FieldRef;
      PostingDate@1007 : Date;
    BEGIN
      CASE MainRecordRef.NUMBER OF
        DATABASE::"Incoming Document":
          EXIT;
        DATABASE::"Sales Header":
          BEGIN
            MainRecordRef.SETTABLE(SalesHeader);
            IncomingDocumentAttachment.SETRANGE("Document Table No. Filter",MainRecordRef.NUMBER);
            IncomingDocumentAttachment.SETRANGE("Document Type Filter",SalesHeader."Document Type");
            IncomingDocumentAttachment.SETRANGE("Document No. Filter",SalesHeader."No.");
          END;
        DATABASE::"Purchase Header":
          BEGIN
            MainRecordRef.SETTABLE(PurchaseHeader);
            IncomingDocumentAttachment.SETRANGE("Document Table No. Filter",MainRecordRef.NUMBER);
            IncomingDocumentAttachment.SETRANGE("Document Type Filter",PurchaseHeader."Document Type");
            IncomingDocumentAttachment.SETRANGE("Document No. Filter",PurchaseHeader."No.");
          END;
        DATABASE::"Gen. Journal Line":
          BEGIN
            MainRecordRef.SETTABLE(GenJournalLine);
            IncomingDocumentAttachment.SETRANGE("Document Table No. Filter",MainRecordRef.NUMBER);
            IncomingDocumentAttachment.SETRANGE("Journal Template Name Filter",GenJournalLine."Journal Template Name");
            IncomingDocumentAttachment.SETRANGE("Journal Batch Name Filter",GenJournalLine."Journal Batch Name");
            IncomingDocumentAttachment.SETRANGE("Journal Line No. Filter",GenJournalLine."Line No.");
          END;
        ELSE BEGIN
          IF NOT DataTypeManagement.FindFieldByName(MainRecordRef,DocumentNoFieldRef,GenJournalLine.FIELDNAME("Document No.")) THEN
            IF NOT DataTypeManagement.FindFieldByName(MainRecordRef,DocumentNoFieldRef,PurchInvHeader.FIELDNAME("No.")) THEN
              EXIT;
          IF NOT DataTypeManagement.FindFieldByName(MainRecordRef,PostingDateFieldRef,GenJournalLine.FIELDNAME("Posting Date")) THEN
            EXIT;
          IncomingDocumentAttachment.SETRANGE("Document No.",FORMAT(DocumentNoFieldRef.VALUE));
          EVALUATE(PostingDate,FORMAT(PostingDateFieldRef.VALUE));
          IncomingDocumentAttachment.SETRANGE("Posting Date",PostingDate);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

