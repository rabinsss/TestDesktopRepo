OBJECT Table 1301 Mini Item Template
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               FieldRefArray@1001 : ARRAY [21] OF FieldRef;
               RecRef@1000 : RecordRef;
             BEGIN
               TESTFIELD("Template Name");
               RecRef.GETTABLE(Rec);
               CreateFieldRefArray(FieldRefArray,RecRef);

               InsertConfigurationTemplateHeaderAndLines;
             END;

    OnModify=VAR
               FieldRefArray@1000 : ARRAY [13] OF FieldRef;
               RecRef@1001 : RecordRef;
             BEGIN
               TESTFIELD(Code);
               TESTFIELD("Template Name");
               RecRef.GETTABLE(Rec);
               CreateFieldRefArray(FieldRefArray,RecRef);
               ConfigTemplateManagement.UpdateConfigTemplateAndLines(Code,"Template Name",DATABASE::Item,FieldRefArray);
             END;

    OnDelete=VAR
               ConfigTemplateHeader@1000 : Record 8618;
             BEGIN
               IF ConfigTemplateHeader.GET(Code) THEN BEGIN
                 ConfigTemplateManagement.DeleteRelatedTemplates(Code,DATABASE::"Default Dimension");
                 ConfigTemplateHeader.DELETE(TRUE);
               END;
             END;

    CaptionML=[ENU=Mini Item Template;
               ESM=Mini plantilla producto;
               FRC=ModŠle article mini;
               ENC=Mini Item Template];
  }
  FIELDS
  {
    { 1   ;   ;Key                 ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Key;
                                                              ESM=Clave;
                                                              FRC=Cl‚;
                                                              ENC=Key] }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Template Name       ;Text50        ;CaptionML=[ENU=Template Name;
                                                              ESM=Nombre libro;
                                                              FRC=Nom modŠle;
                                                              ENC=Template Name];
                                                   NotBlank=Yes }
    { 8   ;   ;Base Unit of Measure;Code10        ;TableRelation="Unit of Measure";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Base Unit of Measure;
                                                              ESM=Unidad medida base;
                                                              FRC=Unit‚ de mesure de base;
                                                              ENC=Base Unit of Measure] }
    { 10  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type = Type::Service THEN
                                                                  VALIDATE("Inventory Posting Group",'');
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ESM=Tipo;
                                                              FRC=Type;
                                                              ENC=Type];
                                                   OptionCaptionML=[ENU=Inventory,Service;
                                                                    ESM=Inventario,Servicio;
                                                                    FRC=Inventaire,Service;
                                                                    ENC=Inventory,Service];
                                                   OptionString=Inventory,Service }
    { 11  ;   ;Inventory Posting Group;Code10     ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[ENU=Inventory Posting Group;
                                                              ESM=Grupo contable inventario;
                                                              FRC=Groupe de report inventaire;
                                                              ENC=Inventory Posting Group] }
    { 14  ;   ;Item Disc. Group    ;Code20        ;TableRelation="Item Discount Group";
                                                   CaptionML=[ENU=Item Disc. Group;
                                                              ESM=Grupo dto. producto;
                                                              FRC=Groupe rem. article;
                                                              ENC=Item Disc. Group] }
    { 15  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              ESM=Permitir dto. factura;
                                                              FRC=Escompte de facture permis;
                                                              ENC=Allow Invoice Disc.] }
    { 19  ;   ;Price/Profit Calculation;Option    ;CaptionML=[ENU=Price/Profit Calculation;
                                                              ESM=C lculo precio/bf§ bruto;
                                                              FRC=Mode de calcul prix/profit;
                                                              ENC=Price/Profit Calculation];
                                                   OptionCaptionML=[ENU="Profit=Price-Cost,Price=Cost+Profit,No Relationship";
                                                                    ESM="Beneficio=Precio-Costo,Precio=Costo+Beneficio,Sin relaci¢n";
                                                                    FRC="Profit=Prix-Co–t,Prix=Co–t+Profit,Aucune relation";
                                                                    ENC="Profit=Price-Cost,Price=Cost+Profit,No Relationship"];
                                                   OptionString=Profit=Price-Cost,Price=Cost+Profit,No Relationship }
    { 20  ;   ;Profit %            ;Decimal       ;CaptionML=[ENU=Profit %;
                                                              ESM=% Bf§ bruto;
                                                              FRC=% profit;
                                                              ENC=Profit %];
                                                   DecimalPlaces=0:5;
                                                   MaxValue=100 }
    { 21  ;   ;Costing Method      ;Option        ;CaptionML=[ENU=Costing Method;
                                                              ESM=Valoraci¢n existencias;
                                                              FRC=Mode ‚valuation co–t;
                                                              ENC=Costing Method];
                                                   OptionCaptionML=[ENU=FIFO,LIFO,Specific,Average,Standard;
                                                                    ESM=FIFO,LIFO,Especial,Medio,Est ndar;
                                                                    FRC=FIFO,LIFO,Sp‚cifique,Moyen,Standard;
                                                                    ENC=FIFO,LIFO,Specific,Average,Standard];
                                                   OptionString=FIFO,LIFO,Specific,Average,Standard }
    { 28  ;   ;Indirect Cost %     ;Decimal       ;CaptionML=[ENU=Indirect Cost %;
                                                              ESM=% costo indirecto;
                                                              FRC=% co–t indirect;
                                                              ENC=Indirect Cost %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 87  ;   ;Price Includes VAT  ;Boolean       ;CaptionML=[ENU=Price Includes Tax;
                                                              ESM=Precio IVA incluido;
                                                              FRC=Prix TTC;
                                                              ENC=Price Includes Tax] }
    { 91  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ESM=Grupo contable producto;
                                                              FRC=Groupe de report de produit;
                                                              ENC=Gen. Prod. Posting Group] }
    { 96  ;   ;Automatic Ext. Texts;Boolean       ;CaptionML=[ENU=Automatic Ext. Text;
                                                              ESM=Texto adicional autom tico;
                                                              FRC=Textes ‚tendus automatiques;
                                                              ENC=Automatic Ext. Text] }
    { 99  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=Tax Prod. Posting Group;
                                                              ESM=Grupo registro IVA prod.;
                                                              FRC=Groupe de report de produit taxe;
                                                              ENC=Tax Prod. Posting Group] }
  }
  KEYS
  {
    {    ;Key                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ConfigTemplateManagement@1000 : Codeunit 8612;

    PROCEDURE CreateFieldRefArray@12(VAR FieldRefArray@1000 : ARRAY [13] OF FieldRef;RecRef@1003 : RecordRef);
    VAR
      I@1002 : Integer;
    BEGIN
      I := 1;

      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO(Type)));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Base Unit of Measure")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Automatic Ext. Texts")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Gen. Prod. Posting Group")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("VAT Prod. Posting Group")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Inventory Posting Group")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Costing Method")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Indirect Cost %")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Price Includes VAT")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Profit %")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Price/Profit Calculation")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Allow Invoice Disc.")));
      AddToArray(FieldRefArray,I,RecRef.FIELD(FIELDNO("Item Disc. Group")));
    END;

    LOCAL PROCEDURE AddToArray@4(VAR FieldRefArray@1000 : ARRAY [23] OF FieldRef;VAR I@1001 : Integer;CurrFieldRef@1002 : FieldRef);
    BEGIN
      FieldRefArray[I] := CurrFieldRef;
      I += 1;
    END;

    PROCEDURE InitializeTempRecordFromConfigTemplate@1(VAR TempMiniItemTemplate@1000 : TEMPORARY Record 1301;ConfigTemplateHeader@1001 : Record 8618);
    VAR
      RecRef@1003 : RecordRef;
    BEGIN
      TempMiniItemTemplate.INIT;
      TempMiniItemTemplate.Code := ConfigTemplateHeader.Code;
      TempMiniItemTemplate."Template Name" := ConfigTemplateHeader.Description;
      TempMiniItemTemplate.INSERT;

      RecRef.GETTABLE(TempMiniItemTemplate);

      ConfigTemplateManagement.ApplyTemplateLinesWithoutValidation(ConfigTemplateHeader,RecRef);

      RecRef.SETTABLE(TempMiniItemTemplate);
    END;

    PROCEDURE CreateConfigTemplateFromExistingItem@5(Item@1000 : Record 27;VAR TempMiniItemTemplate@1001 : TEMPORARY Record 1301);
    VAR
      MiniDimensionsTemplate@1002 : Record 1302;
      ConfigTemplateHeader@1010 : Record 8618;
      RecRef@1008 : RecordRef;
      FieldRefArray@1004 : ARRAY [13] OF FieldRef;
      NewTemplateCode@1011 : Code[10];
    BEGIN
      RecRef.GETTABLE(Item);
      CreateFieldRefArray(FieldRefArray,RecRef);

      ConfigTemplateManagement.CreateConfigTemplateAndLines(NewTemplateCode,'',DATABASE::Item,FieldRefArray);
      MiniDimensionsTemplate.CreateTemplatesFromExistingMasterRecord(Item."No.",NewTemplateCode,DATABASE::Item);
      ConfigTemplateHeader.GET(NewTemplateCode);
      InitializeTempRecordFromConfigTemplate(TempMiniItemTemplate,ConfigTemplateHeader);
    END;

    PROCEDURE SaveAsTemplate@7(Item@1000 : Record 27);
    VAR
      TempMiniItemTemplate@1001 : TEMPORARY Record 1301;
      MiniItemTemplateCard@1002 : Page 1342;
    BEGIN
      MiniItemTemplateCard.CreateFromItem(Item);
      MiniItemTemplateCard.SETRECORD(TempMiniItemTemplate);
      MiniItemTemplateCard.LOOKUPMODE := TRUE;
      IF MiniItemTemplateCard.RUNMODAL = ACTION::LookupOK THEN;
    END;

    LOCAL PROCEDURE InsertConfigurationTemplateHeaderAndLines@2();
    VAR
      FieldRefArray@1001 : ARRAY [13] OF FieldRef;
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      CreateFieldRefArray(FieldRefArray,RecRef);
      ConfigTemplateManagement.CreateConfigTemplateAndLines(Code,"Template Name",DATABASE::Item,FieldRefArray);
    END;

    PROCEDURE NewItemFromTemplate@3() : Code[20];
    VAR
      Item@1000 : Record 27;
      ConfigTemplateHeader@1004 : Record 8618;
      MiniConfigTemplates@1001 : Page 1340;
    BEGIN
      ConfigTemplateHeader.SETRANGE("Table ID",DATABASE::Item);
      CASE ConfigTemplateHeader.COUNT OF
        0:
          Item.INSERT(TRUE);
        1:
          BEGIN
            ConfigTemplateHeader.FINDFIRST;
            InsertItemFromTemplate(ConfigTemplateHeader,Item);
          END;
        ELSE BEGIN
          MiniConfigTemplates.SETTABLEVIEW(ConfigTemplateHeader);
          MiniConfigTemplates.LOOKUPMODE(TRUE);
          IF MiniConfigTemplates.RUNMODAL = ACTION::LookupOK THEN BEGIN
            MiniConfigTemplates.GETRECORD(ConfigTemplateHeader);
            InsertItemFromTemplate(ConfigTemplateHeader,Item);
          END ELSE
            EXIT;
        END;
      END;

      EXIT(Item."No.");
    END;

    LOCAL PROCEDURE OpenItemCardWithNewItemFromTemplate@6();
    VAR
      Item@1001 : Record 27;
      NewItemCode@1000 : Code[20];
    BEGIN
      NewItemCode := NewItemFromTemplate;

      IF NewItemCode <> '' THEN BEGIN
        Item.GET(NewItemCode);
        PAGE.RUN(PAGE::"Mini Item Card",Item);
      END;
    END;

    PROCEDURE InsertItemFromTemplate@16(ConfigTemplateHeader@1006 : Record 8618;VAR Item@1003 : Record 27);
    VAR
      MiniDimensionsTemplate@1001 : Record 1302;
      ConfigTemplateMgt@1002 : Codeunit 8612;
      RecRef@1000 : RecordRef;
    BEGIN
      Item.INSERT(TRUE);
      RecRef.GETTABLE(Item);
      ConfigTemplateMgt.UpdateRecord(ConfigTemplateHeader,RecRef);
      RecRef.SETTABLE(Item);

      MiniDimensionsTemplate.InsertDimensionsFromTemplates(ConfigTemplateHeader,Item."No.",DATABASE::Item);
    END;

    BEGIN
    END.
  }
}

