OBJECT Table 5996 Standard Service Code
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnInsert=BEGIN
               IF NOT StdServItemGroup.GET('',Code) THEN BEGIN
                 StdServItemGroup.INIT;
                 StdServItemGroup.Code := Code;
                 StdServItemGroup.INSERT;
               END;
             END;

    OnDelete=BEGIN
               StdServiceLine.RESET;
               StdServiceLine.SETRANGE("Standard Service Code",Code);
               StdServiceLine.DELETEALL(TRUE);

               StdServItemGroup.RESET;
               StdServItemGroup.SETRANGE(Code,Code);
               StdServItemGroup.DELETEALL;
             END;

    CaptionML=[ENU=Standard Service Code;
               ESM=C¢digo servicio est ndar;
               FRC=Code de service standard;
               ENC=Standard Service Code];
    PasteIsValid=No;
    LookupPageID=Page5958;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 3   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=VAR
                                                                Currency@1000 : Record 4;
                                                                Currency2@1001 : Record 4;
                                                              BEGIN
                                                                IF NOT Currency.GET("Currency Code") THEN
                                                                  Currency.InitRoundingPrecision;
                                                                IF NOT Currency2.GET(xRec."Currency Code") THEN
                                                                  Currency2.InitRoundingPrecision;

                                                                IF Currency."Amount Rounding Precision" <> Currency2."Amount Rounding Precision" THEN BEGIN
                                                                  StdServiceLine.RESET;
                                                                  StdServiceLine.SETRANGE("Standard Service Code",Code);
                                                                  StdServiceLine.SETRANGE(Type,StdServiceLine.Type::"G/L Account");
                                                                  StdServiceLine.SETFILTER("Amount Excl. VAT",'<>%1',0);
                                                                  IF StdServiceLine.FIND('-') THEN BEGIN
                                                                    IF NOT CONFIRM(
                                                                         STRSUBSTNO(
                                                                           Text001,FIELDCAPTION("Currency Code"),StdServiceLine.FIELDCAPTION("Amount Excl. VAT"),
                                                                           FIELDCAPTION("Currency Code")),TRUE)
                                                                    THEN
                                                                      ERROR(Text002);
                                                                    REPEAT
                                                                      StdServiceLine."Amount Excl. VAT" :=
                                                                        ROUND(StdServiceLine."Amount Excl. VAT",Currency."Amount Rounding Precision");
                                                                      StdServiceLine.MODIFY;
                                                                    UNTIL StdServiceLine.NEXT = 0;
                                                                  END;
                                                                END;
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ESM=C¢d. divisa;
                                                              FRC=Code devise;
                                                              ENC=Currency Code] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StdServItemGroup@1001 : Record 5998;
      StdServiceLine@1000 : Record 5997;
      Text001@1002 : TextConst 'ENU=If you change the %1, the %2 will be rounded according to the new %3.;ESM=Si cambia el %1, el %2 ser  redondeado con el nuevo %3.;FRC=Si vous modifiez le %1, le %2 sera arrondi d''aprŠs le nouveau %3.;ENC=If you change the %1, the %2 will be rounded according to the new %3.';
      Text002@1003 : TextConst 'ENU=The update has been interrupted to respect the warning.;ESM=Se ha interrumpido la actualizaci¢n para respetar la advertencia.;FRC=La mise … jour a ‚t‚ interrompue pour respecter l''avertissement.;ENC=The update has been interrupted to respect the warning.';
      Text003@1004 : TextConst 'ENU=%1 of the standard service code must be equal to %2 on the %3.;ESM=%1 del c¢digo servicio est ndar debe ser igual a %2 en %3.;FRC=%1 du code de service standard doit ˆtre ‚gal … %2 sur le %3.;ENC=%1 of the standard service code must be equal to %2 on the %3.';

    PROCEDURE InsertServiceLines@1(ServiceHeader@1000 : Record 5900);
    VAR
      Currency@1001 : Record 4;
      ServHeader@1003 : Record 5900;
      ServLine@1004 : Record 5902;
      StdServCode@1005 : Record 5996;
      StdServLine@1006 : Record 5997;
      StdServItemGrCode@1009 : Record 5998;
      StdServItemGrCodesForm@1007 : Page 5959;
      Factor@1008 : Integer;
    BEGIN
      ServiceHeader.TESTFIELD("No.");
      ServiceHeader.TESTFIELD("Document Type");

      CLEAR(StdServItemGrCodesForm);
      StdServItemGrCode.RESET;
      StdServItemGrCodesForm.SETRECORD(StdServItemGrCode);
      StdServItemGrCodesForm.SETTABLEVIEW(StdServItemGrCode);
      StdServItemGrCodesForm.LOOKUPMODE := TRUE;

      IF NOT (StdServItemGrCodesForm.RUNMODAL = ACTION::LookupOK) THEN
        EXIT;
      StdServItemGrCodesForm.GETRECORD(StdServItemGrCode);

      IF StdServCode.GET(StdServItemGrCode.Code) THEN BEGIN
        StdServCode.TESTFIELD(Code);
        IF StdServCode."Currency Code" <> ServiceHeader."Currency Code" THEN
          ERROR(
            Text003,
            StdServCode.FIELDCAPTION("Currency Code"),
            ServiceHeader.FIELDCAPTION("Currency Code"),ServiceHeader.TABLECAPTION);
        StdServLine.SETRANGE("Standard Service Code",StdServCode.Code);
        ServLine."Document Type" := ServiceHeader."Document Type";
        ServLine."Document No." := ServiceHeader."No.";
        ServLine.SETRANGE("Document Type",ServiceHeader."Document Type");
        ServLine.SETRANGE("Document No.",ServiceHeader."No.");
        IF ServHeader."Prices Including VAT" THEN
          Factor := 1
        ELSE
          Factor := 0;
        ServLine.LOCKTABLE;
        StdServLine.LOCKTABLE;
        IF StdServLine.FIND('-') THEN
          REPEAT
            ServLine.INIT;
            ServLine."Line No." := 0;
            ServLine.VALIDATE(Type,StdServLine.Type);
            IF StdServLine.Type = StdServLine.Type::" " THEN BEGIN
              ServLine.VALIDATE("No.",StdServLine."No.");
              ServLine.Description := StdServLine.Description
            END ELSE
              IF NOT StdServLine.EmptyLine THEN BEGIN
                StdServLine.TESTFIELD("No.");
                ServLine.VALIDATE("No.",StdServLine."No.");
                IF StdServLine."Variant Code" <> '' THEN
                  ServLine.VALIDATE("Variant Code",StdServLine."Variant Code");
                ServLine.VALIDATE(Quantity,StdServLine.Quantity);
                IF StdServLine."Unit of Measure Code" <> '' THEN
                  ServLine.VALIDATE("Unit of Measure Code",StdServLine."Unit of Measure Code");
                ServLine.Description := StdServLine.Description;
                IF StdServLine.Type = StdServLine.Type::"G/L Account" THEN
                  ServLine.VALIDATE(
                    "Unit Price",
                    ROUND(
                      StdServLine."Amount Excl. VAT" *
                      (ServLine."VAT %" / 100 * Factor + 1),Currency."Unit-Amount Rounding Precision"));
              END;
            ServLine."Dimension Set ID" := StdServLine."Dimension Set ID";
            IF StdServLine.InsertLine THEN BEGIN
              ServLine."Line No." := GetNextLineNo(ServLine);
              ServLine.INSERT(TRUE);
              InsertExtendedText(ServLine);
            END;
          UNTIL StdServLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE GetNextLineNo@2(ServLine@1001 : Record 5902) : Integer;
    BEGIN
      ServLine.SETRANGE("Document Type",ServLine."Document Type");
      ServLine.SETRANGE("Document No.",ServLine."Document No.");
      IF ServLine.FINDLAST THEN
        EXIT(ServLine."Line No." + 10000);
      EXIT(10000);
    END;

    LOCAL PROCEDURE InsertExtendedText@4(ServLine@1000 : Record 5902);
    VAR
      TransferExtendedText@1001 : Codeunit 378;
    BEGIN
      IF TransferExtendedText.ServCheckIfAnyExtText(ServLine,FALSE) THEN
        TransferExtendedText.InsertServExtText(ServLine);
    END;

    BEGIN
    END.
  }
}

