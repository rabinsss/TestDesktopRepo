OBJECT Table 99000880 Order Promising Line
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Order Promising Line;
               ESM=L°n. compr. entrega ped.;
               FRC=Ligne promesse de livraison;
               ENC=Order Promising Line];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ESM=Nß mov.;
                                                              FRC=N¯ Çcriture;
                                                              ENC=Entry No.] }
    { 10  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              ESM=Nß producto;
                                                              FRC=N¯ d'article;
                                                              ENC=Item No.] }
    { 11  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              ESM=C¢d. variante;
                                                              FRC=Code variante;
                                                              ENC=Variant Code];
                                                   Editable=No }
    { 12  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              ESM=C¢d. almacÇn;
                                                              FRC=Code d'emplacement;
                                                              ENC=Location Code];
                                                   Editable=No }
    { 13  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ESM=Cantidad;
                                                              FRC=QuantitÇ;
                                                              ENC=Quantity];
                                                   DecimalPlaces=0:5 }
    { 14  ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ESM=C¢d. unidad medida;
                                                              FRC=Code unitÇ de mesure;
                                                              ENC=Unit of Measure Code];
                                                   Editable=No }
    { 15  ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[ENU=Qty. per Unit of Measure;
                                                              ESM=Cdad. por unidad medida;
                                                              FRC=QuantitÇ par unitÇ de mesure;
                                                              ENC=Qty. per Unit of Measure];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 16  ;   ;Unavailable Quantity;Decimal       ;CaptionML=[ENU=Unavailable Quantity;
                                                              ESM=Cdad. no disponible;
                                                              FRC=QuantitÇ non disponible;
                                                              ENC=Unavailable Quantity];
                                                   DecimalPlaces=0:5 }
    { 17  ;   ;Quantity (Base)     ;Decimal       ;CaptionML=[ENU=Quantity (Base);
                                                              ESM=Cantidad (base);
                                                              FRC=QuantitÇ (base);
                                                              ENC=Quantity (Base)];
                                                   DecimalPlaces=0:5 }
    { 18  ;   ;Unavailable Quantity (Base);Decimal;CaptionML=[ENU=Unavailable Quantity (Base);
                                                              ESM=Cdad. (base) no disponible;
                                                              FRC=QuantitÇ non disponible (base);
                                                              ENC=Unavailable Quantity (Base)];
                                                   DecimalPlaces=0:5 }
    { 19  ;   ;Required Quantity (Base);Decimal   ;CaptionML=[ENU=Required Quantity (Base);
                                                              ESM=Cantidad requerida (base);
                                                              FRC=QuantitÇ requise (base);
                                                              ENC=Required Quantity (Base)];
                                                   DecimalPlaces=0:5 }
    { 20  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              ESM=Tipo procedencia mov.;
                                                              FRC=Type origine;
                                                              ENC=Source Type];
                                                   OptionCaptionML=[ENU=" ,Sales,Requisition Line,Purchase,Item Journal,BOM Journal,Item Ledger Entry,Prod. Order Line,Prod. Order Component,Planning Line,Planning Component,Transfer,Service Order,Job";
                                                                    ESM=" ,Ventas,L°n. repos.,Compras,Diario prod.,Diario L.M.,Mov. prod.,L°n. orden producc.,Comp. orden producc.,Planif. l°n.,Planif. componente,Transfer.,Pedido servicio,Proyecto";
                                                                    FRC=" ,Vente,Ligne de rÇquisition,Achat,Feuille article,Feuille nomenclature,êcriture article,Ligne Bon de production,Composante Bon de production,Ligne planification,Composante planification,Transfert,Commande service,Projet";
                                                                    ENC=" ,Sales,Requisition Line,Purchase,Item Journal,BOM Journal,Item Ledger Entry,Prod. Order Line,Prod. Order Component,Planning Line,Planning Component,Transfer,Service Order,Job"];
                                                   OptionString=[ ,Sales,Requisition Line,Purchase,Item Journal,BOM Journal,Item Ledger Entry,Prod. Order Line,Prod. Order Component,Planning Line,Planning Component,Transfer,Service Order,Job] }
    { 21  ;   ;Source Subtype      ;Integer       ;CaptionML=[ENU=Source Subtype;
                                                              ESM=Subtipo origen;
                                                              FRC=Sous-type origine;
                                                              ENC=Source Subtype] }
    { 22  ;   ;Source ID           ;Code20        ;CaptionML=[ENU=Source ID;
                                                              ESM=Id. origen;
                                                              FRC=Code origine;
                                                              ENC=Source ID] }
    { 23  ;   ;Source Batch Name   ;Code10        ;CaptionML=[ENU=Source Batch Name;
                                                              ESM=Nombre secci¢n origen;
                                                              FRC=Nom de lot source;
                                                              ENC=Source Batch Name] }
    { 25  ;   ;Source Line No.     ;Integer       ;CaptionML=[ENU=Source Line No.;
                                                              ESM=Nß l°n. origen;
                                                              FRC=N¯ de ligne source;
                                                              ENC=Source Line No.] }
    { 30  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 31  ;   ;Required Quantity   ;Decimal       ;CaptionML=[ENU=Required Quantity;
                                                              ESM=Cantidad requerida;
                                                              FRC=QuantitÇ requise;
                                                              ENC=Required Quantity];
                                                   DecimalPlaces=0:5 }
    { 40  ;   ;Requested Delivery Date;Date       ;OnValidate=VAR
                                                                SalesLine@1000 : Record 37;
                                                                ServLine@1001 : Record 5902;
                                                                JobPlanningLine@1002 : Record 1003;
                                                              BEGIN
                                                                CASE "Source Type" OF
                                                                  "Source Type"::Sales:
                                                                    BEGIN
                                                                      SalesLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                      "Requested Shipment Date" := CalcReqShipDate(SalesLine);
                                                                    END;
                                                                  "Source Type"::"Service Order":
                                                                    BEGIN
                                                                      ServLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                      "Requested Shipment Date" := ServLine."Needed by Date";
                                                                    END;
                                                                  "Source Type"::Job:
                                                                    BEGIN
                                                                      JobPlanningLine.SETRANGE("Job No.","Source ID");
                                                                      JobPlanningLine.SETRANGE("Job Contract Entry No.","Source Line No.");
                                                                      JobPlanningLine.FINDFIRST;
                                                                      "Requested Shipment Date" := JobPlanningLine."Planning Date";
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Requested Delivery Date;
                                                              ESM=Fecha entrega requerida;
                                                              FRC=Date livraison demandÇe;
                                                              ENC=Requested Delivery Date] }
    { 41  ;   ;Planned Delivery Date;Date         ;OnValidate=VAR
                                                                SalesLine@1000 : Record 37;
                                                                ServLine@1001 : Record 5902;
                                                                JobPlanningLine@1002 : Record 1003;
                                                              BEGIN
                                                                IF "Planned Delivery Date" <> 0D THEN
                                                                  CASE "Source Type" OF
                                                                    "Source Type"::Sales:
                                                                      BEGIN
                                                                        SalesLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                        SalesLine.SuspendStatusCheck(TRUE);
                                                                        SalesLine.VALIDATE("Planned Delivery Date","Planned Delivery Date");
                                                                        "Planned Delivery Date" := SalesLine."Planned Delivery Date";
                                                                        "Earliest Shipment Date" := SalesLine."Shipment Date";
                                                                      END;
                                                                    "Source Type"::"Service Order":
                                                                      BEGIN
                                                                        ServLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                        ServLine.VALIDATE("Planned Delivery Date","Planned Delivery Date");
                                                                        "Planned Delivery Date" := ServLine."Planned Delivery Date";
                                                                        "Earliest Shipment Date" := ServLine."Needed by Date";
                                                                      END;
                                                                    "Source Type"::Job:
                                                                      BEGIN
                                                                        JobPlanningLine.SETRANGE("Job No.","Source ID");
                                                                        JobPlanningLine.SETRANGE("Job Contract Entry No.","Source Line No.");
                                                                        JobPlanningLine.FINDFIRST;
                                                                        JobPlanningLine.VALIDATE("Planned Delivery Date","Planned Delivery Date");
                                                                        "Planned Delivery Date" := JobPlanningLine."Planned Delivery Date";
                                                                        "Earliest Shipment Date" := JobPlanningLine."Planning Date";
                                                                      END;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Planned Delivery Date;
                                                              ESM=Fecha entrega planificada;
                                                              FRC=Date livraison planifiÇe;
                                                              ENC=Planned Delivery Date] }
    { 42  ;   ;Original Shipment Date;Date        ;CaptionML=[ENU=Original Shipment Date;
                                                              ESM=Fecha env°o original;
                                                              FRC=Date de livraison initiale;
                                                              ENC=Original Shipment Date] }
    { 43  ;   ;Earliest Shipment Date;Date        ;OnValidate=VAR
                                                                SalesLine@1000 : Record 37;
                                                              BEGIN
                                                                CASE "Source Type" OF
                                                                  "Source Type"::Sales:
                                                                    IF "Earliest Shipment Date" <> 0D THEN BEGIN
                                                                      SalesLine.GET("Source Subtype","Source ID","Source Line No.");
                                                                      SalesLine.VALIDATE("Shipment Date","Earliest Shipment Date");
                                                                      "Planned Delivery Date" := SalesLine."Planned Delivery Date";
                                                                    END;
                                                                  "Source Type"::"Service Order":
                                                                    IF "Earliest Shipment Date" <> 0D THEN
                                                                      "Planned Delivery Date" := "Earliest Shipment Date";
                                                                  "Source Type"::Job:
                                                                    IF "Earliest Shipment Date" <> 0D THEN
                                                                      "Planned Delivery Date" := "Earliest Shipment Date";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Earliest Shipment Date;
                                                              ESM=Primera fecha env°o;
                                                              FRC=Date de livraison au plus tìt;
                                                              ENC=Earliest Shipment Date] }
    { 44  ;   ;Requested Shipment Date;Date       ;CaptionML=[ENU=Requested Shipment Date;
                                                              ESM=Fecha de env°o solicitada;
                                                              FRC=Date de livraison requise;
                                                              ENC=Requested Shipment Date];
                                                   Editable=No }
    { 45  ;   ;Unavailability Date ;Date          ;CaptionML=[ENU=Unavailability Date;
                                                              ESM=Fecha de no disponibilidad;
                                                              FRC=Date indisponibilitÇ;
                                                              ENC=Unavailability Date] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Requested Shipment Date                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE TransferFromSalesLine@2(VAR SalesLine@1000 : Record 37);
    BEGIN
      "Source Type" := "Source Type"::Sales;
      "Source Subtype" := SalesLine."Document Type";
      "Source ID" := SalesLine."Document No.";
      "Source Line No." := SalesLine."Line No.";

      "Item No." := SalesLine."No.";
      "Variant Code" := SalesLine."Variant Code";
      "Location Code" := SalesLine."Location Code";
      VALIDATE("Requested Delivery Date",SalesLine."Requested Delivery Date");
      "Original Shipment Date" := SalesLine."Shipment Date";
      Description := SalesLine.Description;
      Quantity := SalesLine."Outstanding Quantity";
      "Unit of Measure Code" := SalesLine."Unit of Measure Code";
      "Qty. per Unit of Measure" := SalesLine."Qty. per Unit of Measure";
      "Quantity (Base)" := SalesLine."Outstanding Qty. (Base)";
    END;

    PROCEDURE TransferFromServLine@3(VAR ServLine@1000 : Record 5902);
    BEGIN
      "Source Type" := "Source Type"::"Service Order";
      "Source Subtype" := ServLine."Document Type";
      "Source ID" := ServLine."Document No.";
      "Source Line No." := ServLine."Line No.";

      "Item No." := ServLine."No.";
      "Variant Code" := ServLine."Variant Code";
      "Location Code" := ServLine."Location Code";
      VALIDATE("Requested Delivery Date",ServLine."Requested Delivery Date");
      "Original Shipment Date" := ServLine."Needed by Date";
      Description := ServLine.Description;
      Quantity := ServLine."Outstanding Quantity";
      "Unit of Measure Code" := ServLine."Unit of Measure Code";
      "Qty. per Unit of Measure" := ServLine."Qty. per Unit of Measure";
      "Quantity (Base)" := ServLine."Outstanding Qty. (Base)";
    END;

    PROCEDURE TransferFromJobPlanningLine@4(VAR JobPlanningLine@1000 : Record 1003);
    BEGIN
      "Source Type" := "Source Type"::Job;
      "Source Subtype" := JobPlanningLine.Status;
      "Source ID" := JobPlanningLine."Job No.";
      "Source Line No." := JobPlanningLine."Job Contract Entry No.";

      "Item No." := JobPlanningLine."No.";
      "Variant Code" := JobPlanningLine."Variant Code";
      "Location Code" := JobPlanningLine."Location Code";
      VALIDATE("Requested Delivery Date",JobPlanningLine."Requested Delivery Date");
      "Original Shipment Date" := JobPlanningLine."Planning Date";
      Description := JobPlanningLine.Description;
      Quantity := JobPlanningLine."Remaining Qty.";
      "Unit of Measure Code" := JobPlanningLine."Unit of Measure Code";
      "Qty. per Unit of Measure" := JobPlanningLine."Qty. per Unit of Measure";
      "Quantity (Base)" := JobPlanningLine."Remaining Qty. (Base)";
    END;

    LOCAL PROCEDURE CalcReqShipDate@1(SalesLine@1000 : Record 37) : Date;
    BEGIN
      IF (SalesLine."Requested Delivery Date" <> 0D) AND
         (SalesLine."Promised Delivery Date" = 0D)
      THEN BEGIN
        SalesLine.SuspendStatusCheck(TRUE);
        SalesLine.VALIDATE("Requested Delivery Date",SalesLine."Requested Delivery Date");
      END;
      EXIT(SalesLine."Shipment Date");
    END;

    PROCEDURE GetLastEntryNo@5() LastEntryNo : Integer;
    VAR
      CopyOfOrderPromisingLine@1000 : Record 99000880;
    BEGIN
      CopyOfOrderPromisingLine.COPY(Rec);
      RESET;
      IF FINDLAST THEN
        LastEntryNo := "Entry No.";
      COPY(CopyOfOrderPromisingLine);
    END;

    PROCEDURE CalcAvailability@18() : Decimal;
    VAR
      Item@1004 : Record 27;
      AvailableToPromise@1001 : Codeunit 5790;
      GrossRequirement@1002 : Decimal;
      ScheduledReceipt@1003 : Decimal;
      PeriodType@1006 : 'Day,Week,Month,Quarter,Year';
      LookaheadDateformula@1005 : DateFormula;
      AvailabilityDate@1007 : Date;
    BEGIN
      IF Item.GET("Item No.") THEN BEGIN
        IF "Original Shipment Date" > 0D THEN
          AvailabilityDate := "Original Shipment Date"
        ELSE
          AvailabilityDate := WORKDATE;

        Item.RESET;
        Item.SETRANGE("Date Filter",0D,AvailabilityDate);
        Item.SETRANGE("Variant Filter","Variant Code");
        Item.SETRANGE("Location Filter","Location Code");
        Item.SETRANGE("Drop Shipment Filter",FALSE);
        EXIT(
          AvailableToPromise.QtyAvailabletoPromise(
            Item,
            GrossRequirement,
            ScheduledReceipt,
            AvailabilityDate,
            PeriodType,
            LookaheadDateformula));
      END;
    END;

    BEGIN
    END.
  }
}

