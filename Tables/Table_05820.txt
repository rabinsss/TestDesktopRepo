OBJECT Table 5820 Cost Element Buffer
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cost Element Buffer;
               ESM=Mem. inter. elementos de costo;
               FRC=Tampon ‚l‚ment de co–t;
               ENC=Cost Element Buffer];
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ESM=Tipo;
                                                              FRC=Type;
                                                              ENC=Type];
                                                   OptionCaptionML=[ENU=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance,Total;
                                                                    ESM=Costo directo,Revaluaci¢n,Redondeo,Costo indirecto,Variaci¢n,Total;
                                                                    FRC=Co–t direct,R‚‚valuation,Arrondissement,Co–t indirect,Variance,Total;
                                                                    ENC=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance,Total];
                                                   OptionString=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance,Total }
    { 2   ;   ;Variance Type       ;Option        ;CaptionML=[ENU=Variance Type;
                                                              ESM=Tipo desviaci¢n;
                                                              FRC=Type ‚cart;
                                                              ENC=Variance Type];
                                                   OptionCaptionML=[ENU=" ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted";
                                                                    ESM=" ,Compras,Materiales,Capacidad,Gastos gen. capacidad,Gastos gen. fabr.,Subcontrataci¢n";
                                                                    FRC=" ,Achat,MatiŠre,Capacit‚,Utilisation fixe de capacit‚,Frais g‚n‚raux matiŠre,Sous-traitance";
                                                                    ENC=" ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted"];
                                                   OptionString=[ ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted] }
    { 3   ;   ;Actual Cost         ;Decimal       ;CaptionML=[ENU=Actual Cost;
                                                              ESM=Costo real;
                                                              FRC=Co–t r‚el;
                                                              ENC=Actual Cost];
                                                   AutoFormatType=1 }
    { 4   ;   ;Actual Cost (ACY)   ;Decimal       ;CaptionML=[ENU=Actual Cost (ACY);
                                                              ESM=Costo real (DA);
                                                              FRC=Montant (devise additionnelle);
                                                              ENC=Actual Cost (ACY)];
                                                   AutoFormatType=1 }
    { 5   ;   ;Rounding Residual   ;Decimal       ;CaptionML=[ENU=Rounding Residual;
                                                              ESM=Redondeo residual;
                                                              FRC=Arrondissement r‚siduel;
                                                              ENC=Rounding Residual];
                                                   AutoFormatType=1 }
    { 6   ;   ;Rounding Residual (ACY);Decimal    ;CaptionML=[ENU=Rounding Residual (ACY);
                                                              ESM=Redondeo residual (DA);
                                                              FRC=Arrondissement r‚siduel (dev. add.);
                                                              ENC=Rounding Residual (ACY)];
                                                   AutoFormatType=1 }
    { 7   ;   ;Expected Cost       ;Decimal       ;CaptionML=[ENU=Expected Cost;
                                                              ESM=Costo esperado;
                                                              FRC=Co–t pr‚vu;
                                                              ENC=Expected Cost];
                                                   AutoFormatType=1 }
    { 8   ;   ;Expected Cost (ACY) ;Decimal       ;CaptionML=[ENU=Expected Cost (ACY);
                                                              ESM=Costo esperado (DA);
                                                              FRC=Co–ts pr‚vus (dev.add.);
                                                              ENC=Expected Cost (ACY)];
                                                   AutoFormatType=1 }
    { 9   ;   ;Invoiced Quantity   ;Decimal       ;CaptionML=[ENU=Invoiced Quantity;
                                                              ESM=Cantidad facturada;
                                                              FRC=Quantit‚ factur‚e;
                                                              ENC=Invoiced Quantity] }
    { 10  ;   ;Remaining Quantity  ;Decimal       ;CaptionML=[ENU=Remaining Quantity;
                                                              ESM=Cantidad pendiente;
                                                              FRC=Quantit‚ restante;
                                                              ENC=Remaining Quantity] }
    { 11  ;   ;Inbound Completely Invoiced;Boolean;CaptionML=[ENU=Inbound Completely Invoiced;
                                                              ESM=Entrada fact. completamente;
                                                              FRC=Entr‚e entiŠrement factur‚e;
                                                              ENC=Inbound Completely Invoiced] }
    { 12  ;   ;Last Valid Value Entry No;Integer  ;CaptionML=[ENU=Last Valid Value Entry No;
                                                              ESM=N§ £ltimo mov. valor v lido;
                                                              FRC=Nø ‚criture de derniŠre valeur valide;
                                                              ENC=Last Valid Value Entry No] }
  }
  KEYS
  {
    {    ;Type,Variance Type                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE AddActualCost@1(NewType@1000 : Option;NewVarianceType@1003 : Option;NewActualCost@1001 : Decimal;NewActualCostACY@1002 : Decimal);
    BEGIN
      IF NOT HasNewCost(NewActualCost,NewActualCostACY) THEN BEGIN
        Retrieve(NewType,NewVarianceType);
        EXIT;
      END;
      IF Retrieve(NewType,NewVarianceType) THEN BEGIN
        "Actual Cost" := "Actual Cost" + NewActualCost;
        "Actual Cost (ACY)" := "Actual Cost (ACY)" + NewActualCostACY;
        MODIFY;
      END ELSE BEGIN
        "Actual Cost" := NewActualCost;
        "Actual Cost (ACY)" := NewActualCostACY;
        INSERT;
      END;
    END;

    PROCEDURE AddExpectedCost@2(NewType@1000 : Option;NewVarianceType@1003 : Option;NewExpectedCost@1001 : Decimal;NewExpectedCostACY@1002 : Decimal);
    BEGIN
      IF NOT HasNewCost(NewExpectedCost,NewExpectedCostACY) THEN BEGIN
        Retrieve(NewType,NewVarianceType);
        EXIT;
      END;
      IF Retrieve(NewType,NewVarianceType) THEN BEGIN
        "Expected Cost" := "Expected Cost" + NewExpectedCost;
        "Expected Cost (ACY)" := "Expected Cost (ACY)" + NewExpectedCostACY;
        MODIFY;
      END ELSE BEGIN
        "Expected Cost" := NewExpectedCost;
        "Expected Cost (ACY)" := NewExpectedCostACY;
        INSERT;
      END;
    END;

    LOCAL PROCEDURE AddRndgResidual@3(NewType@1000 : Option;NewVarianceType@1003 : Option;NewRndgResidual@1001 : Decimal;NewRndgResidualACY@1002 : Decimal);
    BEGIN
      IF NOT HasNewCost(NewRndgResidual,NewRndgResidualACY) THEN BEGIN
        Retrieve(NewType,NewVarianceType);
        EXIT;
      END;
      IF Retrieve(NewType,NewVarianceType) THEN BEGIN
        "Rounding Residual" := "Rounding Residual" + NewRndgResidual;
        "Rounding Residual (ACY)" := "Rounding Residual (ACY)" + NewRndgResidualACY;
        MODIFY;
      END ELSE BEGIN
        "Rounding Residual" := NewRndgResidual;
        "Rounding Residual (ACY)" := NewRndgResidualACY;
        INSERT;
      END;
    END;

    PROCEDURE RoundActualCost@77(ShareOfTotalCost@1003 : Decimal;AmtRndgPrec@1001 : Decimal;AmtRndgPrecACY@1002 : Decimal);
    BEGIN
      "Actual Cost" := ROUND("Actual Cost" * ShareOfTotalCost,AmtRndgPrec);
      "Actual Cost (ACY)" := ROUND("Actual Cost (ACY)" * ShareOfTotalCost,AmtRndgPrecACY);
    END;

    PROCEDURE ExcludeEntryFromAvgCostCalc@69(ValueEntry@1001 : Record 5802);
    BEGIN
      "Remaining Quantity" := "Remaining Quantity" - ValueEntry."Item Ledger Entry Quantity";
      "Actual Cost" := "Actual Cost" - ValueEntry."Cost Amount (Actual)" - ValueEntry."Cost Amount (Expected)";
      "Actual Cost (ACY)" :=
        "Actual Cost (ACY)" - ValueEntry."Cost Amount (Actual) (ACY)" - ValueEntry."Cost Amount (Expected) (ACY)";
    END;

    PROCEDURE ExcludeBufFromAvgCostCalc@6(InvtAdjmtBuffer@1001 : Record 5895);
    BEGIN
      "Remaining Quantity" := "Remaining Quantity" - InvtAdjmtBuffer."Item Ledger Entry Quantity";
      "Actual Cost" := "Actual Cost" - InvtAdjmtBuffer."Cost Amount (Actual)" - InvtAdjmtBuffer."Cost Amount (Expected)";
      "Actual Cost (ACY)" :=
        "Actual Cost (ACY)" - InvtAdjmtBuffer."Cost Amount (Actual) (ACY)" - InvtAdjmtBuffer."Cost Amount (Expected) (ACY)";
    END;

    PROCEDURE Retrieve@72(NewType@1001 : Option;NewVarianceType@1000 : Option) : Boolean;
    BEGIN
      RESET;
      Type := NewType;
      "Variance Type" := NewVarianceType;
      IF NOT FIND THEN BEGIN
        INIT;
        EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE HasNewCost@54(NewCost@1000 : Decimal;NewCostACY@1001 : Decimal) : Boolean;
    BEGIN
      EXIT((NewCost <> 0) OR (NewCostACY <> 0));
    END;

    PROCEDURE DeductOutbndValueEntryFromBuf@8(OutbndValueEntry@1000 : Record 5802;CostElementBuf@1001 : Record 5820;IsAvgCostCalcTypeItem@1002 : Boolean);
    BEGIN
      IF "Remaining Quantity" + OutbndValueEntry."Valued Quantity" <= 0 THEN
        EXIT;

      IF (OutbndValueEntry."Item Ledger Entry Type" = OutbndValueEntry."Item Ledger Entry Type"::Transfer) AND
         IsAvgCostCalcTypeItem
      THEN
        EXIT;

      "Remaining Quantity" += OutbndValueEntry."Valued Quantity";
      "Actual Cost" += CostElementBuf."Actual Cost";
      "Actual Cost (ACY)" += CostElementBuf."Actual Cost (ACY)";
    END;

    PROCEDURE UpdateAvgCostBuffer@4(CostElementBuf@1000 : Record 5820;LastValidEntryNo@1001 : Integer);
    BEGIN
      "Actual Cost" := CostElementBuf."Actual Cost";
      "Actual Cost (ACY)" := CostElementBuf."Actual Cost (ACY)";
      "Last Valid Value Entry No" := LastValidEntryNo;
      "Remaining Quantity" := CostElementBuf."Remaining Quantity";
    END;

    PROCEDURE UpdateCostElementBuffer@5(AvgCostBuf@1000 : Record 5820);
    BEGIN
      "Remaining Quantity" := AvgCostBuf."Remaining Quantity";
      "Actual Cost" := AvgCostBuf."Actual Cost";
      "Actual Cost (ACY)" := AvgCostBuf."Actual Cost (ACY)";
      "Rounding Residual" := AvgCostBuf."Rounding Residual";
      "Rounding Residual (ACY)" := AvgCostBuf."Rounding Residual (ACY)";
    END;

    BEGIN
    END.
  }
}

