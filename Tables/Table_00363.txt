OBJECT Table 363 Analysis View
{
  OBJECT-PROPERTIES
  {
    Date=01/29/16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.44974;
  }
  PROPERTIES
  {
    Permissions=TableData 365=rimd,
                TableData 366=rimd;
    DataCaptionFields=Code,Name;
    OnDelete=VAR
               AnalysisViewFilter@1000 : Record 364;
             BEGIN
               AnalysisViewReset;
               AnalysisViewFilter.SETRANGE("Analysis View Code",Code);
               AnalysisViewFilter.DELETEALL;
             END;

    CaptionML=[ENU=Analysis View;
               ESM=Vista de an lisis;
               FRC=Vue d'analyse;
               ENC=Analysis View];
    LookupPageID=Page556;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 3   ;   ;Account Source      ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND ("Account Source" <> xRec."Account Source") THEN
                                                                  ValidateDelete(FIELDCAPTION("Account Source"));
                                                                VerificationForCashFlow;
                                                                AnalysisViewReset;
                                                                "Account Filter" := '';
                                                              END;

                                                   CaptionML=[ENU=Account Source;
                                                              ESM=Origen cuenta;
                                                              FRC=Source du compte;
                                                              ENC=Account Source];
                                                   OptionCaptionML=[ENU=G/L Account,Cash Flow Account;
                                                                    ESM=Cuenta contable,Cuenta flujos efectivo;
                                                                    FRC=Compte GL,Compte de tr‚sorerie;
                                                                    ENC=G/L Account,Cash Flow Account];
                                                   OptionString=G/L Account,Cash Flow Account }
    { 4   ;   ;Last Entry No.      ;Integer       ;CaptionML=[ENU=Last Entry No.;
                                                              ESM=N§ £lt. mov.;
                                                              FRC=Dernier nø s‚quence;
                                                              ENC=Last Entry No.] }
    { 5   ;   ;Last Budget Entry No.;Integer      ;CaptionML=[ENU=Last Budget Entry No.;
                                                              ESM=N§ £lt. mov. ppto.;
                                                              FRC=Dernier nø s‚quence budget;
                                                              ENC=Last Budget Entry No.] }
    { 6   ;   ;Last Date Updated   ;Date          ;CaptionML=[ENU=Last Date Updated;
                                                              ESM=élt. fecha actualiz.;
                                                              FRC=Date derniŠre mise … jour;
                                                              ENC=Last Date Updated] }
    { 7   ;   ;Update on Posting   ;Boolean       ;OnValidate=BEGIN
                                                                VerificationForCashFlow;
                                                              END;

                                                   CaptionML=[ENU=Update on Posting;
                                                              ESM=Actualizar al registrar;
                                                              FRC=Mise … jour lors du report;
                                                              ENC=Update on Posting];
                                                   Editable=No }
    { 8   ;   ;Blocked             ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT Blocked AND "Refresh When Unblocked" THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION(Blocked));
                                                                  AnalysisViewReset;
                                                                  "Refresh When Unblocked" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Blocked;
                                                              ESM=Bloqueado;
                                                              FRC=Bloqu‚;
                                                              ENC=Blocked] }
    { 9   ;   ;Account Filter      ;Code250       ;TableRelation=IF (Account Source=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Account Source=CONST(Cash Flow Account)) "Cash Flow Account";
                                                   OnValidate=VAR
                                                                AnalysisViewEntry@1000 : Record 365;
                                                                AnalysisViewBudgetEntry@1001 : Record 366;
                                                                GLAcc@1002 : Record 15;
                                                                CFAccount@1003 : Record 841;
                                                              BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF "Account Source" = "Account Source"::"G/L Account" THEN BEGIN
                                                                  IF ("Last Entry No." <> 0) AND (xRec."Account Filter" = '') AND ("Account Filter" <> '')
                                                                  THEN BEGIN
                                                                    ValidateModify(FIELDCAPTION("Account Filter"));
                                                                    GLAcc.SETFILTER("No.","Account Filter");
                                                                    IF GLAcc.FIND('-') THEN
                                                                      REPEAT
                                                                        GLAcc.MARK := TRUE;
                                                                      UNTIL GLAcc.NEXT = 0;
                                                                    GLAcc.SETRANGE("No.");
                                                                    IF GLAcc.FIND('-') THEN
                                                                      REPEAT
                                                                        IF NOT GLAcc.MARK THEN BEGIN
                                                                          AnalysisViewEntry.SETRANGE("Analysis View Code",Code);
                                                                          AnalysisViewEntry.SETRANGE("Account No.",GLAcc."No.");
                                                                          AnalysisViewEntry.DELETEALL;
                                                                          AnalysisViewBudgetEntry.SETRANGE("Analysis View Code",Code);
                                                                          AnalysisViewBudgetEntry.SETRANGE("G/L Account No.",GLAcc."No.");
                                                                          AnalysisViewBudgetEntry.DELETEALL;
                                                                        END;
                                                                      UNTIL GLAcc.NEXT = 0;
                                                                  END;
                                                                  IF ("Last Entry No." <> 0) AND ("Account Filter" <> xRec."Account Filter") AND (xRec."Account Filter" <> '')
                                                                  THEN  BEGIN
                                                                    ValidateDelete(FIELDCAPTION("Account Filter"));
                                                                    AnalysisViewReset;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  IF ("Last Date Updated" <> 0D) AND (xRec."Account Filter" = '') AND ("Account Filter" <> '')
                                                                  THEN BEGIN
                                                                    ValidateModify(FIELDCAPTION("Account Filter"));
                                                                    CFAccount.SETFILTER("No.","Account Filter");
                                                                    IF CFAccount.FIND('-') THEN
                                                                      REPEAT
                                                                        CFAccount.MARK := TRUE;
                                                                      UNTIL CFAccount.NEXT = 0;
                                                                    CFAccount.SETRANGE("No.");
                                                                    IF CFAccount.FIND('-') THEN
                                                                      REPEAT
                                                                        IF NOT CFAccount.MARK THEN BEGIN
                                                                          AnalysisViewEntry.SETRANGE("Analysis View Code",Code);
                                                                          AnalysisViewEntry.SETRANGE("Account No.",CFAccount."No.");
                                                                          AnalysisViewEntry.DELETEALL;
                                                                        END;
                                                                      UNTIL CFAccount.NEXT = 0;
                                                                  END;
                                                                  IF ("Last Date Updated" <> 0D) AND ("Account Filter" <> xRec."Account Filter") AND
                                                                     (xRec."Account Filter" <> '')
                                                                  THEN BEGIN
                                                                    ValidateDelete(FIELDCAPTION("Account Filter"));
                                                                    AnalysisViewReset;
                                                                  END;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Account Filter;
                                                              ESM=Filtro cuenta;
                                                              FRC=Filtre compte;
                                                              ENC=Account Filter] }
    { 10  ;   ;Business Unit Filter;Code250       ;TableRelation="Business Unit";
                                                   OnValidate=VAR
                                                                BusUnit@1000 : Record 220;
                                                                AnalysisViewEntry@1001 : Record 365;
                                                                AnalysisViewBudgetEntry@1002 : Record 366;
                                                                TempBusUnit@1003 : TEMPORARY Record 220;
                                                              BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND (xRec."Business Unit Filter" = '') AND
                                                                   ("Business Unit Filter" <> xRec."Business Unit Filter")
                                                                THEN BEGIN
                                                                  ValidateModify(FIELDCAPTION("Business Unit Filter"));
                                                                  IF BusUnit.FIND('-') THEN
                                                                    REPEAT
                                                                      TempBusUnit := BusUnit;
                                                                      TempBusUnit.INSERT;
                                                                    UNTIL BusUnit.NEXT = 0;
                                                                  TempBusUnit.INIT;
                                                                  TempBusUnit.Code := '';
                                                                  TempBusUnit.INSERT;
                                                                  TempBusUnit.SETFILTER(Code,"Business Unit Filter");
                                                                  TempBusUnit.DELETEALL;
                                                                  TempBusUnit.SETRANGE(Code);
                                                                  IF TempBusUnit.FIND('-') THEN
                                                                    REPEAT
                                                                      AnalysisViewEntry.SETRANGE("Analysis View Code",Code);
                                                                      AnalysisViewEntry.SETRANGE("Business Unit Code",TempBusUnit.Code);
                                                                      AnalysisViewEntry.DELETEALL;
                                                                      AnalysisViewBudgetEntry.SETRANGE("Analysis View Code",Code);
                                                                      AnalysisViewBudgetEntry.SETRANGE("Business Unit Code",TempBusUnit.Code);
                                                                      AnalysisViewBudgetEntry.DELETEALL;
                                                                    UNTIL TempBusUnit.NEXT = 0
                                                                END;
                                                                IF ("Last Entry No." <> 0) AND (xRec."Business Unit Filter" <> '') AND
                                                                   ("Business Unit Filter" <> xRec."Business Unit Filter")
                                                                THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Business Unit Filter"));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Business Unit Filter;
                                                              ESM=Filtro empresa;
                                                              FRC=Filtre entit‚s commerciales;
                                                              ENC=Business Unit Filter] }
    { 11  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF CheckIfLastEntryOrDateIsSet AND ("Starting Date" <> xRec."Starting Date") THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Starting Date"));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              ESM=Fecha inicial;
                                                              FRC=Date d‚but;
                                                              ENC=Starting Date] }
    { 12  ;   ;Date Compression    ;Option        ;InitValue=Day;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF CheckIfLastEntryOrDateIsSet AND ("Date Compression" <> xRec."Date Compression") THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Date Compression"));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date Compression;
                                                              ESM=Compactar por fechas;
                                                              FRC=Compression de date;
                                                              ENC=Date Compression];
                                                   OptionCaptionML=[ENU=None,Day,Week,Month,Quarter,Year,Period;
                                                                    ESM=Ninguno,D¡a,Semana,Mes,Trimestre,A¤o,Periodo;
                                                                    FRC=Aucun,Jour,Semaine,Mois,Trimestre,Ann‚e,P‚riode;
                                                                    ENC=None,Day,Week,Month,Quarter,Year,Period];
                                                   OptionString=None,Day,Week,Month,Quarter,Year,Period }
    { 13  ;   ;Dimension 1 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 1 Code",13,'',Code,0) THEN
                                                                  ERROR(Text000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 1 Code"),"Dimension 1 Code",xRec."Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 1 Code;
                                                              ESM=C¢d. dimensi¢n 1;
                                                              FRC=Code de dimension 1;
                                                              ENC=Dimension 1 Code] }
    { 14  ;   ;Dimension 2 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 2 Code",14,'',Code,0) THEN
                                                                  ERROR(Text000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 2 Code"),"Dimension 2 Code",xRec."Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 2 Code;
                                                              ESM=C¢d. dimensi¢n 2;
                                                              FRC=Code de dimension 2;
                                                              ENC=Dimension 2 Code] }
    { 15  ;   ;Dimension 3 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 3 Code",15,'',Code,0) THEN
                                                                  ERROR(Text000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 3 Code"),"Dimension 3 Code",xRec."Dimension 3 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 3 Code;
                                                              ESM=C¢d. dimensi¢n 3;
                                                              FRC=Code de dimension 3;
                                                              ENC=Dimension 3 Code] }
    { 16  ;   ;Dimension 4 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 4 Code",16,'',Code,0) THEN
                                                                  ERROR(Text000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 4 Code"),"Dimension 4 Code",xRec."Dimension 4 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 4 Code;
                                                              ESM=C¢d. dimensi¢n 4;
                                                              FRC=Code dimension 4;
                                                              ENC=Dimension 4 Code] }
    { 17  ;   ;Include Budgets     ;Boolean       ;OnValidate=BEGIN
                                                                VerificationForCashFlow;

                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND (xRec."Include Budgets" = TRUE) AND ("Include Budgets" = FALSE)
                                                                THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Include Budgets"));
                                                                  AnalysisviewBudgetReset;
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 95=R;
                                                   CaptionML=[ENU=Include Budgets;
                                                              ESM=Incluir pptos.;
                                                              FRC=Inclure budgets;
                                                              ENC=Include Budgets] }
    { 18  ;   ;Refresh When Unblocked;Boolean     ;CaptionML=[ENU=Refresh When Unblocked;
                                                              ESM=Refrescar cdo. bloqueado;
                                                              FRC=Actualiser quand d‚bloqu‚;
                                                              ENC=Refresh When Unblocked] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Account Source                           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1\You cannot use the same dimension twice in the same analysis view.;ESM=%1\No puede usar la misma dim. dos veces en la misma vista an lisis.;FRC=%1\Vous ne pouvez pas utiliser deux fois la mˆme dimension dans la mˆme vue d''analyse.;ENC=%1\You cannot use the same dimension twice in the same analysis view.';
      Text001@1001 : TextConst 'ENU=The dimension %1 is used in the analysis view %2 %3.;ESM=La dimensi¢n %1 se usa en la vista an lisis %2 %3.;FRC=La dimension %1 est utilis‚e dans la vue d''analyse %2 %3.;ENC=The dimension %1 is used in the analysis view %2 %3.';
      Text002@1002 : TextConst 'ENU=" You must therefore retain the dimension to keep consistency between the analysis view and the G/L entries.";ESM=" Debe conservar la dimensi¢n para mantener la consistencia entre el an lisis y los movs. de contabilidad.";FRC=" Vous devez par cons‚quent conserver cette dimension pour pr‚server la coh‚rence entre la vue d''analyse et les ‚critures.";ENC=" You must therefore retain the dimension to keep consistency between the analysis view and the G/L entries."';
      Text004@1004 : TextConst 'ENU=All analysis views must be updated with the latest G/L entries and G/L budget entries.;ESM=Todas vistas an lisis deben ser actualizadas con los £ltimos movs. de contabilidad y presupuestos.;FRC=Toutes les vues d''analyse doivent ˆtre mises … jour avec les derniŠres ‚critures et ‚critures budget.;ENC=All analysis views must be updated with the latest G/L entries and G/L budget entries.';
      Text005@1005 : TextConst 'ENU=" Both blocked and unblocked analysis views must be updated.";ESM=" Deben actualizarse las vistas an lisis bloqueadas y sin bloquear.";FRC=" Les vues d''analyse bloqu‚es et non bloqu‚es doivent ˆtre mises … jour.";ENC=" Both blocked and unblocked analysis views must be updated."';
      Text007@1007 : TextConst 'ENU=" Note, you must remove the checkmark in the blocked field before updating the blocked analysis views.\";ESM=" Nota, debe borrar la marca en el campo bloqueado antes de actualizar las vistas an lisis bloqueadas.\";FRC=" Attention, vous devez d‚sactiver le champ Bloqu‚ avant de mettre … jour les vues d''analyse bloqu‚es.\";ENC=" Note, you must remove the checkmark in the blocked field before updating the blocked analysis views.\"';
      Text008@1008 : TextConst 'ENU=Currently, %1 analysis views are not updated.;ESM=Vistas an lisis %1 no est n actualizadas.;FRC=%1 vues d''analyse ne sont actuellement pas … jour.;ENC=Currently, %1 analysis views are not updated.';
      Text009@1009 : TextConst 'ENU=" Do you wish to update these analysis views?";ESM=" ¨Confirma que desea actualizar estas vistas an lisis?";FRC=" Souhaitez-vous mettre … jour ces vues d''analyse ?";ENC=" Do you wish to update these analysis views?"';
      Text010@1010 : TextConst 'ENU=All analysis views must be updated with the latest G/L entries.;ESM=Todas vistas an lisis deben ser actualizadas con los £ltimos movs.;FRC=Toutes les vues d''analyse doivent ˆtre mises … jour avec les derniŠres ‚critures.;ENC=All analysis views must be updated with the latest G/L entries.';
      Text011@1011 : TextConst 'ENU=If you change the contents of the %1 field, the analysis view entries will be deleted.;ESM=Si cambia los contenidos del campo %1, se borrar n los movs. vista an lisis.;FRC=Si vous modifiez le contenu du champ %1, les ‚critures vue d''analyse seront supprim‚es.;ENC=If you change the contents of the %1 field, the analysis view entries will be deleted.';
      Text012@1012 : TextConst 'ENU=\You will have to update again.\\Do you want to enter a new value in the %1 field?;ESM=\Tendr  que actualizar de nuevo.\\¨Quiere introducir un valor nuevo en el campo %1?;FRC=\Vous allez devoir faire une nouvelle mise … jour.\\Souhaitez-vous entrer une nouvelle valeur dans le champ %1 ?;ENC=\You will have to update again.\\Do you want to enter a new value in the %1 field?';
      Text013@1013 : TextConst 'ENU=The update has been interrupted in response to the warning.;ESM=La actualizaci¢n ha sido interrumpida como repuesta a la advertencia.;FRC=La mise … jour a ‚t‚ interrompue pour respecter l''alerte.;ENC=The update has been interrupted in response to the warning.';
      Text014@1014 : TextConst 'ENU=If you change the contents of the %1 field, the analysis view entries will be changed as well.\\;ESM=Si cambia los contenidos del campo %1, cambiar n tambi‚n los movs. vista an lisis.\\;FRC=Si vous modifiez le contenu du champ %1, les ‚critures vue d''analyse seront ‚galement modifi‚es.\\;ENC=If you change the contents of the %1 field, the analysis view entries will be changed as well.\\';
      Text015@1015 : TextConst 'ENU=Do you want to enter a new value in the %1 field?;ESM=¨Confirma que desea introducir un valor nuevo en el campo %1?;FRC=Souhaitez-vous entrer une nouvelle valeur dans le champ %1?;ENC=Do you want to enter a new value in the %1 field?';
      AnalysisViewEntry@1016 : Record 365;
      NewAnalysisViewEntry@1017 : Record 365;
      AnalysisViewBudgetEntry@1018 : Record 366;
      NewAnalysisViewBudgetEntry@1019 : Record 366;
      Dim@1020 : Record 348;
      Text016@1003 : TextConst 'ENU=%1 is not applicable for source type %2.;ESM=No se aplica %1 al tipo procedencia mov. %2.;FRC=%1 ne s''applique pas au type origine %2.;ENC=%1 is not applicable for source type %2.';
      Text017@1006 : TextConst 'ENU=When you enable %1, you need to update the analysis view. Do you want to update the analysis view now?;ESM=Si se activa %1, debe actualizarse la vista de an lisis. ¨Desea actualizar la vista de an lisis ahora?;FRC=Si vous activez %1, vous devez mettre … jour la vue d''analyse. Voulez-vous mettre … jour la vue d''analyse maintenantÿ?;ENC=When you enable %1, you need to update the analysis view. Do you want to update the analysis view now?';

    LOCAL PROCEDURE ModifyDim@2(DimFieldName@1000 : Text[100];DimValue@1001 : Code[20];xDimValue@1002 : Code[20]);
    BEGIN
      IF CheckIfLastEntryOrDateIsSet AND (DimValue <> xDimValue) THEN BEGIN
        IF DimValue <> '' THEN BEGIN
          ValidateDelete(DimFieldName);
          AnalysisViewReset;
        END;
        IF DimValue = '' THEN BEGIN
          ValidateModify(DimFieldName);
          CASE DimFieldName OF
            FIELDCAPTION("Dimension 1 Code"):
              BEGIN
                AnalysisViewEntry.SETFILTER("Dimension 1 Value Code",'<>%1','');
                IF "Account Source" = "Account Source"::"G/L Account" THEN
                  AnalysisViewBudgetEntry.SETFILTER("Dimension 1 Value Code",'<>%1','');
              END;
            FIELDCAPTION("Dimension 2 Code"):
              BEGIN
                AnalysisViewEntry.SETFILTER("Dimension 2 Value Code",'<>%1','');
                IF "Account Source" = "Account Source"::"G/L Account" THEN
                  AnalysisViewBudgetEntry.SETFILTER("Dimension 2 Value Code",'<>%1','');
              END;
            FIELDCAPTION("Dimension 3 Code"):
              BEGIN
                AnalysisViewEntry.SETFILTER("Dimension 3 Value Code",'<>%1','');
                IF "Account Source" = "Account Source"::"G/L Account" THEN
                  AnalysisViewBudgetEntry.SETFILTER("Dimension 3 Value Code",'<>%1','');
              END;
            FIELDCAPTION("Dimension 4 Code"):
              BEGIN
                AnalysisViewEntry.SETFILTER("Dimension 4 Value Code",'<>%1','');
                IF "Account Source" = "Account Source"::"G/L Account" THEN
                  AnalysisViewBudgetEntry.SETFILTER("Dimension 4 Value Code",'<>%1','');
              END;
          END;
          AnalysisViewEntry.SETRANGE("Analysis View Code",Code);
          IF "Account Source" = "Account Source"::"G/L Account" THEN
            AnalysisViewBudgetEntry.SETRANGE("Analysis View Code",Code);
          IF AnalysisViewEntry.FIND('-') THEN
            REPEAT
              AnalysisViewEntry.DELETE;
              NewAnalysisViewEntry := AnalysisViewEntry;
              CASE DimFieldName OF
                FIELDCAPTION("Dimension 1 Code"):
                  NewAnalysisViewEntry."Dimension 1 Value Code" := '';
                FIELDCAPTION("Dimension 2 Code"):
                  NewAnalysisViewEntry."Dimension 2 Value Code" := '';
                FIELDCAPTION("Dimension 3 Code"):
                  NewAnalysisViewEntry."Dimension 3 Value Code" := '';
                FIELDCAPTION("Dimension 4 Code"):
                  NewAnalysisViewEntry."Dimension 4 Value Code" := '';
              END;
              InsertAnalysisViewEntry;
            UNTIL AnalysisViewEntry.NEXT = 0;
          IF "Account Source" = "Account Source"::"G/L Account" THEN
            IF AnalysisViewBudgetEntry.FIND('-') THEN
              REPEAT
                AnalysisViewBudgetEntry.DELETE;
                NewAnalysisViewBudgetEntry := AnalysisViewBudgetEntry;
                CASE DimFieldName OF
                  FIELDCAPTION("Dimension 1 Code"):
                    NewAnalysisViewBudgetEntry."Dimension 1 Value Code" := '';
                  FIELDCAPTION("Dimension 2 Code"):
                    NewAnalysisViewBudgetEntry."Dimension 2 Value Code" := '';
                  FIELDCAPTION("Dimension 3 Code"):
                    NewAnalysisViewBudgetEntry."Dimension 3 Value Code" := '';
                  FIELDCAPTION("Dimension 4 Code"):
                    NewAnalysisViewBudgetEntry."Dimension 4 Value Code" := '';
                END;
                InsertAnalysisViewBudgetEntry;
              UNTIL AnalysisViewBudgetEntry.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE InsertAnalysisViewEntry@1();
    BEGIN
      IF NOT NewAnalysisViewEntry.INSERT THEN BEGIN
        NewAnalysisViewEntry.FIND;
        NewAnalysisViewEntry.Amount := NewAnalysisViewEntry.Amount + AnalysisViewEntry.Amount;
        IF "Account Source" = "Account Source"::"G/L Account" THEN BEGIN
          NewAnalysisViewEntry."Debit Amount" :=
            NewAnalysisViewEntry."Debit Amount" + AnalysisViewEntry."Debit Amount";
          NewAnalysisViewEntry."Credit Amount" :=
            NewAnalysisViewEntry."Credit Amount" + AnalysisViewEntry."Credit Amount";
          NewAnalysisViewEntry."Add.-Curr. Debit Amount" :=
            NewAnalysisViewEntry."Add.-Curr. Debit Amount" + AnalysisViewEntry."Add.-Curr. Debit Amount";
          NewAnalysisViewEntry."Add.-Curr. Credit Amount" :=
            NewAnalysisViewEntry."Add.-Curr. Credit Amount" + AnalysisViewEntry."Add.-Curr. Credit Amount";
        END;
        NewAnalysisViewEntry.MODIFY;
      END;
    END;

    LOCAL PROCEDURE InsertAnalysisViewBudgetEntry@6();
    BEGIN
      IF NOT NewAnalysisViewBudgetEntry.INSERT THEN BEGIN
        NewAnalysisViewBudgetEntry.FIND;
        NewAnalysisViewBudgetEntry.Amount := NewAnalysisViewBudgetEntry.Amount + AnalysisViewBudgetEntry.Amount;
        NewAnalysisViewBudgetEntry.MODIFY;
      END;
    END;

    PROCEDURE AnalysisViewReset@5();
    VAR
      AnalysisViewEntry@1000 : Record 365;
    BEGIN
      AnalysisViewEntry.SETRANGE("Analysis View Code",Code);
      AnalysisViewEntry.DELETEALL;
      "Last Entry No." := 0;
      "Last Date Updated" := 0D;
      AnalysisviewBudgetReset;
    END;

    PROCEDURE CheckDimensionsAreRetained@3(ObjectType@1000 : Integer;ObjectID@1001 : Integer;OnlyIfIncludeBudgets@1002 : Boolean);
    BEGIN
      RESET;
      IF OnlyIfIncludeBudgets THEN
        SETRANGE("Include Budgets",TRUE);
      IF FIND('-') THEN
        REPEAT
          CheckDimIsRetained(ObjectType,ObjectID,"Dimension 1 Code",Code,Name);
          CheckDimIsRetained(ObjectType,ObjectID,"Dimension 2 Code",Code,Name);
          CheckDimIsRetained(ObjectType,ObjectID,"Dimension 3 Code",Code,Name);
          CheckDimIsRetained(ObjectType,ObjectID,"Dimension 4 Code",Code,Name);
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE CheckDimIsRetained@8(ObjectType@1000 : Integer;ObjectID@1001 : Integer;DimCode@1002 : Code[20];AnalysisViewCode@1003 : Code[10];AnalysisViewName@1004 : Text[50]);
    VAR
      SelectedDim@1005 : Record 369;
    BEGIN
      IF DimCode <> '' THEN
        IF NOT SelectedDim.GET(USERID,ObjectType,ObjectID,'',DimCode) THEN
          ERROR(
            Text001 +
            Text002,
            DimCode,AnalysisViewCode,AnalysisViewName);
    END;

    PROCEDURE CheckViewsAreUpdated@4();
    VAR
      GLEntry@1000 : Record 17;
      CFForecastEntry@1005 : Record 847;
      GLBudgetEntry@1001 : Record 96;
      UpdateAnalysisView@1002 : Codeunit 410;
      NoNotUpdated@1003 : Integer;
      RunCheck@1004 : Boolean;
    BEGIN
      IF "Account Source" = "Account Source"::"G/L Account" THEN
        RunCheck := GLEntry.FINDLAST OR GLBudgetEntry.FINDLAST
      ELSE
        RunCheck := CFForecastEntry.FINDLAST;

      IF RunCheck THEN BEGIN
        NoNotUpdated := 0;
        RESET;
        IF FIND('-') THEN
          REPEAT
            IF ("Account Source" = "Account Source"::"Cash Flow Account") OR
               (("Last Entry No." < GLEntry."Entry No.") OR
                "Include Budgets" AND ("Last Budget Entry No." < GLBudgetEntry."Entry No."))
            THEN
              NoNotUpdated := NoNotUpdated + 1;
          UNTIL NEXT = 0;
        IF NoNotUpdated > 0 THEN
          IF CONFIRM(
               Text004 +
               Text005 +
               Text007 +
               Text008 +
               Text009,TRUE,NoNotUpdated)
          THEN BEGIN
            IF FIND('-') THEN
              REPEAT
                IF Blocked THEN BEGIN
                  "Refresh When Unblocked" := TRUE;
                  "Last Budget Entry No." := 0;
                  MODIFY;
                END ELSE
                  UpdateAnalysisView.Update(Rec,2,TRUE);
              UNTIL NEXT = 0;
          END ELSE
            ERROR(Text010);
      END;
    END;

    PROCEDURE UpdateLastEntryNo@7();
    VAR
      GLEntry@1000 : Record 17;
    BEGIN
      IF GLEntry.FINDLAST THEN BEGIN
        SETRANGE(Blocked,FALSE);
        IF FIND('-') THEN
          REPEAT
            "Last Entry No." := GLEntry."Entry No.";
            MODIFY;
          UNTIL NEXT = 0;
        SETRANGE(Blocked);
      END;
    END;

    PROCEDURE ValidateDelete@10(FieldName@1000 : Text);
    VAR
      Question@1001 : Text;
    BEGIN
      Question := STRSUBSTNO(
          Text011 +
          Text012,FieldName);
      IF NOT DIALOG.CONFIRM(Question,TRUE) THEN
        ERROR(Text013);
    END;

    PROCEDURE AnalysisviewBudgetReset@9();
    VAR
      AnalysisViewBudgetEntry@1000 : Record 366;
    BEGIN
      AnalysisViewBudgetEntry.SETRANGE("Analysis View Code",Code);
      AnalysisViewBudgetEntry.DELETEALL;
      "Last Budget Entry No." := 0;
    END;

    LOCAL PROCEDURE ValidateModify@11(FieldName@1000 : Text);
    VAR
      Question@1001 : Text;
    BEGIN
      Question := STRSUBSTNO(
          Text014 +
          Text015,FieldName);
      IF NOT DIALOG.CONFIRM(Question,TRUE) THEN
        ERROR(Text013);
    END;

    PROCEDURE CopyAnalysisViewFilters@12(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10]);
    VAR
      SelectedDim@1003 : Record 369;
      GLAcc@1004 : Record 15;
      CFAcc@1007 : Record 841;
      BusUnit@1005 : Record 220;
      DimensionCode@1006 : Text[30];
    BEGIN
      IF GET(AnalysisViewCode) THEN BEGIN
        IF "Account Filter" <> '' THEN BEGIN
          IF "Account Source" = "Account Source"::"G/L Account" THEN
            DimensionCode := GLAcc.TABLECAPTION
          ELSE
            DimensionCode := CFAcc.TABLECAPTION;

          IF SelectedDim.GET(
               USERID,ObjectType,ObjectID,AnalysisViewCode,DimensionCode)
          THEN BEGIN
            IF SelectedDim."Dimension Value Filter" = '' THEN BEGIN
              SelectedDim."Dimension Value Filter" := "Account Filter";
              SelectedDim.MODIFY;
            END;
          END ELSE BEGIN
            SelectedDim.INIT;
            SelectedDim."User ID" := USERID;
            SelectedDim."Object Type" := ObjectType;
            SelectedDim."Object ID" := ObjectID;
            SelectedDim."Analysis View Code" := AnalysisViewCode;
            SelectedDim."Dimension Code" := DimensionCode;
            SelectedDim."Dimension Value Filter" := "Account Filter";
            SelectedDim.INSERT;
          END;
        END;
        IF "Business Unit Filter" <> '' THEN
          IF SelectedDim.GET(
               USERID,ObjectType,ObjectID,AnalysisViewCode,BusUnit.TABLECAPTION)
          THEN BEGIN
            IF SelectedDim."Dimension Value Filter" = '' THEN BEGIN
              SelectedDim."Dimension Value Filter" := "Business Unit Filter";
              SelectedDim.MODIFY;
            END;
          END ELSE BEGIN
            SelectedDim.INIT;
            SelectedDim."User ID" := USERID;
            SelectedDim."Object Type" := ObjectType;
            SelectedDim."Object ID" := ObjectID;
            SelectedDim."Analysis View Code" := AnalysisViewCode;
            SelectedDim."Dimension Code" := BusUnit.TABLECAPTION;
            SelectedDim."Dimension Value Filter" := "Business Unit Filter";
            SelectedDim.INSERT;
          END;
      END;
    END;

    LOCAL PROCEDURE VerificationForCashFlow@15();
    BEGIN
      IF "Account Source" <> "Account Source"::"Cash Flow Account" THEN
        EXIT;

      IF "Include Budgets" THEN
        ERROR(Text016,FIELDCAPTION("Include Budgets"),"Account Source");

      IF "Update on Posting" THEN
        ERROR(Text016,FIELDCAPTION("Update on Posting"),"Account Source");
    END;

    LOCAL PROCEDURE CheckIfLastEntryOrDateIsSet@14() : Boolean;
    BEGIN
      IF "Account Source" = "Account Source"::"G/L Account" THEN
        EXIT("Last Entry No." <> 0);

      EXIT("Last Date Updated" <> 0D);
    END;

    PROCEDURE SetUpdateOnPosting@13(NewUpdateOnPosting@1000 : Boolean);
    BEGIN
      IF "Update on Posting" = NewUpdateOnPosting THEN
        EXIT;

      IF NOT "Update on Posting" AND NewUpdateOnPosting THEN
        IF NOT CONFIRM(STRSUBSTNO(Text017,FIELDCAPTION("Update on Posting")),FALSE) THEN
          EXIT;

      "Update on Posting" := NewUpdateOnPosting;
      IF "Update on Posting" THEN BEGIN
        MODIFY;
        CODEUNIT.RUN(CODEUNIT::"Update Analysis View",Rec);
        FIND;
      END;
    END;

    BEGIN
    END.
  }
}

