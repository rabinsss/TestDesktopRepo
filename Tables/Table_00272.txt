OBJECT Table 272 Check Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00,NAVNA9.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Check Ledger Entry;
               ESM=Mov. cheque;
               FRC=êcriture chäque;
               ENC=Cheque Ledger Entry];
    LookupPageID=Page374;
    DrillDownPageID=Page374;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ESM=Nß mov.;
                                                              FRC=N¯ Çcriture;
                                                              ENC=Entry No.] }
    { 2   ;   ;Bank Account No.    ;Code20        ;TableRelation="Bank Account";
                                                   CaptionML=[ENU=Bank Account No.;
                                                              ESM=C¢d. cuenta banco;
                                                              FRC=N¯ compte bancaire;
                                                              ENC=Bank Account No.] }
    { 3   ;   ;Bank Account Ledger Entry No.;Integer;
                                                   TableRelation="Bank Account Ledger Entry";
                                                   CaptionML=[ENU=Bank Account Ledger Entry No.;
                                                              ESM=Nß orden mov. banco;
                                                              FRC=N¯ Çcr. gr. livre cpte banc.;
                                                              ENC=Bank Account Ledger Entry No.] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESM=Fecha registro;
                                                              FRC=Date de report;
                                                              ENC=Posting Date] }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ESM=Tipo documento;
                                                              FRC=Type de document;
                                                              ENC=Document Type];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    ESM=" ,Pago,Factura,Nota crÇdito,Docs. interÇs,Recordatorio,Reembolso";
                                                                    FRC=" ,Paiement,Facture,Note de crÇdit,Note de frais financiers,Rappel,Remboursement";
                                                                    ENC=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ESM=Nß documento;
                                                              FRC=N¯ de document;
                                                              ENC=Document No.] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 8   ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ESM=Importe;
                                                              FRC=Montant;
                                                              ENC=Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromBank }
    { 9   ;   ;Check Date          ;Date          ;CaptionML=[ENU=Check Date;
                                                              ESM=Fecha cheque;
                                                              FRC=Date du chäque;
                                                              ENC=Cheque Date] }
    { 10  ;   ;Check No.           ;Code20        ;CaptionML=[ENU=Check No.;
                                                              ESM=Nß cheque;
                                                              FRC=N¯ de chäque;
                                                              ENC=Cheque No.] }
    { 11  ;   ;Check Type          ;Option        ;CaptionML=[ENU=Check Type;
                                                              ESM=Tipo cheque;
                                                              FRC=Type chäque;
                                                              ENC=Cheque Type];
                                                   OptionCaptionML=[ENU=Total Check,Partial Check;
                                                                    ESM=Total,Parcial;
                                                                    FRC=Total,Partiel;
                                                                    ENC=Total Cheque,Partial Cheque];
                                                   OptionString=Total Check,Partial Check }
    { 12  ;   ;Bank Payment Type   ;Option        ;CaptionML=[ENU=Bank Payment Type;
                                                              ESM=Tipo pago por banco;
                                                              FRC=Type de paiement bancaire;
                                                              ENC=Bank Payment Type];
                                                   OptionCaptionML=[ENU=" ,Computer Check,Manual Check,Electronic Payment";
                                                                    ESM=" ,Cheque autom†tico,Cheque manual,Pago electr¢nico";
                                                                    FRC=" ,Chäque informatisÇ,Chäque manuel,Paiement Çlectronique";
                                                                    ENC=" ,Computer Cheque,Manual Cheque,Electronic Payment"];
                                                   OptionString=[ ,Computer Check,Manual Check,Electronic Payment] }
    { 13  ;   ;Entry Status        ;Option        ;CaptionML=[ENU=Entry Status;
                                                              ESM=Estado mov.;
                                                              FRC=êtat Çcriture;
                                                              ENC=Entry Status];
                                                   OptionCaptionML=[ENU=,Printed,Voided,Posted,Financially Voided,Test Print,Exported,Transmitted;
                                                                    ESM=,Impreso,Anulado en el diario,Registrado,Anulaci¢n total,Test impresi¢n,Exportado,Transmitido;
                                                                    FRC=,ImprimÇ,AnnulÇ,ReportÇ,AnnulÇ financiärement,Test d'impression,ExportÇ,Transmis;
                                                                    ENC=,Printed,Voided,Posted,Financially Voided,Test Print,Exported,Transmitted];
                                                   OptionString=,Printed,Voided,Posted,Financially Voided,Test Print,Exported,Transmitted }
    { 14  ;   ;Original Entry Status;Option       ;CaptionML=[ENU=Original Entry Status;
                                                              ESM=Estado original del cheque;
                                                              FRC=êtat initial de l'Çcriture;
                                                              ENC=Original Entry Status];
                                                   OptionCaptionML=[ENU=" ,Printed,Voided,Posted,Financially Voided,,Exported,Transmitted";
                                                                    ESM=" ,Impreso,Anulado en el diario,Registrado,Anulaci¢n total,,Exportado,Transmitido";
                                                                    FRC=" ,ImprimÇ,AnnulÇ,ReportÇ,AnnulÇ financiärement,,ExportÇ,Transmis";
                                                                    ENC=" ,Printed,Voided,Posted,Financially Voided,,Exported,Transmitted"];
                                                   OptionString=[ ,Printed,Voided,Posted,Financially Voided,,Exported,Transmitted] }
    { 15  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              ESM=Tipo contrapartida;
                                                              FRC=Type compte contrìle;
                                                              ENC=Bal. Account Type];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,,Employee;
                                                                    ESM=Cuenta,Cliente,Proveedor,Banco,Activo,,Empleado;
                                                                    FRC=Compte GL,Client,Fournisseur,Compte bancaire,Immobilisation,,EmployÇ;
                                                                    ENC=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,,Employee];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,,Employee }
    { 16  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Bal. Account Type=CONST(Employee)) Employee;
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              ESM=Cta. contrapartida;
                                                              FRC=N¯ compte contrìle;
                                                              ENC=Bal. Account No.] }
    { 17  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              ESM=Pendiente;
                                                              FRC=Ouvert;
                                                              ENC=Open] }
    { 18  ;   ;Statement Status    ;Option        ;CaptionML=[ENU=Statement Status;
                                                              ESM=Estado liquidaci¢n;
                                                              FRC=êtat du relevÇ;
                                                              ENC=Statement Status];
                                                   OptionCaptionML=[ENU=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed;
                                                                    ESM=Pendiente,Liq. por mov. banco,Liq. por mov. cheque,Cerrado;
                                                                    FRC=Ouvert,êcriture de compte bancaire affectÇe,êcriture chäque affectÇe,FermÇ;
                                                                    ENC=Open,Bank Acc. Entry Applied,Cheque Entry Applied,Closed];
                                                   OptionString=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed }
    { 19  ;   ;Statement No.       ;Code20        ;TableRelation=IF (Statement Status=FILTER(Bank Acc. Entry Applied|Check Entry Applied)) "Bank Rec. Header"."Statement No." WHERE (Bank Account No.=FIELD(Bank Account No.))
                                                                 ELSE IF (Statement Status=CONST(Closed)) "Posted Bank Rec. Header"."Statement No." WHERE (Bank Account No.=FIELD(Bank Account No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement No.;
                                                              ESM=Nß estado de cta. banco;
                                                              FRC=N¯ de relevÇ;
                                                              ENC=Statement No.] }
    { 20  ;   ;Statement Line No.  ;Integer       ;TableRelation=IF (Statement Status=FILTER(Bank Acc. Entry Applied|Check Entry Applied)) "Bank Rec. Line"."Line No." WHERE (Bank Account No.=FIELD(Bank Account No.),
                                                                                                                                                                              Statement No.=FIELD(Statement No.))
                                                                                                                                                                              ELSE IF (Statement Status=CONST(Closed)) "Posted Bank Rec. Line"."Line No." WHERE (Bank Account No.=FIELD(Bank Account No.),
                                                                                                                                                                                                                                                                 Statement No.=FIELD(Statement No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement Line No.;
                                                              ESM=Nß l°n. estado de cta. banco;
                                                              FRC=N¯ ligne relevÇ;
                                                              ENC=Statement Line No.] }
    { 21  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ESM=Id. usuario;
                                                              FRC=Code utilisateur;
                                                              ENC=User ID] }
    { 22  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              ESM=Nß documento externo;
                                                              FRC=N¯ document externe;
                                                              ENC=External Document No.] }
    { 23  ;   ;Data Exch. Entry No.;Integer       ;TableRelation="Data Exch.";
                                                   CaptionML=[ENU=Data Exch. Entry No.;
                                                              ESM=N.ß mov. intercambio de datos;
                                                              FRC=N¯ Çcriture Çchge donnÇes;
                                                              ENC=Data Exch. Entry No.];
                                                   Editable=No }
    { 24  ;   ;Data Exch. Voided Entry No.;Integer;TableRelation="Data Exch.";
                                                   CaptionML=[ENU=Data Exch. Voided Entry No.;
                                                              ESM=N.ß mov. anulado de intercambio de datos;
                                                              FRC=N¯ Çcriture Çchge donnÇes annulÇ;
                                                              ENC=Data Exch. Voided Entry No.];
                                                   Editable=No }
    { 25  ;   ;Positive Pay Exported;Boolean      ;CaptionML=[ENU=Positive Pay Exported;
                                                              ESM=Positive Pay exportado;
                                                              FRC=Positive Pay exportÇ;
                                                              ENC=Positive Pay Exported] }
    { 26  ;   ;Record ID to Print  ;RecordID      ;CaptionML=[ENU=Record ID to Print;
                                                              ESM=Id. de registro para imprimir;
                                                              FRC=Code d'enregistrement Ö imprimer;
                                                              ENC=Record ID to Print] }
    { 10005;  ;Trace No.           ;Code30        ;CaptionML=[ENU=Trace No.;
                                                              ESM=Nß seguim.;
                                                              FRC=N¯ de piste;
                                                              ENC=Trace No.] }
    { 10006;  ;Transmission File Name;Text30      ;CaptionML=[ENU=Transmission File Name;
                                                              ESM=Nomb. arch. transmisi¢n;
                                                              FRC=Nom de fichier de transmission;
                                                              ENC=Transmission File Name] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Bank Account No.,Check Date              }
    {    ;Bank Account No.,Entry Status,Check No.  }
    {    ;Bank Account Ledger Entry No.            }
    {    ;Bank Account No.,Open                    }
    {    ;Document No.,Posting Date                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NothingToExportErr@1000 : TextConst 'ENU=There is nothing to export.;ESM=No hay nada que exportar.;FRC=Il n''y a rien Ö exporter.;ENC=There is nothing to export.';

    PROCEDURE GetCurrencyCodeFromBank@1() : Code[10];
    VAR
      BankAcc@1000 : Record 270;
    BEGIN
      IF "Bank Account No." = BankAcc."No." THEN
        EXIT(BankAcc."Currency Code");

      IF BankAcc.GET("Bank Account No.") THEN
        EXIT(BankAcc."Currency Code");

      EXIT('');
    END;

    PROCEDURE CopyFromBankAccLedgEntry@2(BankAccLedgEntry@1000 : Record 271);
    BEGIN
      "Bank Account No." := BankAccLedgEntry."Bank Account No.";
      "Bank Account Ledger Entry No." := BankAccLedgEntry."Entry No.";
      "Posting Date" := BankAccLedgEntry."Posting Date";
      "Document Type" := BankAccLedgEntry."Document Type";
      "Document No." := BankAccLedgEntry."Document No.";
      "External Document No." := BankAccLedgEntry."External Document No.";
      Description := BankAccLedgEntry.Description;
      "Bank Payment Type" := "Bank Payment Type";
      "Bal. Account Type" := BankAccLedgEntry."Bal. Account Type";
      "Bal. Account No." := BankAccLedgEntry."Bal. Account No.";
      "Entry Status" := "Entry Status"::Posted;
      Open := TRUE;
      "User ID" := USERID;
      "Check Date" := BankAccLedgEntry."Posting Date";
      "Check No." := BankAccLedgEntry."Document No.";
    END;

    PROCEDURE GetCheckAmountText@1020000(CurrencyCode@1020001 : Code[10];VAR CurrencySymbol@1020000 : Code[5]) CheckAmountText : Text;
    VAR
      Currency@1020002 : Record 4;
      Decimals@1020004 : Decimal;
    BEGIN
      IF CurrencyCode <> '' THEN
        Currency.GET(CurrencyCode)
      ELSE
        Currency.InitRoundingPrecision;

      Decimals := Amount - ROUND(Amount,1,'<');

      IF (GetFractionPartLength(Amount) <> GetFractionPartLength(Currency."Amount Rounding Precision")) THEN
        IF (Decimals = 0) OR (GetFractionPartLength(Amount) > GetFractionPartLength(Currency."Amount Rounding Precision")) THEN
          CheckAmountText :=
            FORMAT(
              ROUND(Amount,1,'<')) +
              GetDecimalSeparator +
              PADSTR('',STRLEN(FORMAT(ROUND(Currency."Amount Rounding Precision",Currency."Amount Rounding Precision"))) - 2,'0')
        ELSE
          CheckAmountText := FORMAT(ROUND(Amount,Currency."Amount Rounding Precision")) +
            PADSTR('',GetFractionPartLength(Currency."Amount Rounding Precision") - GetFractionPartLength(Amount),'0')
      ELSE
        CheckAmountText := FORMAT(Amount,0,0);

      CurrencySymbol := Currency.Symbol;
    END;

    LOCAL PROCEDURE GetFractionPartLength@1020002(DecimalValue@1020000 : Decimal) : Integer;
    BEGIN
      IF STRPOS(FORMAT(DecimalValue),GetDecimalSeparator) = 0 THEN
        EXIT(0);

      EXIT(STRLEN(FORMAT(DecimalValue)) - STRPOS(FORMAT(DecimalValue),GetDecimalSeparator));
    END;

    LOCAL PROCEDURE GetDecimalSeparator@1020001() : Code[1];
    BEGIN
      EXIT(COPYSTR(FORMAT(0.01),2,1));
    END;

    PROCEDURE ExportCheckFile@3();
    VAR
      BankAcc@1000 : Record 270;
    BEGIN
      IF NOT FINDSET THEN
        ERROR(NothingToExportErr);

      BankAcc.GET("Bank Account No.");
      IF BankAcc.GetPosPayExportCodeunitID > 0 THEN
        CODEUNIT.RUN(BankAcc.GetPosPayExportCodeunitID,Rec)
      ELSE
        CODEUNIT.RUN(CODEUNIT::"Exp. Launcher Pos. Pay",Rec);
    END;

    PROCEDURE GetPayee@4() Payee : Text[50];
    VAR
      Vendor@1003 : Record 23;
      Customer@1002 : Record 18;
      GLAccount@1001 : Record 15;
      BankAccount@1000 : Record 270;
    BEGIN
      CASE "Bal. Account Type" OF
        "Bal. Account Type"::"G/L Account":
          IF "Bal. Account No." <> '' THEN BEGIN
            GLAccount.GET("Bal. Account No.");
            Payee := GLAccount.Name;
          END;
        "Bal. Account Type"::Customer:
          IF "Bal. Account No." <> '' THEN BEGIN
            Customer.GET("Bal. Account No.");
            Payee := Customer.Name;
          END;
        "Bal. Account Type"::Vendor:
          IF "Bal. Account No." <> '' THEN BEGIN
            Vendor.GET("Bal. Account No.");
            Payee := Vendor.Name;
          END;
        "Bal. Account Type"::"Bank Account":
          IF "Bal. Account No." <> '' THEN BEGIN
            BankAccount.GET("Bal. Account No.");
            Payee := BankAccount.Name;
          END;
        "Bal. Account Type"::"Fixed Asset":
          Payee := "Bal. Account No.";
      END;
    END;

    BEGIN
    END.
  }
}

