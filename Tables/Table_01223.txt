OBJECT Table 1223 Data Exch. Column Def
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ValidateRec;
             END;

    OnModify=BEGIN
               ValidateRec;
             END;

    OnDelete=VAR
               DataExchFieldMapping@1000 : Record 1225;
               DataExchColumnDef@1001 : Record 1223;
             BEGIN
               DataExchFieldMapping.SETRANGE("Data Exch. Def Code","Data Exch. Def Code");
               DataExchFieldMapping.SETRANGE("Data Exch. Line Def Code","Data Exch. Line Def Code");
               DataExchFieldMapping.SETRANGE("Column No.","Column No.");
               IF NOT DataExchFieldMapping.ISEMPTY THEN
                 IF CONFIRM(STRSUBSTNO(DeleteFieldMappingQst,DataExchColumnDef.TABLECAPTION,DataExchFieldMapping.TABLECAPTION)) THEN
                   DataExchFieldMapping.DELETEALL
                 ELSE
                   ERROR('')
             END;

    CaptionML=[ENU=Data Exch. Column Def;
               ESM=Def. columna intercambio datos;
               FRC=D‚f. colonne ‚chge donn‚es;
               ENC=Data Exch. Column Def];
  }
  FIELDS
  {
    { 1   ;   ;Data Exch. Def Code ;Code20        ;TableRelation="Data Exch. Def";
                                                   CaptionML=[ENU=Data Exch. Def Code;
                                                              ESM=C¢digo def. intercambio datos;
                                                              FRC=Code d‚f. ‚chge donn‚es;
                                                              ENC=Data Exch. Def Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Column No.          ;Integer       ;CaptionML=[ENU=Column No.;
                                                              ESM=N§ columna;
                                                              FRC=Nø de colonne;
                                                              ENC=Column No.];
                                                   MinValue=1;
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text250       ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 4   ;   ;Show                ;Boolean       ;CaptionML=[ENU=Show;
                                                              ESM=Mostrar;
                                                              FRC=Afficher;
                                                              ENC=Show] }
    { 5   ;   ;Data Type           ;Option        ;CaptionML=[ENU=Data Type;
                                                              ESM=Tipo de datos;
                                                              FRC=Type de donn‚es;
                                                              ENC=Data Type];
                                                   OptionCaptionML=[ENU=Text,Date,Decimal,DateTime;
                                                                    ESM=Texto,Fecha,Decimal,DateTime;
                                                                    FRC=Texte,Date,D‚cimale,DateHeure;
                                                                    ENC=Text,Date,Decimal,DateTime];
                                                   OptionString=Text,Date,Decimal,DateTime }
    { 6   ;   ;Data Format         ;Text100       ;CaptionML=[ENU=Data Format;
                                                              ESM=Formato de datos;
                                                              FRC=Format donn‚es;
                                                              ENC=Data Format] }
    { 7   ;   ;Data Formatting Culture;Text10     ;CaptionML=[ENU=Data Formatting Culture;
                                                              ESM=Referencia cultural de formato de datos;
                                                              FRC=Culture mise en forme donn‚es;
                                                              ENC=Data Formatting Culture] }
    { 8   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 10  ;   ;Data Exch. Line Def Code;Code20    ;TableRelation="Data Exch. Line Def".Code WHERE (Data Exch. Def Code=FIELD(Data Exch. Def Code));
                                                   CaptionML=[ENU=Data Exch. Line Def Code;
                                                              ESM=C¢digo def. l¡nea intercambio datos;
                                                              FRC=Code d‚f. ligne ‚chge donn‚es;
                                                              ENC=Data Exch. Line Def Code];
                                                   NotBlank=Yes }
    { 11  ;   ;Length              ;Integer       ;CaptionML=[ENU=Length;
                                                              ESM=Longitud;
                                                              FRC=Longueur;
                                                              ENC=Length] }
    { 12  ;   ;Constant            ;Text30        ;CaptionML=[ENU=Constant;
                                                              ESM=Constante;
                                                              FRC=Fixe;
                                                              ENC=Constant] }
    { 13  ;   ;Path                ;Text250       ;CaptionML=[ENU=Path;
                                                              ESM=Ruta acceso;
                                                              FRC=Chemin;
                                                              ENC=Path] }
    { 14  ;   ;Negative-Sign Identifier;Text30    ;CaptionML=[ENU=Negative-Sign Identifier;
                                                              ESM=Identificador de signo de negativo;
                                                              FRC=Identificateur de signe n‚gatif;
                                                              ENC=Negative-Sign Identifier] }
    { 15  ;   ;Text Padding Required;Boolean      ;CaptionML=[ENU=Text Padding Required;
                                                              ESM=Relleno de datos requerido;
                                                              FRC=Remplissage du texte obligatoire;
                                                              ENC=Text Padding Required] }
    { 16  ;   ;Pad Character       ;Text1         ;CaptionML=[ENU=Pad Character;
                                                              ESM=Car cter de almohadilla;
                                                              FRC=CaractŠre de remplissage;
                                                              ENC=Pad Character] }
  }
  KEYS
  {
    {    ;Data Exch. Def Code,Data Exch. Line Def Code,Column No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DeleteFieldMappingQst@1001 : TextConst 'ENU=The %1 that you are about to delete is used for one or more %2, which will also be deleted. \\Do you want to continue?;ESM=El %1 que est  por eliminar se usa para una o m s %2, que tambi‚n se eliminar n. \\¨Desea continuar?;FRC=Le %1 que vous ˆtes sur le point de supprimer est utilis‚ pour un ou plusieurs %2, qui seront ‚galement supprim‚s. \\Voulez-vous continuer?;ENC=The %1 that you are about to delete is used for one or more %2, which will also be deleted. \\Do you want to continue?';

    PROCEDURE InsertRec@7(DataExchDefCode@1000 : Code[20];DataExchLineDefCode@1007 : Code[20];ColumnNo@1001 : Integer;Name@1002 : Text[250];Show@1003 : Boolean;DataType@1004 : Option;DataTypeFormatting@1005 : Text[100];DataFormattingCulture@1006 : Text[10];Description@1008 : Text[50]);
    BEGIN
      INIT;
      VALIDATE("Data Exch. Def Code",DataExchDefCode);
      VALIDATE("Data Exch. Line Def Code",DataExchLineDefCode);
      VALIDATE("Column No.",ColumnNo);
      VALIDATE(Name,Name);
      VALIDATE(Show,Show);
      VALIDATE("Data Type",DataType);
      VALIDATE("Data Format",DataTypeFormatting);
      VALIDATE("Data Formatting Culture",DataFormattingCulture);
      VALIDATE(Description,Description);
      INSERT;
    END;

    PROCEDURE InsertRecForExport@2(DataExchDefCode@1000 : Code[20];DataExchLineDefCode@1002 : Code[20];ColumnNo@1001 : Integer;Name@1003 : Text[250];DataType@1005 : Option;DataFormat@1006 : Text[100];Length@1009 : Integer;Constant@1004 : Text[30]);
    BEGIN
      INIT;
      VALIDATE("Data Exch. Def Code",DataExchDefCode);
      VALIDATE("Data Exch. Line Def Code",DataExchLineDefCode);
      VALIDATE("Column No.",ColumnNo);
      VALIDATE(Name,Name);
      VALIDATE("Data Type",DataType);
      VALIDATE("Data Format",DataFormat);
      VALIDATE(Length,Length);
      VALIDATE(Constant,Constant);
      INSERT;
    END;

    PROCEDURE InsertRecForImport@3(DataExchDefCode@1020 : Code[20];DataExchLineDefCode@1019 : Code[20];ColumnNo@1018 : Integer;Name@1017 : Text[250];Description@1016 : Text[50];Show@1015 : Boolean;DataType@1014 : Option;DataFormat@1013 : Text[100];DataFormattingCulture@1012 : Text[10]);
    BEGIN
      INIT;
      VALIDATE("Data Exch. Def Code",DataExchDefCode);
      VALIDATE("Data Exch. Line Def Code",DataExchLineDefCode);
      VALIDATE("Column No.",ColumnNo);
      VALIDATE(Name,Name);
      VALIDATE(Description,Description);
      VALIDATE(Show,Show);
      VALIDATE("Data Type",DataType);
      VALIDATE("Data Format",DataFormat);
      VALIDATE("Data Formatting Culture",DataFormattingCulture);
      INSERT;
    END;

    PROCEDURE ValidateRec@1();
    VAR
      DataExchDef@1000 : Record 1222;
    BEGIN
      TESTFIELD("Data Exch. Def Code");
      TESTFIELD("Column No.");

      DataExchDef.GET("Data Exch. Def Code");

      IF DataExchDef."File Type" = DataExchDef."File Type"::"Fixed Text" THEN
        TESTFIELD(Length);

      IF IsDataFormatRequired THEN
        TESTFIELD("Data Format");

      IF IsDataFormattingCultureRequired THEN
        TESTFIELD("Data Formatting Culture");
    END;

    PROCEDURE IsDataFormatRequired@12() : Boolean;
    VAR
      DataExchDef@1000 : Record 1222;
    BEGIN
      IF IsXML OR IsJson THEN
        EXIT(FALSE);

      DataExchDef.GET("Data Exch. Def Code");

      CASE "Data Type" OF
        "Data Type"::Date:
          EXIT(DataExchDef.Type <> DataExchDef.Type::"Payment Export");
        "Data Type"::Text:
          ;
        ELSE
          EXIT(DataExchDef.Type = DataExchDef.Type::"Payment Export");
      END;
    END;

    PROCEDURE IsDataFormattingCultureRequired@4() : Boolean;
    VAR
      DataExchDef@1000 : Record 1222;
    BEGIN
      IF ("Data Type" <> "Data Type"::Text) AND NOT IsXML AND NOT IsJson THEN BEGIN
        DataExchDef.GET("Data Exch. Def Code");
        EXIT(DataExchDef.Type <> DataExchDef.Type::"Payment Export");
      END;
    END;

    LOCAL PROCEDURE IsXML@8() : Boolean;
    VAR
      DataExchDef@1000 : Record 1222;
    BEGIN
      DataExchDef.GET("Data Exch. Def Code");
      EXIT(DataExchDef."File Type" = DataExchDef."File Type"::Xml);
    END;

    LOCAL PROCEDURE IsJson@11() : Boolean;
    VAR
      DataExchDef@1000 : Record 1222;
    BEGIN
      DataExchDef.GET("Data Exch. Def Code");
      EXIT(DataExchDef."File Type" = DataExchDef."File Type"::Json);
    END;

    PROCEDURE SetXMLDataFormattingValues@21(SimpleDataType@1000 : Text);
    VAR
      DataExchColDef@1001 : Record 1223;
    BEGIN
      CASE DELCHR(LOWERCASE(SimpleDataType)) OF
        'decimal':
          "Data Type" := DataExchColDef."Data Type"::Decimal;
        'date','datetime':
          "Data Type" := DataExchColDef."Data Type"::Date;
        ELSE
          "Data Type" := DataExchColDef."Data Type"::Text;
      END;
      MODIFY;
    END;

    LOCAL PROCEDURE GetColumnNoFromPath@9(ParameterPath@1000 : Text) : Integer;
    BEGIN
      SETFILTER(Path,ParameterPath);
      FINDFIRST;
      EXIT("Column No.");
    END;

    PROCEDURE IsOfDataLine@10() : Boolean;
    VAR
      DataExchLineDef@1000 : Record 1227;
    BEGIN
      DataExchLineDef.GET("Data Exch. Def Code","Data Exch. Line Def Code");

      IF NOT (IsXML OR IsJson) OR (DataExchLineDef."Data Line Tag" = '') THEN
        EXIT(TRUE);

      EXIT(STRPOS(Path,DataExchLineDef."Data Line Tag") > 0);
    END;

    BEGIN
    END.
  }
}

