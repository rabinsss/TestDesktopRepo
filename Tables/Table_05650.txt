OBJECT Table 5650 Total Value Insured
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Total Value Insured;
               ESM=Valor asegurado total;
               FRC=Valeur totale assur‚e;
               ENC=Total Value Insured];
  }
  FIELDS
  {
    { 1   ;   ;FA No.              ;Code20        ;TableRelation="Fixed Asset";
                                                   CaptionML=[ENU=FA No.;
                                                              ESM=A/F N§;
                                                              FRC=Nø immo.;
                                                              ENC=FA No.] }
    { 2   ;   ;Insurance No.       ;Code20        ;TableRelation=Insurance;
                                                   CaptionML=[ENU=Insurance No.;
                                                              ESM=N§ seguro;
                                                              FRC=Nø assurance;
                                                              ENC=Insurance No.] }
    { 3   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 4   ;   ;Total Value Insured ;Decimal       ;CaptionML=[ENU=Total Value Insured;
                                                              ESM=Valor asegurado total;
                                                              FRC=Valeur totale assur‚e;
                                                              ENC=Total Value Insured];
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;FA No.,Insurance No.                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InsTotValueInsured@1000 : TEMPORARY Record 5650;

    PROCEDURE CreateInsTotValueInsured@4(FANo@1000 : Code[20]);
    VAR
      InsCoverageLedgEntry@1001 : Record 5629;
      InsTotValueInsured2@1002 : Record 5650;
      Insurance@1003 : Record 5628;
    BEGIN
      InsTotValueInsured.DELETEALL;
      CLEAR(InsTotValueInsured);
      InsCoverageLedgEntry.SETCURRENTKEY("FA No.","Insurance No.");
      InsCoverageLedgEntry.SETRANGE("FA No.",FANo);
      IF InsCoverageLedgEntry.FIND('-') THEN
        REPEAT
          IF NOT InsCoverageLedgEntry."Disposed FA" THEN BEGIN
            InsTotValueInsured2."FA No." := InsCoverageLedgEntry."FA No.";
            InsTotValueInsured2."Insurance No." := InsCoverageLedgEntry."Insurance No.";
            InsTotValueInsured2."Total Value Insured" := InsCoverageLedgEntry.Amount;
            InsTotValueInsured := InsTotValueInsured2;
            IF InsTotValueInsured.FIND THEN BEGIN
              InsTotValueInsured."Total Value Insured" :=
                InsTotValueInsured."Total Value Insured" + InsTotValueInsured2."Total Value Insured";
              InsTotValueInsured.MODIFY;
            END ELSE BEGIN
              Insurance.GET(InsCoverageLedgEntry."Insurance No.");
              InsTotValueInsured.Description := Insurance.Description;
              InsTotValueInsured.INSERT;
            END;
          END;
        UNTIL InsCoverageLedgEntry.NEXT = 0;
    END;

    PROCEDURE FindFirst@2(SearchString@1000 : Text[3]) : Boolean;
    BEGIN
      InsTotValueInsured := Rec;
      IF NOT InsTotValueInsured.FIND(SearchString) THEN
        EXIT(FALSE);
      Rec := InsTotValueInsured;
      EXIT(TRUE);
    END;

    PROCEDURE FindNext@3(NextStep@1000 : Integer) : Integer;
    BEGIN
      InsTotValueInsured := Rec;
      NextStep := InsTotValueInsured.NEXT(NextStep);
      IF NextStep <> 0 THEN
        Rec := InsTotValueInsured;
      EXIT(NextStep);
    END;

    BEGIN
    END.
  }
}

