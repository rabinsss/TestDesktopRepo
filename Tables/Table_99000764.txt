OBJECT Table 99000764 Routing Line
{
  OBJECT-PROPERTIES
  {
    Date=12/22/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.44365;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestStatus;
             END;

    OnModify=BEGIN
               TestStatus;
             END;

    OnDelete=BEGIN
               TestStatus;

               DeleteRelations;
             END;

    OnRename=BEGIN
               TestStatus;

               SetRecalcStatus;
             END;

    CaptionML=[ENU=Routing Line;
               ESM=L¡nea ruta;
               FRC=Ligne itin‚raire;
               ENC=Routing Line];
  }
  FIELDS
  {
    { 1   ;   ;Routing No.         ;Code20        ;TableRelation="Routing Header";
                                                   CaptionML=[ENU=Routing No.;
                                                              ESM=N§ ruta;
                                                              FRC=Nø itin‚raire;
                                                              ENC=Routing No.];
                                                   NotBlank=Yes }
    { 2   ;   ;Version Code        ;Code20        ;TableRelation="Routing Version"."Version Code" WHERE (Routing No.=FIELD(Routing No.));
                                                   CaptionML=[ENU=Version Code;
                                                              ESM=C¢d. versi¢n;
                                                              FRC=Code version;
                                                              ENC=Version Code] }
    { 4   ;   ;Operation No.       ;Code10        ;OnValidate=BEGIN
                                                                TestStatus;

                                                                SetRecalcStatus;
                                                              END;

                                                   CaptionML=[ENU=Operation No.;
                                                              ESM=N§ operaci¢n;
                                                              FRC=N§ d'activit‚;
                                                              ENC=Operation No.];
                                                   NotBlank=Yes }
    { 5   ;   ;Next Operation No.  ;Code30        ;OnValidate=BEGIN
                                                                SetRecalcStatus;
                                                              END;

                                                   CaptionML=[ENU=Next Operation No.;
                                                              ESM=N§ operaci¢n siguiente;
                                                              FRC=N§ prochaine activit‚;
                                                              ENC=Next Operation No.] }
    { 6   ;   ;Previous Operation No.;Code30      ;OnValidate=BEGIN
                                                                SetRecalcStatus;
                                                              END;

                                                   CaptionML=[ENU=Previous Operation No.;
                                                              ESM=N§ operaci¢n anterior;
                                                              FRC=N§ activit‚ pr‚c‚dente;
                                                              ENC=Previous Operation No.] }
    { 7   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                SetRecalcStatus;

                                                                "No." := '';
                                                                "Work Center No." := '';
                                                                "Work Center Group Code" := '';
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ESM=Tipo;
                                                              FRC=Type;
                                                              ENC=Type];
                                                   OptionCaptionML=[ENU="Work Center,Machine Center, ";
                                                                    ESM="Centro trabajo,Centro m quina, ";
                                                                    FRC="Atelier,Unit‚ de production, ";
                                                                    ENC="Work Centre,Machine Centre, "];
                                                   OptionString=[Work Center,Machine Center, ] }
    { 8   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Work Center)) "Work Center"
                                                                 ELSE IF (Type=CONST(Machine Center)) "Machine Center";
                                                   OnValidate=BEGIN
                                                                SetRecalcStatus;

                                                                IF "No." = '' THEN
                                                                  EXIT;

                                                                CASE Type OF
                                                                  Type::"Work Center":
                                                                    BEGIN
                                                                      WorkCenter.GET("No.");
                                                                      WorkCenter.TESTFIELD(Blocked,FALSE);
                                                                      WorkCenterTransferfields;
                                                                    END;
                                                                  Type::"Machine Center":
                                                                    BEGIN
                                                                      MachineCenter.GET("No.");
                                                                      MachineCenter.TESTFIELD(Blocked,FALSE);
                                                                      MachineCtrTransferfields;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESM=N§;
                                                              FRC=Nø;
                                                              ENC=No.] }
    { 9   ;   ;Work Center No.     ;Code20        ;TableRelation="Work Center";
                                                   CaptionML=[ENU=Work Center No.;
                                                              ESM=N§ centro trabajo;
                                                              FRC=Atelier n§;
                                                              ENC=Work Centre No.];
                                                   Editable=No }
    { 10  ;   ;Work Center Group Code;Code10      ;TableRelation="Work Center Group";
                                                   CaptionML=[ENU=Work Center Group Code;
                                                              ESM=C¢d. grupo centro trab.;
                                                              FRC=Code paramŠtre atelier;
                                                              ENC=Work Centre Group Code];
                                                   Editable=No }
    { 11  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 12  ;   ;Setup Time          ;Decimal       ;CaptionML=[ENU=Setup Time;
                                                              ESM=Tiempo preparaci¢n;
                                                              FRC=Temps de configuration;
                                                              ENC=Setup Time];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 13  ;   ;Run Time            ;Decimal       ;CaptionML=[ENU=Run Time;
                                                              ESM=Tiempo ejecuci¢n;
                                                              FRC=Dur‚e d'ex‚cution;
                                                              ENC=Run Time];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 14  ;   ;Wait Time           ;Decimal       ;CaptionML=[ENU=Wait Time;
                                                              ESM=Tiempo espera;
                                                              FRC=D‚lai d'attente;
                                                              ENC=Wait Time];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 15  ;   ;Move Time           ;Decimal       ;CaptionML=[ENU=Move Time;
                                                              ESM=Tiempo movimiento;
                                                              FRC=D‚placer temps;
                                                              ENC=Move Time];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 16  ;   ;Fixed Scrap Quantity;Decimal       ;OnValidate=BEGIN
                                                                SetRecalcStatus;
                                                              END;

                                                   CaptionML=[ENU=Fixed Scrap Quantity;
                                                              ESM=Cdad. rechazo fija;
                                                              FRC=Quantit‚ rebut fixe;
                                                              ENC=Fixed Scrap Quantity];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 17  ;   ;Lot Size            ;Decimal       ;CaptionML=[ENU=Lot Size;
                                                              ESM=Tama¤o lote;
                                                              FRC=Taille lot;
                                                              ENC=Lot Size];
                                                   DecimalPlaces=0:5 }
    { 18  ;   ;Scrap Factor %      ;Decimal       ;OnValidate=BEGIN
                                                                SetRecalcStatus;
                                                              END;

                                                   CaptionML=[ENU=Scrap Factor %;
                                                              ESM=% Factor rechazo;
                                                              FRC=% factoriel de rebut;
                                                              ENC=Scrap Factor %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 19  ;   ;Setup Time Unit of Meas. Code;Code10;
                                                   TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[ENU=Setup Time Unit of Meas. Code;
                                                              ESM=C¢d. unidad medida tiempo prep.;
                                                              FRC=Code UdeM temps r‚glage;
                                                              ENC=Setup Time Unit of Meas. Code] }
    { 20  ;   ;Run Time Unit of Meas. Code;Code10 ;TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[ENU=Run Time Unit of Meas. Code;
                                                              ESM=C¢d. unidad medida tiempo ejec.;
                                                              FRC=Code UdeM dur‚e d'ex‚cution;
                                                              ENC=Run Time Unit of Meas. Code] }
    { 21  ;   ;Wait Time Unit of Meas. Code;Code10;TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[ENU=Wait Time Unit of Meas. Code;
                                                              ESM=C¢d. unidad medida tiempo espera;
                                                              FRC=Code UdeM temps d'attente;
                                                              ENC=Wait Time Unit of Meas. Code] }
    { 22  ;   ;Move Time Unit of Meas. Code;Code10;TableRelation="Capacity Unit of Measure";
                                                   CaptionML=[ENU=Move Time Unit of Meas. Code;
                                                              ESM=C¢d. unidad medida tiempo mov.;
                                                              FRC=D‚placer code UdeM temps;
                                                              ENC=Move Time Unit of Meas. Code] }
    { 27  ;   ;Minimum Process Time;Decimal       ;CaptionML=[ENU=Minimum Process Time;
                                                              ESM=Tiempo proceso m¡nimo;
                                                              FRC=Temps de traitement min.;
                                                              ENC=Minimum Process Time];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 28  ;   ;Maximum Process Time;Decimal       ;CaptionML=[ENU=Maximum Process Time;
                                                              ESM=Tiempo proceso m ximo;
                                                              FRC=Temps de traitement max.;
                                                              ENC=Maximum Process Time];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 30  ;   ;Concurrent Capacities;Decimal      ;InitValue=1;
                                                   CaptionML=[ENU=Concurrent Capacities;
                                                              ESM=Capacidades concurrentes;
                                                              FRC=Capacit‚s concurrentes;
                                                              ENC=Concurrent Capacities];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 31  ;   ;Send-Ahead Quantity ;Decimal       ;CaptionML=[ENU=Send-Ahead Quantity;
                                                              ESM=Cdad. a adelantar;
                                                              FRC=Quantit‚ … destination;
                                                              ENC=Send-Ahead Quantity];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 34  ;   ;Routing Link Code   ;Code10        ;TableRelation="Routing Link";
                                                   CaptionML=[ENU=Routing Link Code;
                                                              ESM=C¢d. conexi¢n ruta;
                                                              FRC=Code lien proc‚dure;
                                                              ENC=Routing Link Code] }
    { 35  ;   ;Standard Task Code  ;Code10        ;TableRelation="Standard Task";
                                                   OnValidate=VAR
                                                                StandardTask@1000 : Record 99000778;
                                                              BEGIN
                                                                IF "Standard Task Code" = '' THEN
                                                                  IF "Standard Task Code" <> xRec."Standard Task Code" THEN BEGIN
                                                                    DeleteRelations;
                                                                    EXIT;
                                                                  END;

                                                                StandardTask.GET("Standard Task Code");
                                                                Description := StandardTask.Description;

                                                                DeleteRelations;

                                                                StdTaskTool.SETRANGE("Standard Task Code","Standard Task Code");
                                                                IF StdTaskTool.FIND('-') THEN
                                                                  REPEAT
                                                                    RtngTool."Routing No." := "Routing No.";
                                                                    RtngTool."Version Code" := "Version Code";
                                                                    RtngTool."Operation No." := "Operation No.";
                                                                    RtngTool."Line No." := StdTaskTool."Line No.";
                                                                    RtngTool."No." := StdTaskTool."No.";
                                                                    RtngTool.Description := StdTaskTool.Description;
                                                                    RtngTool.INSERT;
                                                                  UNTIL StdTaskTool.NEXT = 0;

                                                                StdTaskPersonnel.SETRANGE("Standard Task Code","Standard Task Code");
                                                                IF StdTaskPersonnel.FIND('-') THEN
                                                                  REPEAT
                                                                    RtngPersonnel."Routing No." := "Routing No.";
                                                                    RtngPersonnel."Version Code" := "Version Code";
                                                                    RtngPersonnel."Operation No." := "Operation No.";
                                                                    RtngPersonnel."Line No." := StdTaskPersonnel."Line No.";
                                                                    RtngPersonnel."No." := StdTaskPersonnel."No.";
                                                                    RtngPersonnel.Description := StdTaskPersonnel.Description;
                                                                    RtngPersonnel.INSERT;
                                                                  UNTIL StdTaskPersonnel.NEXT = 0;

                                                                StdTaskQltyMeasure.SETRANGE("Standard Task Code","Standard Task Code");
                                                                IF StdTaskQltyMeasure.FIND('-') THEN
                                                                  REPEAT
                                                                    RtngQltyMeasure."Routing No." := "Routing No.";
                                                                    RtngQltyMeasure."Version Code" := "Version Code";
                                                                    RtngQltyMeasure."Operation No." := "Operation No.";
                                                                    RtngQltyMeasure."Line No." := StdTaskQltyMeasure."Line No.";
                                                                    RtngQltyMeasure."Qlty Measure Code" := StdTaskQltyMeasure."Qlty Measure Code";
                                                                    RtngQltyMeasure.Description := StdTaskQltyMeasure.Description;
                                                                    RtngQltyMeasure."Min. Value" := StdTaskQltyMeasure."Min. Value";
                                                                    RtngQltyMeasure."Max. Value" := StdTaskQltyMeasure."Max. Value";
                                                                    RtngQltyMeasure."Mean Tolerance" := StdTaskQltyMeasure."Mean Tolerance";
                                                                    RtngQltyMeasure.INSERT;
                                                                  UNTIL StdTaskQltyMeasure.NEXT = 0;

                                                                StdTaskComment.SETRANGE("Standard Task Code","Standard Task Code");
                                                                IF StdTaskComment.FIND('-') THEN
                                                                  REPEAT
                                                                    RtngComment."Routing No." := "Routing No.";
                                                                    RtngComment."Version Code" := "Version Code";
                                                                    RtngComment."Operation No." := "Operation No.";
                                                                    RtngComment."Line No." := StdTaskComment."Line No.";
                                                                    RtngComment.Comment := StdTaskComment.Text;
                                                                    RtngComment.INSERT;
                                                                  UNTIL StdTaskComment.NEXT = 0;
                                                              END;

                                                   CaptionML=[ENU=Standard Task Code;
                                                              ESM=C¢d. tarea est ndar;
                                                              FRC=Code tƒche standard;
                                                              ENC=Standard Task Code] }
    { 40  ;   ;Unit Cost per       ;Decimal       ;CaptionML=[ENU=Unit Cost per;
                                                              ESM=Costo unitario por;
                                                              FRC=Co–t unitaire par;
                                                              ENC=Unit Cost per];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 41  ;   ;Recalculate         ;Boolean       ;CaptionML=[ENU=Recalculate;
                                                              ESM=Recalcular;
                                                              FRC=Recalculer;
                                                              ENC=Recalculate];
                                                   Editable=No }
    { 45  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Routing Comment Line" WHERE (Routing No.=FIELD(Routing No.),
                                                                                                   Version Code=FIELD(Version Code),
                                                                                                   Operation No.=FIELD(Operation No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESM=Comentario;
                                                              FRC=Commentaire;
                                                              ENC=Comment];
                                                   Editable=No }
    { 50  ;   ;Sequence No. (Forward);Integer     ;CaptionML=[ENU=Sequence No. (Forward);
                                                              ESM=N§ secuencia (adelante);
                                                              FRC=N§ s‚quence (suivante);
                                                              ENC=Sequence No. (Forward)];
                                                   Editable=No }
    { 51  ;   ;Sequence No. (Backward);Integer    ;CaptionML=[ENU=Sequence No. (Backward);
                                                              ESM=N§ secuencia (atr s);
                                                              FRC=N§ s‚quence (pr‚c‚dente);
                                                              ENC=Sequence No. (Backward)];
                                                   Editable=No }
    { 52  ;   ;Fixed Scrap Qty. (Accum.);Decimal  ;CaptionML=[ENU=Fixed Scrap Qty. (Accum.);
                                                              ESM=Cdad. rechazo fija (acum.);
                                                              FRC=Qt‚ rebut fixe (Accum.);
                                                              ENC=Fixed Scrap Qty. (Accum.)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 53  ;   ;Scrap Factor % (Accumulated);Decimal;
                                                   CaptionML=[ENU=Scrap Factor % (Accumulated);
                                                              ESM=% Factor rechazo (acum.);
                                                              FRC=% factoriel rebut (accumul‚);
                                                              ENC=Scrap Factor % (Accumulated)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Routing No.,Version Code,Operation No.  ;Clustered=Yes }
    {    ;Routing No.,Version Code,Sequence No. (Forward) }
    {    ;Routing No.,Version Code,Sequence No. (Backward) }
    {    ;Work Center No.                          }
    {    ;Type,No.                                 }
    {    ;Routing Link Code                        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      WorkCenter@1000 : Record 99000754;
      MachineCenter@1001 : Record 99000758;
      RtngTool@1002 : Record 99000802;
      RtngPersonnel@1003 : Record 99000803;
      RtngQltyMeasure@1004 : Record 99000805;
      RtngComment@1005 : Record 99000775;
      StdTaskTool@1006 : Record 99000781;
      StdTaskPersonnel@1007 : Record 99000782;
      StdTaskQltyMeasure@1008 : Record 99000784;
      StdTaskComment@1009 : Record 99000783;

    LOCAL PROCEDURE TestStatus@6();
    VAR
      RtngHeader@1000 : Record 99000763;
      RtngVersion@1001 : Record 99000786;
    BEGIN
      IF "Version Code" = '' THEN BEGIN
        RtngHeader.GET("Routing No.");
        IF RtngHeader.Status = RtngHeader.Status::Certified THEN
          RtngHeader.FIELDERROR(Status);
      END ELSE BEGIN
        RtngVersion.GET("Routing No.","Version Code");
        IF RtngVersion.Status = RtngVersion.Status::Certified THEN
          RtngVersion.FIELDERROR(Status);
      END;
    END;

    LOCAL PROCEDURE DeleteRelations@3();
    BEGIN
      RtngTool.SETRANGE("Routing No.","Routing No.");
      RtngTool.SETRANGE("Version Code","Version Code");
      RtngTool.SETRANGE("Operation No.","Operation No.");
      RtngTool.DELETEALL;

      RtngPersonnel.SETRANGE("Routing No.","Routing No.");
      RtngPersonnel.SETRANGE("Version Code","Version Code");
      RtngPersonnel.SETRANGE("Operation No.","Operation No.");
      RtngPersonnel.DELETEALL;

      RtngQltyMeasure.SETRANGE("Routing No.","Routing No.");
      RtngQltyMeasure.SETRANGE("Version Code","Version Code");
      RtngQltyMeasure.SETRANGE("Operation No.","Operation No.");
      RtngQltyMeasure.DELETEALL;

      RtngComment.SETRANGE("Routing No.","Routing No.");
      RtngComment.SETRANGE("Version Code","Version Code");
      RtngComment.SETRANGE("Operation No.","Operation No.");
      RtngComment.DELETEALL;
    END;

    LOCAL PROCEDURE WorkCenterTransferfields@2();
    BEGIN
      "Work Center No." := WorkCenter."No.";
      "Work Center Group Code" := WorkCenter."Work Center Group Code";
      IF "Setup Time Unit of Meas. Code" = '' THEN
        "Setup Time Unit of Meas. Code" := WorkCenter."Unit of Measure Code";
      IF "Run Time Unit of Meas. Code" = '' THEN
        "Run Time Unit of Meas. Code" := WorkCenter."Unit of Measure Code";
      IF "Wait Time Unit of Meas. Code" = '' THEN
        "Wait Time Unit of Meas. Code" := WorkCenter."Unit of Measure Code";
      IF "Move Time Unit of Meas. Code" = '' THEN
        "Move Time Unit of Meas. Code" := WorkCenter."Unit of Measure Code";
      Description := WorkCenter.Name;
    END;

    LOCAL PROCEDURE MachineCtrTransferfields@1();
    BEGIN
      WorkCenter.GET(MachineCenter."Work Center No.");
      WorkCenterTransferfields;

      Description := MachineCenter.Name;
      "Setup Time" := MachineCenter."Setup Time";
      "Wait Time" := MachineCenter."Wait Time";
      "Move Time" := MachineCenter."Move Time";
      IF "Setup Time Unit of Meas. Code" = '' THEN
        "Setup Time Unit of Meas. Code" := MachineCenter."Setup Time Unit of Meas. Code";
      IF "Wait Time Unit of Meas. Code" = '' THEN
        "Wait Time Unit of Meas. Code" := MachineCenter."Wait Time Unit of Meas. Code";
      IF "Move Time Unit of Meas. Code" = '' THEN
        "Move Time Unit of Meas. Code" := MachineCenter."Move Time Unit of Meas. Code";
      "Fixed Scrap Quantity" := MachineCenter."Fixed Scrap Quantity";
      "Scrap Factor %" := MachineCenter."Scrap %";
      "Minimum Process Time" := MachineCenter."Minimum Process Time";
      "Maximum Process Time" := MachineCenter."Maximum Process Time";
      "Concurrent Capacities" := MachineCenter."Concurrent Capacities";
      "Send-Ahead Quantity" := MachineCenter."Send-Ahead Quantity";
    END;

    PROCEDURE SetRecalcStatus@5();
    BEGIN
      Recalculate := TRUE;
    END;

    LOCAL PROCEDURE RunTimePer@7() : Decimal;
    BEGIN
      IF "Lot Size" = 0 THEN
        "Lot Size" := 1;

      EXIT(ROUND("Run Time" / "Lot Size",0.00001));
    END;

    PROCEDURE CertifiedRoutingVersionExists@4(RtngHeaderNo@1000 : Code[20];CalculationDate@1003 : Date) : Boolean;
    VAR
      RtngHeader@1004 : Record 99000763;
      VersionMgt@1002 : Codeunit 99000756;
      CheckRoutingLines@1005 : Codeunit 99000752;
      RtngVersionCode@1001 : Code[20];
    BEGIN
      IF RtngHeaderNo = '' THEN
        EXIT(FALSE);

      RtngHeader.GET(RtngHeaderNo);
      RtngVersionCode := VersionMgt.GetRtngVersion(RtngHeaderNo,CalculationDate,TRUE);

      IF CheckRoutingLines.NeedsCalculation(RtngHeader,RtngVersionCode) THEN
        CheckRoutingLines.Calculate(RtngHeader,RtngVersionCode);

      SETRANGE("Routing No.",RtngHeaderNo);
      SETRANGE("Version Code",RtngVersionCode);
      EXIT(FINDSET);
    END;

    BEGIN
    END.
  }
}

