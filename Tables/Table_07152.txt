OBJECT Table 7152 Item Analysis View
{
  OBJECT-PROPERTIES
  {
    Date=01/29/16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.44974;
  }
  PROPERTIES
  {
    Permissions=TableData 7154=rimd,
                TableData 7156=rimd;
    DataCaptionFields=Analysis Area,Code,Name;
    OnDelete=VAR
               ItemAnalysisViewFilter@1000 : Record 7153;
             BEGIN
               ItemAnalysisViewReset;
               ItemAnalysisViewFilter.SETRANGE("Analysis Area","Analysis Area");
               ItemAnalysisViewFilter.SETRANGE("Analysis View Code",Code);
               ItemAnalysisViewFilter.DELETEALL;
             END;

    CaptionML=[ENU=Item Analysis View;
               ESM=Vista de an lisis de productos;
               FRC=Vue d'analyse d'article;
               ENC=Item Analysis View];
    LookupPageID=Page7151;
  }
  FIELDS
  {
    { 1   ;   ;Analysis Area       ;Option        ;CaptionML=[ENU=Analysis Area;
                                                              ESM=µrea an lisis;
                                                              FRC=Zone d'analyse;
                                                              ENC=Analysis Area];
                                                   OptionCaptionML=[ENU=Sales,Purchase,Inventory;
                                                                    ESM=Ventas,Compra,Inventario;
                                                                    FRC=Vente,Achat,Inventaire;
                                                                    ENC=Sales,Purchase,Inventory];
                                                   OptionString=Sales,Purchase,Inventory }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 4   ;   ;Last Entry No.      ;Integer       ;CaptionML=[ENU=Last Entry No.;
                                                              ESM=N§ £lt. mov.;
                                                              FRC=Dernier nø de s‚quence;
                                                              ENC=Last Entry No.];
                                                   Editable=No }
    { 5   ;   ;Last Budget Entry No.;Integer      ;CaptionML=[ENU=Last Budget Entry No.;
                                                              ESM=N§ £lt. mov. ppto.;
                                                              FRC=Dernier nø de s‚quence budget;
                                                              ENC=Last Budget Entry No.];
                                                   Editable=No }
    { 6   ;   ;Last Date Updated   ;Date          ;CaptionML=[ENU=Last Date Updated;
                                                              ESM=élt. fecha actualiz.;
                                                              FRC=Date de la derniŠre mise … jour;
                                                              ENC=Last Date Updated];
                                                   Editable=No }
    { 7   ;   ;Update on Posting   ;Boolean       ;CaptionML=[ENU=Update on Posting;
                                                              ESM=Actualizar al registrar;
                                                              FRC=Mise … jour lors du report;
                                                              ENC=Update on Posting];
                                                   Editable=No }
    { 8   ;   ;Blocked             ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT Blocked AND "Refresh When Unblocked" THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION(Blocked));
                                                                  ItemAnalysisViewReset;
                                                                  "Refresh When Unblocked" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Blocked;
                                                              ESM=Bloqueado;
                                                              FRC=Bloqu‚;
                                                              ENC=Blocked] }
    { 9   ;   ;Item Filter         ;Code250       ;TableRelation=Item;
                                                   OnValidate=VAR
                                                                ItemAnalysisViewEntry@1000 : Record 7154;
                                                                ItemAnalysisViewBudgetEntry@1001 : Record 7156;
                                                                Item@1002 : Record 27;
                                                              BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND (xRec."Item Filter" = '') AND ("Item Filter" <> '') THEN BEGIN
                                                                  ValidateModify(FIELDCAPTION("Item Filter"));
                                                                  Item.SETFILTER("No.","Item Filter");
                                                                  IF Item.FIND('-') THEN
                                                                    REPEAT
                                                                      Item.MARK := TRUE;
                                                                    UNTIL Item.NEXT = 0;
                                                                  Item.SETRANGE("No.");
                                                                  IF Item.FIND('-') THEN
                                                                    REPEAT
                                                                      IF NOT Item.MARK THEN BEGIN
                                                                        ItemAnalysisViewEntry.SETRANGE("Analysis Area","Analysis Area");
                                                                        ItemAnalysisViewEntry.SETRANGE("Analysis View Code",Code);
                                                                        ItemAnalysisViewEntry.SETRANGE("Item No.",Item."No.");
                                                                        ItemAnalysisViewEntry.DELETEALL;
                                                                        ItemAnalysisViewBudgetEntry.SETRANGE("Analysis Area","Analysis Area");
                                                                        ItemAnalysisViewBudgetEntry.SETRANGE("Analysis View Code",Code);
                                                                        ItemAnalysisViewBudgetEntry.SETRANGE("Item No.",Item."No.");
                                                                        ItemAnalysisViewBudgetEntry.DELETEALL;
                                                                      END;
                                                                    UNTIL Item.NEXT = 0;
                                                                END;
                                                                IF ("Last Entry No." <> 0) AND ("Item Filter" <> xRec."Item Filter") AND (xRec."Item Filter" <> '') THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Item Filter"));
                                                                  ItemAnalysisViewReset;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Item Filter;
                                                              ESM=Filtro producto;
                                                              FRC=Filtre article;
                                                              ENC=Item Filter] }
    { 10  ;   ;Location Filter     ;Code250       ;TableRelation=Location;
                                                   OnValidate=VAR
                                                                Location@1000 : Record 14;
                                                                TempLocation@1003 : TEMPORARY Record 14;
                                                              BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND (xRec."Location Filter" = '') AND
                                                                   ("Location Filter" <> xRec."Location Filter")
                                                                THEN BEGIN
                                                                  ValidateModify(FIELDCAPTION("Location Filter"));
                                                                  IF Location.FIND('-') THEN
                                                                    REPEAT
                                                                      TempLocation := Location;
                                                                      TempLocation.INSERT;
                                                                    UNTIL Location.NEXT = 0;
                                                                  TempLocation.INIT;
                                                                  TempLocation.Code := '';
                                                                  TempLocation.INSERT;
                                                                  TempLocation.SETFILTER(Code,"Location Filter");
                                                                  TempLocation.DELETEALL;
                                                                  TempLocation.SETRANGE(Code);
                                                                  IF TempLocation.FIND('-') THEN
                                                                    REPEAT
                                                                      ItemAnalysisViewEntry.SETRANGE("Analysis Area","Analysis Area");
                                                                      ItemAnalysisViewEntry.SETRANGE("Analysis View Code",Code);
                                                                      ItemAnalysisViewEntry.SETRANGE("Location Code",TempLocation.Code);
                                                                      ItemAnalysisViewEntry.DELETEALL;
                                                                      ItemAnalysisViewBudgetEntry.SETRANGE("Analysis Area","Analysis Area");
                                                                      ItemAnalysisViewBudgetEntry.SETRANGE("Analysis View Code",Code);
                                                                      ItemAnalysisViewBudgetEntry.SETRANGE("Location Code",TempLocation.Code);
                                                                      ItemAnalysisViewBudgetEntry.DELETEALL;
                                                                    UNTIL TempLocation.NEXT = 0
                                                                END;
                                                                IF ("Last Entry No." <> 0) AND (xRec."Location Filter" <> '') AND
                                                                   ("Location Filter" <> xRec."Location Filter")
                                                                THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Location Filter"));
                                                                  ItemAnalysisViewReset;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Location Filter;
                                                              ESM=Filtro almac‚n;
                                                              FRC=Filtre emplacement;
                                                              ENC=Location Filter] }
    { 11  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND ("Starting Date" <> xRec."Starting Date") THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Starting Date"));
                                                                  ItemAnalysisViewReset;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              ESM=Fecha inicial;
                                                              FRC=Date d‚but;
                                                              ENC=Starting Date] }
    { 12  ;   ;Date Compression    ;Option        ;InitValue=Day;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND ("Date Compression" <> xRec."Date Compression") THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Date Compression"));
                                                                  ItemAnalysisViewReset;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date Compression;
                                                              ESM=Compactar por fechas;
                                                              FRC=Compression de date;
                                                              ENC=Date Compression];
                                                   OptionCaptionML=[ENU=None,Day,Week,Month,Quarter,Year,Period;
                                                                    ESM=Ninguno,D¡a,Semana,Mes,Trimestre,A¤o,Periodo;
                                                                    FRC=Aucun,Jour,Semaine,Mois,Trimestre,Ann‚e,P‚riode;
                                                                    ENC=None,Day,Week,Month,Quarter,Year,Period];
                                                   OptionString=None,Day,Week,Month,Quarter,Year,Period }
    { 13  ;   ;Dimension 1 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 1 Code",20,'',Code,"Analysis Area") THEN
                                                                  ERROR(Text000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 1 Code"),"Dimension 1 Code",xRec."Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 1 Code;
                                                              ESM=C¢d. dimensi¢n 1;
                                                              FRC=Code de dimension 1;
                                                              ENC=Dimension 1 Code] }
    { 14  ;   ;Dimension 2 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 2 Code",21,'',Code,"Analysis Area") THEN
                                                                  ERROR(Text000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 2 Code"),"Dimension 2 Code",xRec."Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 2 Code;
                                                              ESM=C¢d. dimensi¢n 2;
                                                              FRC=Code de dimension 2;
                                                              ENC=Dimension 2 Code] }
    { 15  ;   ;Dimension 3 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 3 Code",22,'',Code,"Analysis Area") THEN
                                                                  ERROR(Text000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 3 Code"),"Dimension 3 Code",xRec."Dimension 3 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 3 Code;
                                                              ESM=C¢d. dimensi¢n 3;
                                                              FRC=Code de dimension 3;
                                                              ENC=Dimension 3 Code] }
    { 17  ;   ;Include Budgets     ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND xRec."Include Budgets" AND NOT "Include Budgets" THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Include Budgets"));
                                                                  AnalysisviewBudgetReset;
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 7132=R;
                                                   CaptionML=[ENU=Include Budgets;
                                                              ESM=Incluir pptos.;
                                                              FRC=Inclure budgets;
                                                              ENC=Include Budgets] }
    { 18  ;   ;Refresh When Unblocked;Boolean     ;CaptionML=[ENU=Refresh When Unblocked;
                                                              ESM=Refrescar cdo. bloqueado;
                                                              FRC=Actualiser quand d‚bloqu‚;
                                                              ENC=Refresh When Unblocked] }
  }
  KEYS
  {
    {    ;Analysis Area,Code                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1\You cannot use the same dimension twice in the same analysis view.;ESM=%1\No puede usar la misma dim. dos veces en la misma vista an lisis.;FRC=%1\Vous ne pouvez pas utiliser deux fois la mˆme dimension dans la mˆme vue d''analyse.;ENC=%1\You cannot use the same dimension twice in the same analysis view.';
      Text001@1001 : TextConst 'ENU=The dimension %1 is used in the analysis view %2 %3.;ESM=La dimensi¢n %1 se usa en la vista an lisis %2 %3.;FRC=La dimension %1 est utilis‚e dans la vue d''analyse %2 %3.;ENC=The dimension %1 is used in the analysis view %2 %3.';
      Text002@1002 : TextConst 'ENU=" You must therefore retain the dimension to keep consistency between the analysis view and the Item entries.";ESM=" Por tanto, a fin de mantener la coherencia entre la vista de an lisis y los movimientos de los productos, debe conservar la dimensi¢n.";FRC=" Vous devez ainsi conserver la dimension pour garder l''uniformit‚ entre la vue d''analyse et les ‚critures d''articles.";ENC=" You must therefore retain the dimension to keep consistency between the analysis view and the Item entries."';
      Text004@1004 : TextConst 'ENU=All analysis views must be updated with the latest Item entries and Item budget entries.;ESM=Todas las vista de an lisis deben actualizarse con los £ltimos movimientos de productos y del presupuesto de productos.;FRC=Toutes les vues d''analyse doivent ˆtre mises … jour … partir des derniŠres ‚critures d''articles et des derniŠres ‚critures de budget d''article.;ENC=All analysis views must be updated with the latest Item entries and Item budget entries.';
      Text005@1005 : TextConst 'ENU=" Both blocked and unblocked analysis views must be updated.";ESM=" Deben actualizarse las vistas an lisis bloqueadas y sin bloquear.";FRC=" Les vues d''analyse bloqu‚es et non bloqu‚es doivent ˆtre mises … jour.";ENC=" Both blocked and unblocked analysis views must be updated."';
      Text007@1007 : TextConst 'ENU=" Note, you must remove the checkmark in the blocked field before updating the blocked analysis views.\";ESM=" Nota, debe borrar la marca en el campo bloqueado antes de actualizar las vistas an lisis bloqueadas.\";FRC=" Attention, vous devez d‚sactiver le champ Bloqu‚ avant de mettre … jour les vues d''analyse bloqu‚es.\";ENC=" Note, you must remove the checkmark in the blocked field before updating the blocked analysis views.\"';
      Text008@1008 : TextConst 'ENU=Currently, %1 analysis views are not updated.;ESM=Vistas an lisis %1 no est n actualizadas.;FRC=%1 vues d''analyse ne sont actuellement pas … jour.;ENC=Currently, %1 analysis views are not updated.';
      Text009@1009 : TextConst 'ENU=" Do you wish to update these analysis views?";ESM=" ¨Confirma que desea actualizar estas vistas an lisis?";FRC=" Souhaitez-vous mettre … jour ces vues d''analyse?";ENC=" Do you wish to update these analysis views?"';
      Text010@1010 : TextConst 'ENU=All analysis views must be updated with the latest Item entries.;ESM=Todas las vista de an lisis deben actualizarse con los £ltimos movimientos de productos.;FRC=Toutes les vues d''analyse doivent ˆtre mises … jour … partir des derniŠres ‚critures d''articles.;ENC=All analysis views must be updated with the latest Item entries.';
      Text011@1011 : TextConst 'ENU=If you change the contents of the %1 field, the analysis view entries will be deleted.;ESM=Si cambia los contenidos del campo %1, se borrar n los movs. vista an lisis.;FRC=Si vous modifiez le contenu du champ %1, les ‚critures vue d''analyse seront supprim‚es.;ENC=If you change the contents of the %1 field, the analysis view entries will be deleted.';
      Text012@1012 : TextConst 'ENU=\You will have to update again.\\Do you want to enter a new value in the %1 field?;ESM=\Tendr  que actualizar de nuevo.\\¨Quiere introducir un valor nuevo en el campo %1?;FRC=\Vous allez devoir faire une nouvelle mise … jour.\\Souhaitez-vous entrer une nouvelle valeur dans le champ %1?;ENC=\You will have to update again.\\Do you want to enter a new value in the %1 field?';
      Text013@1013 : TextConst 'ENU=The update has been interrupted in response to the warning.;ESM=La actualizaci¢n ha sido interrumpida como repuesta a la advertencia.;FRC=La mise … jour a ‚t‚ interrompue pour respecter l''alerte.;ENC=The update has been interrupted in response to the warning.';
      Text014@1014 : TextConst 'ENU=If you change the contents of the %1 field, the analysis view entries will be changed as well.\\;ESM=Si cambia los contenidos del campo %1, cambiar n tambi‚n los movs. vista an lisis.\\;FRC=Si vous modifiez le contenu du champ %1, les ‚critures vue d''analyse seront ‚galement modifi‚es.\\;ENC=If you change the contents of the %1 field, the analysis view entries will be changed as well.\\';
      Text015@1015 : TextConst 'ENU=Do you want to enter a new value in the %1 field?;ESM=¨Confirma que desea introducir un valor nuevo en el campo %1?;FRC=Souhaitez-vous entrer une nouvelle valeur dans le champ %1?;ENC=Do you want to enter a new value in the %1 field?';
      ItemAnalysisViewEntry@1016 : Record 7154;
      NewItemAnalysisViewEntry@1017 : Record 7154;
      ItemAnalysisViewBudgetEntry@1018 : Record 7156;
      NewItemAnalysisViewBudgetEntry@1019 : Record 7156;
      Dim@1020 : Record 348;
      Text017@1003 : TextConst 'ENU=When you enable %1, you need to update the analysis view. Do you want to update the analysis view now?;ESM=Si se activa %1, debe actualizarse la vista de an lisis. ¨Desea actualizar la vista de an lisis ahora?;FRC=Si vous activez %1, vous devez mettre … jour la vue d''analyse. Voulez-vous mettre … jour la vue d''analyse maintenantÿ?;ENC=When you enable %1, you need to update the analysis view. Do you want to update the analysis view now?';

    LOCAL PROCEDURE ModifyDim@2(DimFieldName@1000 : Text[100];DimValue@1001 : Code[20];xDimValue@1002 : Code[20]);
    BEGIN
      IF ("Last Entry No." <> 0) AND (DimValue <> xDimValue) THEN BEGIN
        IF DimValue <> '' THEN BEGIN
          ValidateDelete(DimFieldName);
          ItemAnalysisViewReset;
        END;
        IF DimValue = '' THEN BEGIN
          ValidateModify(DimFieldName);
          CASE DimFieldName OF
            FIELDCAPTION("Dimension 1 Code"):
              BEGIN
                ItemAnalysisViewEntry.SETFILTER("Dimension 1 Value Code",'<>%1','');
                ItemAnalysisViewBudgetEntry.SETFILTER("Dimension 1 Value Code",'<>%1','');
              END;
            FIELDCAPTION("Dimension 2 Code"):
              BEGIN
                ItemAnalysisViewEntry.SETFILTER("Dimension 2 Value Code",'<>%1','');
                ItemAnalysisViewBudgetEntry.SETFILTER("Dimension 2 Value Code",'<>%1','');
              END;
            FIELDCAPTION("Dimension 3 Code"):
              BEGIN
                ItemAnalysisViewEntry.SETFILTER("Dimension 3 Value Code",'<>%1','');
                ItemAnalysisViewBudgetEntry.SETFILTER("Dimension 3 Value Code",'<>%1','');
              END;
          END;
          ItemAnalysisViewEntry.SETRANGE("Analysis Area","Analysis Area");
          ItemAnalysisViewEntry.SETRANGE("Analysis View Code",Code);
          ItemAnalysisViewBudgetEntry.SETRANGE("Analysis Area","Analysis Area");
          ItemAnalysisViewBudgetEntry.SETRANGE("Analysis View Code",Code);
          IF ItemAnalysisViewEntry.FIND('-') THEN
            REPEAT
              ItemAnalysisViewEntry.DELETE;
              NewItemAnalysisViewEntry := ItemAnalysisViewEntry;
              CASE DimFieldName OF
                FIELDCAPTION("Dimension 1 Code"):
                  NewItemAnalysisViewEntry."Dimension 1 Value Code" := '';
                FIELDCAPTION("Dimension 2 Code"):
                  NewItemAnalysisViewEntry."Dimension 2 Value Code" := '';
                FIELDCAPTION("Dimension 3 Code"):
                  NewItemAnalysisViewEntry."Dimension 3 Value Code" := '';
              END;
              InsertItemAnalysisViewEntry;
            UNTIL ItemAnalysisViewEntry.NEXT = 0;
          IF ItemAnalysisViewBudgetEntry.FIND('-') THEN
            REPEAT
              ItemAnalysisViewBudgetEntry.DELETE;
              NewItemAnalysisViewBudgetEntry := ItemAnalysisViewBudgetEntry;
              CASE DimFieldName OF
                FIELDCAPTION("Dimension 1 Code"):
                  NewItemAnalysisViewBudgetEntry."Dimension 1 Value Code" := '';
                FIELDCAPTION("Dimension 2 Code"):
                  NewItemAnalysisViewBudgetEntry."Dimension 2 Value Code" := '';
                FIELDCAPTION("Dimension 3 Code"):
                  NewItemAnalysisViewBudgetEntry."Dimension 3 Value Code" := '';
              END;
              InsertAnalysisViewBudgetEntry;
            UNTIL ItemAnalysisViewBudgetEntry.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE InsertItemAnalysisViewEntry@1();
    BEGIN
      IF NOT NewItemAnalysisViewEntry.INSERT THEN BEGIN
        NewItemAnalysisViewEntry.FIND;
        NewItemAnalysisViewEntry."Sales Amount (Actual)" :=
          NewItemAnalysisViewEntry."Sales Amount (Actual)" + ItemAnalysisViewEntry."Sales Amount (Actual)";
        NewItemAnalysisViewEntry."Cost Amount (Actual)" :=
          NewItemAnalysisViewEntry."Cost Amount (Actual)" + ItemAnalysisViewEntry."Cost Amount (Actual)";
        NewItemAnalysisViewEntry.Quantity :=
          NewItemAnalysisViewEntry.Quantity + ItemAnalysisViewEntry.Quantity;
        NewItemAnalysisViewEntry."Invoiced Quantity" :=
          NewItemAnalysisViewEntry."Invoiced Quantity" + ItemAnalysisViewEntry."Invoiced Quantity";
        NewItemAnalysisViewEntry.MODIFY;
      END;
    END;

    LOCAL PROCEDURE InsertAnalysisViewBudgetEntry@6();
    BEGIN
      IF NOT NewItemAnalysisViewBudgetEntry.INSERT THEN BEGIN
        NewItemAnalysisViewBudgetEntry.FIND;
        NewItemAnalysisViewBudgetEntry."Sales Amount" :=
          NewItemAnalysisViewBudgetEntry."Sales Amount" + ItemAnalysisViewBudgetEntry."Sales Amount";
        NewItemAnalysisViewBudgetEntry.MODIFY;
      END;
    END;

    PROCEDURE ItemAnalysisViewReset@5();
    VAR
      ItemAnalysisViewEntry@1000 : Record 7154;
    BEGIN
      ItemAnalysisViewEntry.SETRANGE("Analysis Area","Analysis Area");
      ItemAnalysisViewEntry.SETRANGE("Analysis View Code",Code);
      ItemAnalysisViewEntry.DELETEALL;
      "Last Entry No." := 0;
      "Last Date Updated" := 0D;
      AnalysisviewBudgetReset;
    END;

    PROCEDURE CheckDimensionsAreRetained@3(ObjectType@1000 : Integer;ObjectID@1001 : Integer;OnlyIfIncludeBudgets@1002 : Boolean);
    BEGIN
      RESET;
      IF OnlyIfIncludeBudgets THEN
        SETRANGE("Include Budgets",TRUE);
      IF FIND('-') THEN
        REPEAT
          CheckDimIsRetained(ObjectType,ObjectID,"Dimension 1 Code",Code,Name);
          CheckDimIsRetained(ObjectType,ObjectID,"Dimension 2 Code",Code,Name);
          CheckDimIsRetained(ObjectType,ObjectID,"Dimension 3 Code",Code,Name);
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE CheckDimIsRetained@8(ObjectType@1000 : Integer;ObjectID@1001 : Integer;DimCode@1002 : Code[20];AnalysisViewCode@1003 : Code[10];AnalysisViewName@1004 : Text[50]);
    VAR
      SelectedDim@1005 : Record 369;
    BEGIN
      IF DimCode <> '' THEN
        IF NOT SelectedDim.GET(USERID,ObjectType,ObjectID,'',DimCode) THEN
          ERROR(
            Text001 +
            Text002,
            DimCode,AnalysisViewCode,AnalysisViewName);
    END;

    PROCEDURE CheckViewsAreUpdated@4();
    VAR
      ValueEntry@1000 : Record 5802;
      ItemBudgetEntry@1001 : Record 7134;
      UpdateItemAnalysisView@1002 : Codeunit 7150;
      NoNotUpdated@1003 : Integer;
    BEGIN
      IF ValueEntry.FINDLAST OR ItemBudgetEntry.FINDLAST THEN BEGIN
        NoNotUpdated := 0;
        RESET;
        IF FIND('-') THEN
          REPEAT
            IF ("Last Entry No." < ValueEntry."Entry No.") OR
               "Include Budgets" AND ("Last Budget Entry No." < ItemBudgetEntry."Entry No.")
            THEN
              NoNotUpdated := NoNotUpdated + 1;
          UNTIL NEXT = 0;
        IF NoNotUpdated > 0 THEN
          IF CONFIRM(
               Text004 +
               Text005 +
               Text007 +
               Text008 +
               Text009,TRUE,NoNotUpdated)
          THEN BEGIN
            IF FIND('-') THEN
              REPEAT
                IF Blocked THEN BEGIN
                  "Refresh When Unblocked" := TRUE;
                  "Last Budget Entry No." := 0;
                  MODIFY;
                END ELSE
                  UpdateItemAnalysisView.Update(Rec,2,TRUE);
              UNTIL NEXT = 0;
          END ELSE
            ERROR(Text010);
      END;
    END;

    LOCAL PROCEDURE UpdateLastEntryNo@7();
    VAR
      ValueEntry@1000 : Record 5802;
    BEGIN
      IF ValueEntry.FINDLAST THEN BEGIN
        SETRANGE(Blocked,FALSE);
        IF FIND('-') THEN
          REPEAT
            "Last Entry No." := ValueEntry."Entry No.";
            MODIFY;
          UNTIL NEXT = 0;
        SETRANGE(Blocked);
      END;
    END;

    PROCEDURE ValidateDelete@10(FieldName@1000 : Text);
    VAR
      Question@1001 : Text;
    BEGIN
      Question := STRSUBSTNO(Text011 + Text012,FieldName);
      IF NOT CONFIRM(Question,TRUE) THEN
        ERROR(Text013);
    END;

    LOCAL PROCEDURE AnalysisviewBudgetReset@9();
    VAR
      ItemAnalysisViewBudgetEntry@1000 : Record 7156;
    BEGIN
      ItemAnalysisViewBudgetEntry.SETRANGE("Analysis Area","Analysis Area");
      ItemAnalysisViewBudgetEntry.SETRANGE("Analysis View Code",Code);
      ItemAnalysisViewBudgetEntry.DELETEALL;
      "Last Budget Entry No." := 0;
    END;

    LOCAL PROCEDURE ValidateModify@11(FieldName@1000 : Text);
    VAR
      Question@1001 : Text;
    BEGIN
      Question := STRSUBSTNO(Text014 + Text015,FieldName);
      IF NOT CONFIRM(Question,TRUE) THEN
        ERROR(Text013);
    END;

    PROCEDURE CopyAnalysisViewFilters@12(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisArea@1006 : Integer;AnalysisViewCode@1002 : Code[10]);
    VAR
      AnalysisSelectedDim@1003 : Record 7159;
      Item@1004 : Record 27;
      Location@1005 : Record 14;
    BEGIN
      IF GET(AnalysisArea,AnalysisViewCode) THEN BEGIN
        IF "Item Filter" <> '' THEN
          IF AnalysisSelectedDim.GET(
               USERID,ObjectType,ObjectID,AnalysisArea,AnalysisViewCode,Item.TABLECAPTION)
          THEN BEGIN
            IF AnalysisSelectedDim."Dimension Value Filter" = '' THEN BEGIN
              AnalysisSelectedDim."Dimension Value Filter" := "Item Filter";
              AnalysisSelectedDim.MODIFY;
            END;
          END ELSE BEGIN
            AnalysisSelectedDim.INIT;
            AnalysisSelectedDim."User ID" := USERID;
            AnalysisSelectedDim."Object Type" := ObjectType;
            AnalysisSelectedDim."Object ID" := ObjectID;
            AnalysisSelectedDim."Analysis Area" := AnalysisArea;
            AnalysisSelectedDim."Analysis View Code" := AnalysisViewCode;
            AnalysisSelectedDim."Dimension Code" := Item.TABLECAPTION;
            AnalysisSelectedDim."Dimension Value Filter" := "Item Filter";
            AnalysisSelectedDim.INSERT;
          END;
        IF "Location Filter" <> '' THEN
          IF AnalysisSelectedDim.GET(
               USERID,ObjectType,ObjectID,AnalysisArea,AnalysisViewCode,Location.TABLECAPTION)
          THEN BEGIN
            IF AnalysisSelectedDim."Dimension Value Filter" = '' THEN BEGIN
              AnalysisSelectedDim."Dimension Value Filter" := "Location Filter";
              AnalysisSelectedDim.MODIFY;
            END;
          END ELSE BEGIN
            AnalysisSelectedDim.INIT;
            AnalysisSelectedDim."User ID" := USERID;
            AnalysisSelectedDim."Object Type" := ObjectType;
            AnalysisSelectedDim."Object ID" := ObjectID;
            AnalysisSelectedDim."Analysis Area" := AnalysisArea;
            AnalysisSelectedDim."Analysis View Code" := AnalysisViewCode;
            AnalysisSelectedDim."Dimension Code" := Location.TABLECAPTION;
            AnalysisSelectedDim."Dimension Value Filter" := "Location Filter";
            AnalysisSelectedDim.INSERT;
          END;
      END;
    END;

    PROCEDURE SetUpdateOnPosting@13(NewUpdateOnPosting@1000 : Boolean);
    BEGIN
      IF "Update on Posting" = NewUpdateOnPosting THEN
        EXIT;

      IF NOT "Update on Posting" AND NewUpdateOnPosting THEN
        IF NOT CONFIRM(STRSUBSTNO(Text017,FIELDCAPTION("Update on Posting")),FALSE) THEN
          EXIT;

      "Update on Posting" := NewUpdateOnPosting;
      IF "Update on Posting" THEN BEGIN
        MODIFY;
        CODEUNIT.RUN(CODEUNIT::"Update Item Analysis View",Rec);
        FIND;
      END;
    END;

    BEGIN
    END.
  }
}

