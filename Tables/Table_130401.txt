OBJECT Table 130401 CAL Test Line
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Line Type" = "Line Type"::Codeunit THEN
                 CALTestMgt.RunSuite(Rec,FALSE);
             END;

    OnModify=BEGIN
               IF ("Line Type" = "Line Type"::Codeunit) AND
                  ("Test Codeunit" <> xRec."Test Codeunit")
               THEN
                 CALTestMgt.RunSuite(Rec,FALSE);
             END;

    OnDelete=BEGIN
               DeleteChildren;
             END;

    CaptionML=ENU=CAL Test Line;
  }
  FIELDS
  {
    { 1   ;   ;Test Suite          ;Code10        ;TableRelation="CAL Test Suite".Name;
                                                   CaptionML=ENU=Test Suite }
    { 2   ;   ;Line No.            ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=ENU=Line No. }
    { 3   ;   ;Line Type           ;Option        ;InitValue=Codeunit;
                                                   OnValidate=BEGIN
                                                                CASE "Line Type" OF
                                                                  "Line Type"::Group:
                                                                    TESTFIELD("Test Codeunit",0);
                                                                  "Line Type"::Codeunit:
                                                                    BEGIN
                                                                      TESTFIELD("Function",'');
                                                                      Name := '';
                                                                    END;
                                                                END;

                                                                UpdateLevelNo;
                                                              END;

                                                   CaptionML=ENU=Line Type;
                                                   OptionCaptionML=ENU=Group,Codeunit,Function;
                                                   OptionString=Group,Codeunit,Function;
                                                   Editable=No }
    { 4   ;   ;Test Codeunit       ;Integer       ;TableRelation=IF (Line Type=CONST(Codeunit)) AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Codeunit),
                                                                                                                                     Object Subtype=CONST(Test));
                                                   OnValidate=VAR
                                                                AllObjWithCaption@1001 : Record 2000000058;
                                                              BEGIN
                                                                IF "Test Codeunit" = 0 THEN
                                                                  EXIT;
                                                                TESTFIELD("Function",'');
                                                                IF "Line Type" = "Line Type"::Group THEN
                                                                  TESTFIELD("Test Codeunit",0);
                                                                IF AllObjWithCaption.GET(AllObjWithCaption."Object Type"::Codeunit,"Test Codeunit") THEN
                                                                  Name := AllObjWithCaption."Object Name";
                                                                UpdateLevelNo;
                                                              END;

                                                   CaptionML=ENU=Test Codeunit;
                                                   Editable=No }
    { 5   ;   ;Name                ;Text128       ;OnValidate=VAR
                                                                TestUnitNo@1000 : Integer;
                                                              BEGIN
                                                                CASE "Line Type" OF
                                                                  "Line Type"::Group:
                                                                    ;
                                                                  "Line Type"::"Function":
                                                                    TESTFIELD(Name,"Function");
                                                                  "Line Type"::Codeunit:
                                                                    BEGIN
                                                                      TESTFIELD(Name);
                                                                      EVALUATE(TestUnitNo,Name);
                                                                      VALIDATE("Test Codeunit",TestUnitNo);
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Name;
                                                   Editable=No }
    { 6   ;   ;Function            ;Text128       ;OnValidate=BEGIN
                                                                IF "Line Type" <> "Line Type"::"Function" THEN BEGIN
                                                                  TESTFIELD("Function",'');
                                                                  EXIT;
                                                                END;
                                                                UpdateLevelNo;
                                                                Name := "Function";
                                                              END;

                                                   CaptionML=ENU=Function;
                                                   Editable=No }
    { 7   ;   ;Run                 ;Boolean       ;OnValidate=BEGIN
                                                                IF "Function" = 'OnRun' THEN
                                                                  ERROR(CannotChangeValueErr);
                                                                CALTestLine.COPY(Rec);
                                                                UpdateGroup(CALTestLine);
                                                                UpdateChildren(CALTestLine);
                                                              END;

                                                   CaptionML=ENU=Run }
    { 8   ;   ;Result              ;Option        ;OnValidate=BEGIN
                                                                "First Error" := '';
                                                              END;

                                                   CaptionML=ENU=Result;
                                                   OptionCaptionML=ENU=" ,Failure,Success,Skipped";
                                                   OptionString=[ ,Failure,Success,Skipped];
                                                   Editable=No }
    { 9   ;   ;First Error         ;Text250       ;CaptionML=ENU=First Error;
                                                   Editable=No }
    { 10  ;   ;Start Time          ;DateTime      ;CaptionML=ENU=Start Time;
                                                   Editable=No }
    { 11  ;   ;Finish Time         ;DateTime      ;CaptionML=ENU=Finish Time;
                                                   Editable=No }
    { 12  ;   ;Level               ;Integer       ;CaptionML=ENU=Level;
                                                   Editable=No }
    { 13  ;   ;Hit Objects         ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("CAL Test Coverage Map" WHERE (Test Codeunit ID=FIELD(Test Codeunit)));
                                                   CaptionML=ENU=Hit Objects;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Test Suite,Line No.                     ;Clustered=Yes }
    {    ;Test Suite,Result,Line Type,Run          }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CALTestLine@1002 : Record 130401;
      CannotChangeValueErr@1001 : TextConst '@@@={Locked};ENU=You cannot change the value of the OnRun.';
      CALTestMgt@1003 : Codeunit 130401;

    PROCEDURE UpdateGroup@1(VAR CALTestLine@1000 : Record 130401);
    VAR
      CopyOfCALTestLine@1001 : Record 130401;
      OutOfGroup@1002 : Boolean;
    BEGIN
      IF NOT CALTestLine.Run THEN
        EXIT;
      IF NOT ("Line Type" = "Line Type"::"Function") THEN
        EXIT;

      CopyOfCALTestLine.COPY(CALTestLine);
      WITH CALTestLine DO BEGIN
        RESET;
        SETRANGE("Test Suite","Test Suite");
        REPEAT
          OutOfGroup :=
            (NEXT(-1) = 0) OR
            ("Test Codeunit" <> CopyOfCALTestLine."Test Codeunit");

          IF (("Line Type" IN ["Line Type"::Group,"Line Type"::Codeunit]) OR ("Function" = 'OnRun')) AND
             NOT Run
          THEN BEGIN
            Run := TRUE;
            MODIFY;
          END;
        UNTIL OutOfGroup;
      END;
      CALTestLine.COPY(CopyOfCALTestLine);
    END;

    PROCEDURE UpdateChildren@2(VAR CALTestLine@1001 : Record 130401);
    VAR
      CopyOfCALTestLine@1003 : Record 130401;
    BEGIN
      IF CALTestLine."Line Type" = "Line Type"::"Function" THEN
        EXIT;

      CopyOfCALTestLine.COPY(CALTestLine);
      WITH CALTestLine DO BEGIN
        RESET;
        SETRANGE("Test Suite","Test Suite");
        WHILE (NEXT <> 0) AND NOT ("Line Type" IN ["Line Type"::Group,CopyOfCALTestLine."Line Type"]) DO BEGIN
          Run := CopyOfCALTestLine.Run;
          MODIFY;
        END;
      END;
      CALTestLine.COPY(CopyOfCALTestLine);
    END;

    PROCEDURE GetMinCodeunitLineNo@4() MinLineNo : Integer;
    VAR
      CALTestLine@1001 : Record 130401;
    BEGIN
      WITH CALTestLine DO BEGIN
        COPY(Rec);
        RESET;
        SETRANGE("Test Suite","Test Suite");

        MinLineNo := "Line No.";
        REPEAT
          MinLineNo := "Line No.";
        UNTIL (Level < 2) OR (NEXT(-1) = 0);
      END;
    END;

    PROCEDURE GetMaxGroupLineNo@3() MaxLineNo : Integer;
    VAR
      CALTestLine@1000 : Record 130401;
    BEGIN
      WITH CALTestLine DO BEGIN
        COPY(Rec);
        RESET;
        SETRANGE("Test Suite","Test Suite");

        MaxLineNo := "Line No.";
        WHILE (NEXT <> 0) AND (Level >= Rec.Level) DO
          MaxLineNo := "Line No.";
      END;
    END;

    PROCEDURE GetMaxCodeunitLineNo@7(VAR NoOfFunctions@1001 : Integer) MaxLineNo : Integer;
    VAR
      CALTestLine@1000 : Record 130401;
    BEGIN
      TESTFIELD("Test Codeunit");
      NoOfFunctions := 0;

      WITH CALTestLine DO BEGIN
        COPY(Rec);
        RESET;
        SETRANGE("Test Suite","Test Suite");
        MaxLineNo := "Line No.";
        WHILE (NEXT <> 0) AND ("Line Type" = "Line Type"::"Function") DO BEGIN
          MaxLineNo := "Line No.";
          IF Run THEN
            NoOfFunctions += 1;
        END;
      END;
    END;

    PROCEDURE DeleteChildren@5();
    VAR
      CopyOfCALTestLine@1000 : Record 130401;
    BEGIN
      CopyOfCALTestLine.COPY(Rec);
      RESET;
      SETRANGE("Test Suite","Test Suite");
      WHILE (NEXT <> 0) AND (Level > CopyOfCALTestLine.Level) DO
        DELETE(TRUE);
      COPY(CopyOfCALTestLine);
    END;

    PROCEDURE CalcTestResults@6(VAR Success@1000 : Integer;VAR Fail@1001 : Integer;VAR Skipped@1002 : Integer;VAR NotExecuted@1004 : Integer);
    VAR
      CALTestLine@1003 : Record 130401;
    BEGIN
      CALTestLine.SETRANGE("Test Suite","Test Suite");
      CALTestLine.SETFILTER("Function",'<>%1','OnRun');
      CALTestLine.SETRANGE("Line Type","Line Type"::"Function");

      CALTestLine.SETRANGE(Result,Result::Success);
      Success := CALTestLine.COUNT;

      CALTestLine.SETRANGE(Result,Result::Failure);
      Fail := CALTestLine.COUNT;

      CALTestLine.SETRANGE(Result,Result::Skipped);
      Skipped := CALTestLine.COUNT;

      CALTestLine.SETRANGE(Result,Result::" ");
      NotExecuted := CALTestLine.COUNT;
    END;

    LOCAL PROCEDURE UpdateLevelNo@20();
    BEGIN
      CASE "Line Type" OF
        "Line Type"::Group:
          Level := 0;
        "Line Type"::Codeunit:
          Level := 1;
        ELSE
          Level := 2;
      END;
    END;

    PROCEDURE ShowTestResults@8();
    VAR
      CALTestResult@1000 : Record 130405;
    BEGIN
      CALTestResult.SETRANGE("Codeunit ID","Test Codeunit");
      IF "Function" <> '' THEN
        CALTestResult.SETRANGE("Function Name","Function");
      IF CALTestResult.FINDLAST THEN;
      PAGE.RUN(PAGE::"CAL Test Results",CALTestResult);
    END;

    BEGIN
    END.
  }
}

