OBJECT Table 7113 Analysis Type
{
  OBJECT-PROPERTIES
  {
    Date=01/29/16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.44974;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Name;
    CaptionML=[ENU=Analysis Type;
               ESM=Tipo de an†lisis;
               FRC=Type d'analyse;
               ENC=Analysis Type];
    LookupPageID=Page7111;
    DrillDownPageID=Page7111;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 3   ;   ;Value Type          ;Option        ;OnValidate=BEGIN
                                                                IF xRec."Value Type" <> "Value Type" THEN BEGIN
                                                                  "Item Ledger Entry Type Filter" := '';
                                                                  "Value Entry Type Filter" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Value Type;
                                                              ESM=Tipo de valor;
                                                              FRC=Type de valeur;
                                                              ENC=Value Type];
                                                   OptionCaptionML=[ENU=" ,Quantity,Sales Amount,Cost Amount,Non-Invntble Amount,Unit Price,Standard Cost,Indirect Cost,Unit Cost";
                                                                    ESM=" ,Cantidad,Importe venta,Importe costo,Importe no inventariable,Precio unitario,Costo est†ndar,Costo indirecto,Costo unitario";
                                                                    FRC=" ,QuantitÇ,Montant vente,Coñt indiquÇ,Montant avant balance stock,Prix unitaire,Coñt standard,Coñt indirect,Coñt unitaire";
                                                                    ENC=" ,Quantity,Sales Amount,Cost Amount,Non-Invntble Amount,Unit Price,Standard Cost,Indirect Cost,Unit Cost"];
                                                   OptionString=[ ,Quantity,Sales Amount,Cost Amount,Non-Invntble Amount,Unit Price,Standard Cost,Indirect Cost,Unit Cost] }
    { 4   ;   ;Item Ledger Entry Type Filter;Text250;
                                                   OnValidate=BEGIN
                                                                IF "Item Ledger Entry Type Filter" <> '' THEN
                                                                  IF NOT ("Value Type" IN
                                                                          ["Value Type"::Quantity,
                                                                           "Value Type"::"Cost Amount",
                                                                           "Value Type"::"Non-Invntble Amount",
                                                                           "Value Type"::"Sales Amount"])
                                                                  THEN
                                                                    ERROR(Text000,FIELDCAPTION("Item Ledger Entry Type Filter"),"Value Type");
                                                                AnalysisRepMgmt.ValidateFilter(
                                                                  "Item Ledger Entry Type Filter",DATABASE::"Analysis Type",
                                                                  FIELDNO("Item Ledger Entry Type Filter"),CurrFieldNo <> FIELDNO("Item Ledger Entry Type Filter"));
                                                              END;

                                                   CaptionML=[ENU=Item Ledger Entry Type Filter;
                                                              ESM=Filtro tipo mov. producto;
                                                              FRC=Filtre type Çcr. article;
                                                              ENC=Item Ledger Entry Type Filter] }
    { 5   ;   ;Value Entry Type Filter;Text250    ;OnValidate=BEGIN
                                                                IF "Value Entry Type Filter" <> '' THEN
                                                                  IF NOT ("Value Type" IN
                                                                          ["Value Type"::"Cost Amount",
                                                                           "Value Type"::"Non-Invntble Amount",
                                                                           "Value Type"::"Sales Amount"])
                                                                  THEN
                                                                    ERROR(Text000,FIELDCAPTION("Value Entry Type Filter"),"Value Type");
                                                                AnalysisRepMgmt.ValidateFilter(
                                                                  "Value Entry Type Filter",DATABASE::"Analysis Type",
                                                                  FIELDNO("Value Entry Type Filter"),CurrFieldNo <> FIELDNO("Value Entry Type Filter"));
                                                              END;

                                                   CaptionML=[ENU=Value Entry Type Filter;
                                                              ESM=Filtrar por tipo de mov. valor;
                                                              FRC=Filtre type d'Çcriture valeur;
                                                              ENC=Value Entry Type Filter] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot specify a %1 for %2.;ESM=No es posible especificar un %1 para %2.;FRC=Vous ne pouvez pas entrer un %1 pour %2.;ENC=You cannot specify a %1 for %2.';
      Text001@1001 : TextConst 'ENU=COGS;ESM=CV;FRC=CPV;ENC=COGS';
      Text002@1002 : TextConst 'ENU=Non-Inventoriable Cost;ESM=Costo no inventariable;FRC=Coñt avant balance stock;ENC=Non-Inventoriable Cost';
      Text003@1003 : TextConst 'ENU=Sales Amount;ESM=Importe ventas;FRC=Montant de ventes;ENC=Sales Amount';
      Text004@1004 : TextConst 'ENU=Sales Quantity;ESM=Volumen ventas;FRC=QuantitÇ de vente;ENC=Sales Quantity';
      Text005@1005 : TextConst 'ENU=Unit Price;ESM=Precio unitario;FRC=Prix unitaire;ENC=Unit Price';
      Text006@1006 : TextConst 'ENU=COGS;ESM=CV;FRC=Val. sortie stock;ENC=COGS';
      Text007@1007 : TextConst 'ENU=NON-INVTBL;ESM=NO-INVENT;FRC=TBLNON-INV;ENC=NON-INVTBL';
      Text008@1008 : TextConst 'ENU=SALES-AMT;ESM=IMP-VENTAS;FRC=MT-VENTES;ENC=SALES-AMT';
      Text009@1009 : TextConst 'ENU=SALES-QTY;ESM=VOL-VENTAS;FRC=QTê-VENTES;ENC=SALES-QTY';
      Text010@1010 : TextConst 'ENU=UNIT-PRICE;ESM=PREC-VENTA;FRC=PRIX-UNITê;ENC=UNIT-PRICE';
      Text011@1011 : TextConst 'ENU=Direct Cost;ESM=Costo directo;FRC=Coñt direct;ENC=Direct Cost';
      Text012@1012 : TextConst 'ENU=DIRCOST;ESM=COSTODIR;FRC=COÍTDIR;ENC=DIRCOST';
      Text013@1013 : TextConst 'ENU=Purchases;ESM=Compras;FRC=Achats;ENC=Purchases';
      Text014@1014 : TextConst 'ENU=PURCHASES;ESM=COMPRAS;FRC=ACHATS;ENC=PURCHASES';
      Text015@1015 : TextConst 'ENU=Purchases Quantity;ESM=Volumen compras;FRC=QuantitÇ achetÇe;ENC=Purchases Quantity';
      Text016@1016 : TextConst 'ENU=PURCH-QTY;ESM=VOL-COMP;FRC=QTê-ACH;ENC=PURCH-QTY';
      Text017@1017 : TextConst 'ENU=Direct Cost - Capacity;ESM=Costo directo: capacidad;FRC=Coñt direct - CapacitÇ;ENC=Direct Cost - Capacity';
      Text018@1018 : TextConst 'ENU=DIRCOSTCAP;ESM=COSTDIRCAP;FRC=MAXCOÍTDIR;ENC=DIRCOSTCAP';
      Text019@1019 : TextConst 'ENU=Indirect Cost;ESM=Costo indirecto;FRC=Coñt indirect;ENC=Indirect Cost';
      Text020@1020 : TextConst 'ENU=INDIRCOST;ESM=COSTOINDIR;FRC=COÍTINDIR;ENC=INDIRCOST';
      Text021@1021 : TextConst 'ENU=Revaluation;ESM=Reevaluaci¢n;FRC=RÇÇvaluation;ENC=Revaluation';
      Text022@1022 : TextConst 'ENU=REVAL;ESM=REEVAL;FRC=RêêVAL;ENC=REVAL';
      Text023@1023 : TextConst 'ENU=Rounding;ESM=Redondeo;FRC=Arrondissement;ENC=Rounding';
      Text024@1024 : TextConst 'ENU=ROUNDING;ESM=REDONDEO;FRC=ARRONDISS.;ENC=ROUNDING';
      Text025@1025 : TextConst 'ENU=Variance;ESM=Desviaci¢n;FRC=êcart;ENC=Variance';
      Text026@1026 : TextConst 'ENU=VARIANCE;ESM=DESVIACI‡N;FRC=êCART;ENC=VARIANCE';
      Text027@1027 : TextConst 'ENU=Inventory;ESM=Inventario;FRC=Inventaire;ENC=Inventory';
      Text028@1028 : TextConst 'ENU=INVENTORY;ESM=INVENTARIO;FRC=INVENTAIRE;ENC=INVENTORY';
      Text029@1029 : TextConst 'ENU=Consumption;ESM=Consumo;FRC=Consommation;ENC=Consumption';
      Text030@1030 : TextConst 'ENU=CONSUMP;ESM=CONSUMO;FRC=CONSOMM;ENC=CONSUMP';
      Text031@1031 : TextConst 'ENU=Negative Adjustment;ESM=Ajuste negativo;FRC=Ajustement nÇgatif;ENC=Negative Adjustment';
      Text032@1032 : TextConst 'ENU=N-ADJTM;ESM=AJUSTENEG;FRC=AJUST-N;ENC=N-ADJTM';
      Text033@1033 : TextConst 'ENU=Output;ESM=Salida;FRC=Sortie;ENC=Output';
      Text034@1034 : TextConst 'ENU=OUTPUT;ESM=SALIDA;FRC=SORTIE;ENC=OUTPUT';
      Text035@1035 : TextConst 'ENU=Postive Adjustment;ESM=Ajuste positivo;FRC=Ajustement positif;ENC=Postive Adjustment';
      Text036@1036 : TextConst 'ENU=P-ADJTM;ESM=AJUSTEPOS;FRC=AJUST-P;ENC=P-ADJTM';
      Text037@1037 : TextConst 'ENU=Transfer;ESM=Transferencia;FRC=Transfert;ENC=Transfer';
      Text038@1038 : TextConst 'ENU=TRANSFER;ESM=TRANSFER;FRC=TRANSFERT;ENC=TRANSFER';
      Text039@1039 : TextConst 'ENU=Consumption Quantity;ESM=Consumo (cantidad);FRC=QuantitÇ consommÇe;ENC=Consumption Quantity';
      Text040@1040 : TextConst 'ENU=CONSUMPQTY;ESM=VOLCONSUMO;FRC=QTêCONSOMM;ENC=CONSUMPQTY';
      Text041@1041 : TextConst 'ENU=Inventory Quantity;ESM=Volumen en inventario;FRC=QuantitÇ en inventaire;ENC=Inventory Quantity';
      Text042@1042 : TextConst 'ENU=INVT-QTY;ESM=VOL-INV;FRC=QTê-INVT;ENC=INVT-QTY';
      Text043@1043 : TextConst 'ENU=Neg. Adjmt. Quantity;ESM=Volumen aj. neg.;FRC=QuantitÇ d''ajustement nÇgatif;ENC=Neg. Adjmt. Quantity';
      Text044@1044 : TextConst 'ENU=N-ADJTMQTY;ESM=VOLAJNEG;FRC=QTêAJUST-N;ENC=N-ADJTMQTY';
      Text045@1045 : TextConst 'ENU=Output Quantity;ESM=Cantidad salida;FRC=QuantitÇ de sorties;ENC=Output Quantity';
      Text046@1046 : TextConst 'ENU=OUTPUT-QTY;ESM=VOLSALIDA;FRC=QTê-SORTIE;ENC=OUTPUT-QTY';
      Text047@1047 : TextConst 'ENU=Pos. Adjmt. Quantity;ESM=Volumen aj. pos.;FRC=QuantitÇ d''ajustement positif;ENC=Pos. Adjmt. Quantity';
      Text048@1048 : TextConst 'ENU=P-ADJTMQTY;ESM=CANTAJPOS;FRC=QTêAJUST-P;ENC=P-ADJTMQTY';
      Text049@1049 : TextConst 'ENU=Transfer Quantity;ESM=Volumen transferencia;FRC=QuantitÇ transfÇrÇe;ENC=Transfer Quantity';
      Text050@1050 : TextConst 'ENU=TRANS-QTY;ESM=VOL-TRANS;FRC=QTê-TRANS;ENC=TRANS-QTY';
      Text051@1051 : TextConst 'ENU=Standard Cost;ESM=Costo est†ndar;FRC=Coñt standard;ENC=Standard Cost';
      Text052@1052 : TextConst 'ENU=STDCOST;ESM=COSTOEST;FRC=COÍTSTD;ENC=STDCOST';
      Text053@1053 : TextConst 'ENU=Indirect Cost %;ESM=% Costo indirecto;FRC=% coñt indirect;ENC=Indirect Cost %';
      Text054@1054 : TextConst 'ENU=INDCOSTPCT;ESM=PCOSTOIND;FRC=COÍTINDPCT;ENC=INDCOSTPCT';
      Text055@1055 : TextConst 'ENU=The default Analysis Types have been recreated.;ESM=Se han vuelto a crear los tipos de an†lisis predeterminados.;FRC=Les types d''analyse par dÇfaut ont ÇtÇ recrÇÇs.;ENC=The default Analysis Types have been recreated.';
      AnalysisRepMgmt@1056 : Codeunit 7110;

    PROCEDURE ResetDefaultAnalysisTypes@1(ShowMessage@1000 : Boolean);
    VAR
      ItemStatBuf@1001 : Record 5821;
    BEGIN
      InsertItemAnalysisType(
        Text001,
        Text006,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('<>''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Revaluation)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text007,
        Text002,
        '<>'' ''',
        '',
        "Value Type"::"Non-Invntble Amount");
      InsertItemAnalysisType(
        Text008,
        Text003,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('<>''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Revaluation)),
        "Value Type"::"Sales Amount");
      InsertItemAnalysisType(
        Text009,
        Text004,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text010,
        Text005,
        '',
        '',
        "Value Type"::"Unit Price");
      InsertItemAnalysisType(
        Text012,
        Text011,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::"Direct Cost")),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text014,
        Text013,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Purchase)),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text016,
        Text015,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Purchase)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text018,
        Text017,
        ''' ''',
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::"Direct Cost")),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text020,
        Text019,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::"Indirect Cost")),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text022,
        Text021,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Revaluation)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text024,
        Text023,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Rounding)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text026,
        Text025,
        STRSUBSTNO('<>''%1''&<>'' ''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Sale)),
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Variance)),
        "Value Type"::"Cost Amount");

      InsertItemAnalysisType(
        Text028,
        Text027,
        '<>'' ''',
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text030,
        Text029,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Consumption)),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text032,
        Text031,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Negative Adjmt.")),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text034,
        Text033,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Output)),
        STRSUBSTNO('<>''%1''',FORMAT(ItemStatBuf."Entry Type Filter"::Variance)),
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text036,
        Text035,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Positive Adjmt.")),
        '',
        "Value Type"::"Cost Amount");
      InsertItemAnalysisType(
        Text038,
        Text037,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Transfer)),
        '',
        "Value Type"::"Cost Amount");

      InsertItemAnalysisType(
        Text040,
        Text039,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Consumption)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text042,
        Text041,
        '<>'' ''',
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text044,
        Text043,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Negative Adjmt.")),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text046,
        Text045,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Output)),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text048,
        Text047,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::"Positive Adjmt.")),
        '',
        "Value Type"::Quantity);
      InsertItemAnalysisType(
        Text050,
        Text049,
        STRSUBSTNO('=''%1''',FORMAT(ItemStatBuf."Item Ledger Entry Type Filter"::Transfer)),
        '',
        "Value Type"::Quantity);

      InsertItemAnalysisType(
        Text052,
        Text051,
        '',
        '',
        "Value Type"::"Standard Cost");
      InsertItemAnalysisType(
        Text054,
        Text053,
        '',
        '',
        "Value Type"::"Indirect Cost");

      IF ShowMessage THEN
        MESSAGE(Text055);
    END;

    LOCAL PROCEDURE InsertItemAnalysisType@2(Code2@1006 : Code[10];Name2@1000 : Text[30];ItemLedgEntryTypeFilter@1001 : Text[250];ValueEntryTypeFilter@1002 : Text[250];ValueType@1003 : ' ,Quantity,Sales Amount,Cost Amount,Non-Invntble Amount,Unit Price,Standard Cost,Indirect Cost,Unit Cost');
    VAR
      AnalysisType@1004 : Record 7113;
    BEGIN
      WITH AnalysisType DO BEGIN
        INIT;
        Code := Code2;
        Name := Name2;
        VALIDATE("Value Type",ValueType);
        VALIDATE("Item Ledger Entry Type Filter",ItemLedgEntryTypeFilter);
        VALIDATE("Value Entry Type Filter",ValueEntryTypeFilter);
        IF NOT INSERT(TRUE) THEN
          MODIFY(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

