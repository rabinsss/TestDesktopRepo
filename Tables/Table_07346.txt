OBJECT Table 7346 Internal Movement Header
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               InvtSetup.GET;
               IF "No." = '' THEN BEGIN
                 InvtSetup.TESTFIELD("Internal Movement Nos.");
                 NoSeriesMgt.InitSeries(
                   InvtSetup."Internal Movement Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
             END;

    OnDelete=BEGIN
               DeleteRelatedLines;
             END;

    OnRename=BEGIN
               ERROR(Text002,TABLECAPTION);
             END;

    CaptionML=[ENU=Internal Movement Header;
               ESM=Encabezado movimientos internos;
               FRC=En-tˆte mouvement interne;
               ENC=Internal Movement Header];
    LookupPageID=Page7400;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                InvtSetup.GET;
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  NoSeriesMgt.TestManual(InvtSetup."Internal Movement Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESM=N§;
                                                              FRC=Nø;
                                                              ENC=No.] }
    { 2   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=BEGIN
                                                                IF NOT WmsManagement.LocationIsAllowed("Location Code") THEN
                                                                  ERROR(Text003,"Location Code");

                                                                CheckLocationSettings("Location Code");
                                                                IF "Location Code" <> xRec."Location Code" THEN
                                                                  "To Bin Code" := '';

                                                                IF USERID <> '' THEN BEGIN
                                                                  FILTERGROUP := 2;
                                                                  SETRANGE("Location Code","Location Code");
                                                                  FILTERGROUP := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              ESM=C¢d. almac‚n;
                                                              FRC=Code d'emplacement;
                                                              ENC=Location Code] }
    { 3   ;   ;Assigned User ID    ;Code50        ;TableRelation="Warehouse Employee" WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=BEGIN
                                                                IF "Assigned User ID" <> '' THEN BEGIN
                                                                  "Assignment Date" := TODAY;
                                                                  "Assignment Time" := TIME;
                                                                END ELSE BEGIN
                                                                  "Assignment Date" := 0D;
                                                                  "Assignment Time" := 0T;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Assigned User ID;
                                                              ESM=Id. usuario asignado;
                                                              FRC=Code utilisateur affect‚;
                                                              ENC=Assigned User ID] }
    { 4   ;   ;Assignment Date     ;Date          ;CaptionML=[ENU=Assignment Date;
                                                              ESM=Fecha asignaci¢n;
                                                              FRC=Date affectation;
                                                              ENC=Assignment Date];
                                                   Editable=No }
    { 5   ;   ;Assignment Time     ;Time          ;CaptionML=[ENU=Assignment Time;
                                                              ESM=Hora asignaci¢n;
                                                              FRC=Heure affectation;
                                                              ENC=Assignment Time];
                                                   Editable=No }
    { 6   ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESM=Nos. serie;
                                                              FRC=S‚ries de nø;
                                                              ENC=No. Series] }
    { 7   ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Warehouse Comment Line" WHERE (Table Name=CONST(Internal Movement),
                                                                                                     Type=CONST(" "),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESM=Comentario;
                                                              FRC=Commentaire;
                                                              ENC=Comment];
                                                   Editable=No }
    { 8   ;   ;To Bin Code         ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=VAR
                                                                BinType@1000 : Record 7303;
                                                                InternalMovementLine@1001 : Record 7347;
                                                              BEGIN
                                                                IF xRec."To Bin Code" <> "To Bin Code" THEN BEGIN
                                                                  IF "To Bin Code" <> '' THEN BEGIN
                                                                    GetLocation("Location Code");
                                                                    Location.TESTFIELD("Bin Mandatory");
                                                                    IF "To Bin Code" = Location."Adjustment Bin Code" THEN
                                                                      FIELDERROR(
                                                                        "To Bin Code",
                                                                        STRSUBSTNO(
                                                                          Text001,Location.FIELDCAPTION("Adjustment Bin Code"),
                                                                          Location.TABLECAPTION));

                                                                    Bin.GET("Location Code","To Bin Code");
                                                                    IF Bin."Bin Type Code" <> '' THEN
                                                                      IF BinType.GET(Bin."Bin Type Code") THEN
                                                                        BinType.TESTFIELD(Receive,FALSE);
                                                                  END;
                                                                  InternalMovementLine.SETRANGE("No.","No.");
                                                                  IF NOT InternalMovementLine.ISEMPTY THEN
                                                                    MESSAGE(Text004,FIELDCAPTION("To Bin Code"),TABLECAPTION);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=To Bin Code;
                                                              ESM=Hasta c¢d. ubicaci¢n;
                                                              FRC=Vers code de zone;
                                                              ENC=To Bin Code] }
    { 10  ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              ESM=Fecha vencimiento;
                                                              FRC=Date d'‚ch‚ance;
                                                              ENC=Due Date] }
    { 12  ;   ;Sorting Method      ;Option        ;OnValidate=BEGIN
                                                                IF "Sorting Method" <> xRec."Sorting Method" THEN
                                                                  SortWhseDoc;
                                                              END;

                                                   CaptionML=[ENU=Sorting Method;
                                                              ESM=M‚todo ordenaci¢n;
                                                              FRC=M‚thode de tri;
                                                              ENC=Sorting Method];
                                                   OptionCaptionML=[ENU=" ,Item,Shelf or Bin,Due Date";
                                                                    ESM=" ,Prod.,Estant. o ubic.,Fecha vto.";
                                                                    FRC=" ,Article,Tablette ou Zone,Date d'‚ch‚ance";
                                                                    ENC=" ,Item,Shelf or Bin,Due Date"];
                                                   OptionString=[ ,Item,Shelf or Bin,Due Date] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Location@1009 : Record 14;
      Bin@1011 : Record 7354;
      InvtSetup@1001 : Record 313;
      NoSeriesMgt@1003 : Codeunit 396;
      Text000@1004 : TextConst 'ENU=You must first set up user %1 as a warehouse employee.;ESM=Primero debe configurar usuario %1 como empleado almac‚n.;FRC=Vous devez d''abord ‚tablir l''utilisateur %1 … titre de magasinier.;ENC=You must first set up user %1 as a warehouse employee.';
      WmsManagement@1014 : Codeunit 7302;
      ItemTrackingMgt@1015 : Codeunit 6500;
      Text001@1008 : TextConst 'ENU=must not be the %1 of the %2;ESM=no debe ser el %1 del %2;FRC=ne doit pas ˆtre le %1 de %2;ENC=must not be the %1 of the %2';
      Text002@1010 : TextConst 'ENU=You cannot rename a %1.;ESM=No se puede cambiar el nombre a %1.;FRC=Vous ne pouvez pas renommer %1.;ENC=You cannot rename a %1.';
      Text003@1013 : TextConst 'ENU=You cannot use Location Code %1.;ESM=No puede usar el c¢digo de almac‚n %1.;FRC=Vous ne pouvez pas utiliser le code d''emplacement %1.;ENC=You cannot use Location Code %1.';
      Text004@1002 : TextConst 'ENU=You have changed the %1 on the %2, but it has not been changed on the existing internal movement lines.\You must update the existing internal movement lines manually.;ESM=Ha cambiado %1 en la %2, pero no se ha modificado en las l¡neas de movimiento interno existentes.\Debe actualizar las l¡neas de movimiento interno existentes manualmente.;FRC=Vous avez modifi‚ le %1 de %2, mais il n''a pas ‚t‚ modifi‚ sur les lignes mouvement interne existantes.\Vous devez mettre … jour manuellement les lignes mouvement interne existantes.;ENC=You have changed the %1 on the %2, but it has not been changed on the existing internal movement lines.\You must update the existing internal movement lines manually.';

    LOCAL PROCEDURE SortWhseDoc@3();
    VAR
      InternalMovementLine@1001 : Record 7347;
      SequenceNo@1000 : Integer;
    BEGIN
      InternalMovementLine.RESET;
      InternalMovementLine.SETRANGE("No.","No.");
      CASE "Sorting Method" OF
        "Sorting Method"::Item:
          InternalMovementLine.SETCURRENTKEY("No.","Item No.");
        "Sorting Method"::"Shelf or Bin":
          BEGIN
            GetLocation("Location Code");
            IF Location."Bin Mandatory" THEN
              InternalMovementLine.SETCURRENTKEY("No.","From Bin Code")
            ELSE
              InternalMovementLine.SETCURRENTKEY("No.","Shelf No.");
          END;
        "Sorting Method"::"Due Date":
          InternalMovementLine.SETCURRENTKEY("No.","Due Date");
      END;

      IF InternalMovementLine.FIND('-') THEN BEGIN
        SequenceNo := 10000;
        REPEAT
          InternalMovementLine."Sorting Sequence No." := SequenceNo;
          InternalMovementLine.MODIFY;
          SequenceNo := SequenceNo + 10000;
        UNTIL InternalMovementLine.NEXT = 0;
      END;
    END;

    PROCEDURE AssistEdit@8() : Boolean;
    BEGIN
      InvtSetup.GET;
      InvtSetup.TESTFIELD("Internal Movement Nos.");
      IF NoSeriesMgt.SelectSeries(InvtSetup."Internal Movement Nos.",xRec."No. Series","No. Series")
      THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE GetLocation@10(LocationCode@1000 : Code[10]);
    BEGIN
      IF LocationCode = '' THEN
        CLEAR(Location)
      ELSE
        IF Location.Code <> LocationCode THEN
          Location.GET(LocationCode);
    END;

    PROCEDURE OpenInternalMovementHeader@2(VAR InternalMovementHeader@1001 : Record 7346);
    VAR
      WhseEmployee@1003 : Record 7301;
      WmsManagement@1000 : Codeunit 7302;
      CurrentLocationCode@1006 : Code[10];
    BEGIN
      IF USERID <> '' THEN BEGIN
        WhseEmployee.SETRANGE("User ID",USERID);
        IF NOT WhseEmployee.FINDFIRST THEN
          ERROR(Text000,USERID);

        WhseEmployee.SETRANGE("Location Code",InternalMovementHeader."Location Code");
        IF WhseEmployee.FINDFIRST THEN
          CurrentLocationCode := InternalMovementHeader."Location Code"
        ELSE
          CurrentLocationCode := WmsManagement.GetDefaultLocation;

        InternalMovementHeader.FILTERGROUP := 2;
        InternalMovementHeader.SETRANGE("Location Code",CurrentLocationCode);
        InternalMovementHeader.FILTERGROUP := 0;
      END;
    END;

    PROCEDURE LookupInternalMovementHeader@1(VAR InternalMovementHeader@1001 : Record 7346) : Boolean;
    BEGIN
      COMMIT;
      IF USERID <> '' THEN BEGIN
        InternalMovementHeader.FILTERGROUP := 2;
        InternalMovementHeader.SETRANGE("Location Code");
      END;
      IF PAGE.RUNMODAL(0,InternalMovementHeader) = ACTION::LookupOK THEN;
      IF USERID <> '' THEN BEGIN
        InternalMovementHeader.FILTERGROUP := 2;
        InternalMovementHeader.SETRANGE("Location Code",InternalMovementHeader."Location Code");
        InternalMovementHeader.FILTERGROUP := 0;
      END;
    END;

    LOCAL PROCEDURE LookupLocation@4(VAR InternalMovementHeader@1001 : Record 7346) : Boolean;
    VAR
      Location@1000 : Record 14;
    BEGIN
      COMMIT;
      Location.FILTERGROUP := 2;
      Location.SETRANGE(Code);
      IF PAGE.RUNMODAL(PAGE::"Locations with Warehouse List",Location) = ACTION::LookupOK THEN
        InternalMovementHeader.VALIDATE("Location Code",Location.Code);
      Location.FILTERGROUP := 0;
    END;

    LOCAL PROCEDURE DeleteRelatedLines@9();
    VAR
      InternalMovementLine@1003 : Record 7347;
      WhseCommentLine@1001 : Record 5770;
    BEGIN
      InternalMovementLine.SETRANGE("No.","No.");
      InternalMovementLine.DELETEALL;

      WhseCommentLine.SETRANGE("Table Name",WhseCommentLine."Table Name"::"Internal Movement");
      WhseCommentLine.SETRANGE(Type,WhseCommentLine.Type::" ");
      WhseCommentLine.SETRANGE("No.","No.");
      WhseCommentLine.DELETEALL;

      ItemTrackingMgt.DeleteWhseItemTrkgLines(
        DATABASE::"Internal Movement Line",0,"No.",'',0,0,'',FALSE);
    END;

    PROCEDURE CheckLocationSettings@5(LocationCode@1000 : Code[10]);
    BEGIN
      GetLocation(LocationCode);
      Location.TESTFIELD("Directed Put-away and Pick",FALSE);
      Location.TESTFIELD("Bin Mandatory",TRUE);
    END;

    BEGIN
    END.
  }
}

