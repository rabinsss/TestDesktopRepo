OBJECT Table 381 VAT Registration No. Format
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=VAT Registration No. Format;
               ESM=Formato RFC/Curp;
               FRC=Format nø identif. TPS/TVH;
               ENC=GST/HST Registration No. Format];
  }
  FIELDS
  {
    { 1   ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ESM=C¢d. pa¡s/regi¢n;
                                                              FRC=Code pays/r‚gion;
                                                              ENC=Country/Region Code];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESM=N§ l¡nea;
                                                              FRC=Nø ligne;
                                                              ENC=Line No.] }
    { 3   ;   ;Format              ;Text20        ;CaptionML=[ENU=Format;
                                                              ESM=Formato;
                                                              FRC=Format;
                                                              ENC=Format] }
  }
  KEYS
  {
    {    ;Country/Region Code,Line No.            ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The entered VAT Registration number is not in agreement with the format specified for Country/Region Code %1.\;ESM=El n§ reg. IVA introducido no es acorde con el formato especificado para el C¢d. pa¡s/regi¢n %1.\;FRC=Le nø identif. TPS/TVH entr‚ n''est pas conforme au format sp‚cifi‚ pour le code pays/r‚gion %1.\;ENC=The entered GST/HST Registration Number is not in agreement with the format specified for Country/Region Code %1.\';
      Text001@1001 : TextConst 'ENU=The following formats are acceptable: %2;ESM=Los siguientes formatos son aceptables: %2;FRC=Le(s) format(s) suivant(s) est (sont) accept‚(s) : %2;ENC=The following formats are acceptable: %2';
      Text002@1002 : TextConst 'ENU=This VAT registration number has already been entered for the following customers:\ %1;ESM=Este n§ reg. IVA se ha introducido ya para los siguientes clientes:\ %1;FRC=Ce nø identif. TPS/TVH a d‚j… ‚t‚ entr‚ pour le client suivant : \%1;ENC=This GST/HST registration number has already been entered for the following customers:\ %1';
      Text003@1003 : TextConst 'ENU=This VAT registration number has already been entered for the following vendors:\ %1;ESM=Este n§ reg. IVA se ha introducido ya para los siguientes proveedores:\ %1;FRC=Ce nø identif. TPS/TVH a d‚j… ‚t‚ entr‚ pour le fournisseur suivant : \%1;ENC=This GST/HST registration number has already been entered for the following vendors:\ %1';
      Text004@1004 : TextConst 'ENU=This VAT registration number has already been entered for the following contacts:\ %1;ESM=Este n§ reg. IVA se ha introducido ya para los siguientes contactos:\ %1;FRC=Ce nø identif. TPS/TVH a d‚j… ‚t‚ entr‚ pour le contact suivant : \%1;ENC=This GST/HST registration number has already been entered for the following contacts:\ %1';
      Text005@1005 : TextConst 'ENU=ABCDEFGHIJKLMNOPQRSTUVWXYZ;ESM=ABCDEFGHIJKLMN¥OPQRSTUVWXYZ;FRC=ABCDEFGHIJKLMNOPQRSTUVWXYZ;ENC=ABCDEFGHIJKLMNOPQRSTUVWXYZ';

    PROCEDURE Test@1(VATRegNo@1000 : Text[20];CountryCode@1001 : Code[10];Number@1002 : Code[20];TableID@1003 : Option) : Boolean;
    VAR
      Check@1004 : Boolean;
      CompanyInfo@1005 : Record 79;
      t@1006 : Text[250];
    BEGIN
      IF VATRegNo = '' THEN
        EXIT;
      Check := TRUE;

      IF CountryCode = '' THEN BEGIN
        IF NOT CompanyInfo.GET THEN
          EXIT;
        SETRANGE("Country/Region Code",CompanyInfo."Country/Region Code");
      END ELSE
        SETRANGE("Country/Region Code",CountryCode);
      SETFILTER(Format,'<> %1','');
      IF FIND('-') THEN
        REPEAT
          IF t = '' THEN
            t := Format
          ELSE
            IF STRLEN(t) + STRLEN(Format) + 5 <= MAXSTRLEN(t) THEN
              t := t + ', ' + Format
            ELSE
              t := t + '...';
          Check := Compare(VATRegNo,Format);
        UNTIL Check OR (NEXT = 0);

      IF NOT Check THEN
        ERROR(Text000 + Text001,"Country/Region Code",t);

      CASE TableID OF
        DATABASE::Customer:
          CheckCust(VATRegNo,Number);
        DATABASE::Vendor:
          CheckVendor(VATRegNo,Number);
        DATABASE::Contact:
          CheckContact(VATRegNo,Number);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CheckCust@3(VATRegNo@1000 : Text[20];Number@1002 : Code[20]);
    VAR
      Cust@1003 : Record 18;
      Check@1004 : Boolean;
      Finish@1001 : Boolean;
      t@1005 : Text[250];
    BEGIN
      Check := TRUE;
      t := '';
      Cust.SETCURRENTKEY("VAT Registration No.");
      Cust.SETRANGE("VAT Registration No.",VATRegNo);
      Cust.SETFILTER("No.",'<>%1',Number);
      IF Cust.FIND('-') THEN BEGIN
        Check := FALSE;
        Finish := FALSE;
        REPEAT
          IF Cust."No." <> Number THEN
            IF t = '' THEN
              t := Cust."No."
            ELSE
              IF STRLEN(t) + STRLEN(Cust."No.") + 5 <= MAXSTRLEN(t) THEN
                t := t + ', ' + Cust."No."
              ELSE BEGIN
                t := t + '...';
                Finish := TRUE;
              END;
        UNTIL (Cust.NEXT = 0) OR Finish;
      END;
      IF Check = FALSE THEN
        MESSAGE(Text002,t);
    END;

    LOCAL PROCEDURE CheckVendor@4(VATRegNo@1000 : Text[20];Number@1002 : Code[20]);
    VAR
      Vend@1003 : Record 23;
      Check@1004 : Boolean;
      Finish@1001 : Boolean;
      t@1005 : Text[250];
    BEGIN
      Check := TRUE;
      t := '';
      Vend.SETCURRENTKEY("VAT Registration No.");
      Vend.SETRANGE("VAT Registration No.",VATRegNo);
      Vend.SETFILTER("No.",'<>%1',Number);
      IF Vend.FIND('-') THEN BEGIN
        Check := FALSE;
        Finish := FALSE;
        REPEAT
          IF Vend."No." <> Number THEN
            IF t = '' THEN
              t := Vend."No."
            ELSE
              IF STRLEN(t) + STRLEN(Vend."No.") + 5 <= MAXSTRLEN(t) THEN
                t := t + ', ' + Vend."No."
              ELSE BEGIN
                t := t + '...';
                Finish := TRUE;
              END;
        UNTIL (Vend.NEXT = 0) OR Finish;
      END;
      IF Check = FALSE THEN
        MESSAGE(Text003,t);
    END;

    LOCAL PROCEDURE CheckContact@5(VATRegNo@1000 : Text[20];Number@1002 : Code[20]);
    VAR
      Cont@1003 : Record 5050;
      Check@1004 : Boolean;
      Finish@1001 : Boolean;
      t@1005 : Text[250];
    BEGIN
      Check := TRUE;
      t := '';
      Cont.SETCURRENTKEY("VAT Registration No.");
      Cont.SETRANGE("VAT Registration No.",VATRegNo);
      Cont.SETFILTER("No.",'<>%1',Number);
      IF Cont.FIND('-') THEN BEGIN
        Check := FALSE;
        Finish := FALSE;
        REPEAT
          IF Cont."No." <> Number THEN
            IF t = '' THEN
              t := Cont."No."
            ELSE
              IF STRLEN(t) + STRLEN(Cont."No.") + 5 <= MAXSTRLEN(t) THEN
                t := t + ', ' + Cont."No."
              ELSE BEGIN
                t := t + '...';
                Finish := TRUE;
              END;
        UNTIL (Cont.NEXT = 0) OR Finish;
      END;
      IF Check = FALSE THEN
        MESSAGE(Text004,t);
    END;

    PROCEDURE Compare@2(VATRegNo@1000 : Text[20];Format@1001 : Text[20]) : Boolean;
    VAR
      i@1002 : Integer;
      Cf@1003 : Text[1];
      Ce@1004 : Text[1];
      Check@1005 : Boolean;
    BEGIN
      Check := TRUE;
      IF STRLEN(VATRegNo) = STRLEN(Format) THEN
        FOR i := 1 TO STRLEN(VATRegNo) DO BEGIN
          Cf := COPYSTR(Format,i,1);
          Ce := COPYSTR(VATRegNo,i,1);
          CASE Cf OF
            '#':
              IF NOT ((Ce >= '0') AND (Ce <= '9')) THEN
                Check := FALSE;
            '@':
              IF STRPOS(Text005,UPPERCASE(Ce)) = 0 THEN
                Check := FALSE;
            ELSE
              IF NOT ((Cf = Ce) OR (Cf = '?')) THEN
                Check := FALSE
          END;
        END
      ELSE
        Check := FALSE;
      EXIT(Check);
    END;

    BEGIN
    END.
  }
}

