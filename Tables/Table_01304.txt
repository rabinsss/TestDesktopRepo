OBJECT Table 1304 Sales Price and Line Disc Buff
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Sales Type" = "Sales Type"::"All Customers" THEN
                 "Sales Code" := ''
               ELSE
                 TESTFIELD("Sales Code");
               TESTFIELD(Code);

               InsertNewRecordVersion;
             END;

    OnModify=BEGIN
               DeleteOldRecordVersion;
               InsertNewRecordVersion;
             END;

    OnDelete=BEGIN
               DeleteOldRecordVersion;
             END;

    OnRename=BEGIN
               IF "Sales Type" <> "Sales Type"::"All Customers" THEN
                 TESTFIELD("Sales Code");

               TESTFIELD(Code);

               DeleteOldRecordVersion;
               InsertNewRecordVersion;
             END;

    CaptionML=[ENU=Sales Price and Line Disc Buff;
               ESM=Almacenaje precio venta y dto. l¡nea;
               FRC=Prix vente et tampon rem. ligne;
               ENC=Sales Price and Line Disc Buff];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Item Disc. Group)) "Item Discount Group";
                                                   OnValidate=VAR
                                                                Item@1000 : Record 27;
                                                                CustPriceGr@1001 : Record 6;
                                                              BEGIN
                                                                "Unit of Measure Code" := '';
                                                                "Variant Code" := '';

                                                                IF Type = Type::Item THEN
                                                                  IF Item.GET(Code) THEN
                                                                    "Unit of Measure Code" := Item."Sales Unit of Measure";

                                                                IF "Line Type" = "Line Type"::"Sales Price" THEN BEGIN
                                                                  IF "Sales Type" = "Sales Type"::"Customer Price/Disc. Group" THEN
                                                                    IF CustPriceGr.GET("Sales Code") AND
                                                                       (CustPriceGr."Allow Invoice Disc." = "Allow Invoice Disc.")
                                                                    THEN
                                                                      EXIT;

                                                                  UpdateValuesFromItem;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              Item@1000 : Record 27;
                                                              ItemDiscountGroup@1001 : Record 341;
                                                            BEGIN
                                                              CASE Type OF
                                                                Type::Item:
                                                                  IF PAGE.RUNMODAL(PAGE::"Mini Item List",Item) = ACTION::LookupOK THEN
                                                                    VALIDATE(Code,Item."No.");
                                                                Type::"Item Disc. Group":
                                                                  IF PAGE.RUNMODAL(PAGE::"Item Disc. Groups",ItemDiscountGroup) = ACTION::LookupOK THEN
                                                                    VALIDATE(Code,ItemDiscountGroup.Code);
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Sales Code          ;Code20        ;TableRelation=IF (Sales Type=CONST(Customer Price/Disc. Group),
                                                                     Line Type=CONST(Sales Line Discount)) "Customer Discount Group"
                                                                     ELSE IF (Sales Type=CONST(Customer Price/Disc. Group),
                                                                              Line Type=CONST(Sales Price)) "Customer Price Group"
                                                                              ELSE IF (Sales Type=CONST(Customer)) Customer;
                                                   OnValidate=VAR
                                                                CustPriceGr@1000 : Record 6;
                                                                Cust@1001 : Record 18;
                                                              BEGIN
                                                                IF "Sales Code" <> '' THEN
                                                                  CASE "Sales Type" OF
                                                                    "Sales Type"::"All Customers":
                                                                      ERROR(MustBeBlankErr,FIELDCAPTION("Sales Code"));
                                                                    "Sales Type"::"Customer Price/Disc. Group":
                                                                      IF "Line Type" = "Line Type"::"Sales Price" THEN BEGIN
                                                                        CustPriceGr.GET("Sales Code");
                                                                        "Price Includes VAT" := CustPriceGr."Price Includes VAT";
                                                                        "VAT Bus. Posting Gr. (Price)" := CustPriceGr."VAT Bus. Posting Gr. (Price)";
                                                                        "Allow Line Disc." := CustPriceGr."Allow Line Disc.";
                                                                        "Allow Invoice Disc." := CustPriceGr."Allow Invoice Disc.";
                                                                      END;
                                                                    "Sales Type"::Customer:
                                                                      BEGIN
                                                                        Cust.GET("Sales Code");
                                                                        "Currency Code" := Cust."Currency Code";
                                                                        IF "Line Type" = "Line Type"::"Sales Price" THEN BEGIN
                                                                          "Price Includes VAT" := Cust."Prices Including VAT";
                                                                          "VAT Bus. Posting Gr. (Price)" := Cust."VAT Bus. Posting Group";
                                                                          "Allow Line Disc." := Cust."Allow Line Disc.";
                                                                        END;
                                                                      END;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Sales Code;
                                                              ESM=C¢digo ventas;
                                                              FRC=Code de vente;
                                                              ENC=Sales Code] }
    { 3   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ESM=C¢d. divisa;
                                                              FRC=Code devise;
                                                              ENC=Currency Code] }
    { 4   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF ("Starting Date" > "Ending Date") AND ("Ending Date" <> 0D) THEN
                                                                  ERROR(EndDateErr,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"));
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              ESM=Fecha inicial;
                                                              FRC=Date d‚but;
                                                              ENC=Starting Date] }
    { 5   ;   ;Line Discount %     ;Decimal       ;CaptionML=[ENU=Line Discount %;
                                                              ESM=% Descuento l¡nea;
                                                              FRC=Ligne % escompte;
                                                              ENC=Line Discount %];
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   AutoFormatType=2 }
    { 6   ;   ;Unit Price          ;Decimal       ;CaptionML=[ENU=Unit Price;
                                                              ESM=Precio unitario;
                                                              FRC=Prix unitaire;
                                                              ENC=Unit Price];
                                                   MinValue=0;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 7   ;   ;Price Includes VAT  ;Boolean       ;CaptionML=[ENU=Price Includes Tax;
                                                              ESM=Precio IVA incluido;
                                                              FRC=Prix TTC;
                                                              ENC=Price Includes Tax] }
    { 10  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              ESM=Permitir dto. factura;
                                                              FRC=Escompte de facture permis;
                                                              ENC=Allow Invoice Disc.] }
    { 11  ;   ;VAT Bus. Posting Gr. (Price);Code10;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=Tax Bus. Posting Gr. (Price);
                                                              ESM=Gr.regis. IVA negocio (precio);
                                                              FRC=Gpe compta. march‚ TVA (prix);
                                                              ENC=Tax Bus. Posting Gr. (Price)] }
    { 13  ;   ;Sales Type          ;Option        ;OnValidate=BEGIN
                                                                CASE "Sales Type" OF
                                                                  "Sales Type"::Customer:
                                                                    VALIDATE("Sales Code","Loaded Customer No.");
                                                                  "Sales Type"::"All Customers":
                                                                    VALIDATE("Sales Code",'');
                                                                  "Sales Type"::"Customer Price/Disc. Group":
                                                                    IF "Loaded Customer No." = '' THEN
                                                                      VALIDATE("Sales Code",'')
                                                                    ELSE BEGIN
                                                                      IF "Line Type" = "Line Type"::"Sales Price" THEN BEGIN
                                                                        IF "Loaded Price Group" = '' THEN
                                                                          ERROR(CustNotInPriceGrErr);
                                                                        VALIDATE("Sales Code","Loaded Price Group");
                                                                      END;

                                                                      IF "Line Type" = "Line Type"::"Sales Line Discount" THEN BEGIN
                                                                        IF "Loaded Disc. Group" = '' THEN
                                                                          ERROR(CustNotInDiscGrErr);
                                                                        VALIDATE("Sales Code","Loaded Disc. Group");
                                                                      END;
                                                                    END;
                                                                END;

                                                                UpdateValuesFromItem;
                                                              END;

                                                   CaptionML=[ENU=Sales Type;
                                                              ESM=Tipo venta;
                                                              FRC=Type de vente;
                                                              ENC=Sales Type];
                                                   OptionCaptionML=[ENU=Customer,Customer Price/Disc. Group,All Customers;
                                                                    ESM=Cliente,Grupo precio/dto. cliente,Todos clientes;
                                                                    FRC=Client,Groupe prix/rem. client,Tous les clients;
                                                                    ENC=Customer,Customer Price/Disc. Group,All Customers];
                                                   OptionString=Customer,Customer Price/Disc. Group,All Customers }
    { 14  ;   ;Minimum Quantity    ;Decimal       ;CaptionML=[ENU=Minimum Quantity;
                                                              ESM=Cantidad m¡nima;
                                                              FRC=Quantit‚ minimum;
                                                              ENC=Minimum Quantity];
                                                   MinValue=0 }
    { 15  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Starting Date");
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              ESM=Fecha final;
                                                              FRC=Date fin;
                                                              ENC=Ending Date] }
    { 21  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                CASE Type OF
                                                                  Type::Item:
                                                                    VALIDATE(Code,"Loaded Item No.");
                                                                  Type::"Item Disc. Group":
                                                                    BEGIN
                                                                      VALIDATE(Code,'');
                                                                      IF "Loaded Item No." <> '' THEN BEGIN
                                                                        IF "Loaded Disc. Group" = '' THEN
                                                                          ERROR(ItemNotInDiscGrErr);

                                                                        TESTFIELD("Line Type","Line Type"::"Sales Line Discount");
                                                                        VALIDATE(Code,"Loaded Disc. Group");
                                                                      END;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ESM=Tipo;
                                                              FRC=Type;
                                                              ENC=Type];
                                                   OptionCaptionML=[ENU=Item,Item Disc. Group;
                                                                    ESM=Producto,Grupo dto. pdto.;
                                                                    FRC=Article,Groupe rem. article;
                                                                    ENC=Item,Item Disc. Group];
                                                   OptionString=Item,Item Disc. Group }
    { 1300;   ;Line Type           ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD("Line Type");
                                                                CASE "Line Type" OF
                                                                  "Line Type"::"Sales Price":
                                                                    BEGIN
                                                                      TESTFIELD(Type,Type::Item);
                                                                      "Line Discount %" := 0;
                                                                    END;
                                                                  "Line Type"::"Sales Line Discount":
                                                                    "Unit Price" := 0;
                                                                END;
                                                                VALIDATE("Sales Type","Sales Type");
                                                                VALIDATE(Type,Type);
                                                              END;

                                                   CaptionML=[ENU=Line Type;
                                                              ESM=Tipo l¡nea;
                                                              FRC=Type ligne;
                                                              ENC=Line Type];
                                                   OptionCaptionML=[ENU=" ,Sales Line Discount,Sales Price";
                                                                    ESM=" ,Descuento l¡nea venta,Precio venta";
                                                                    FRC=" ,Escompte ligne vente,Prix vente";
                                                                    ENC=" ,Sales Line Discount,Sales Price"];
                                                   OptionString=[ ,Sales Line Discount,Sales Price] }
    { 1301;   ;Loaded Item No.     ;Code20        ;CaptionML=[ENU=Loaded Item No.;
                                                              ESM=N§ producto cargado;
                                                              FRC=Nø article charg‚;
                                                              ENC=Loaded Item No.];
                                                   Editable=No }
    { 1302;   ;Loaded Disc. Group  ;Code20        ;CaptionML=[ENU=Loaded Disc. Group;
                                                              ESM=Grupo dto. cargado;
                                                              FRC=Groupe rem. charg‚;
                                                              ENC=Loaded Disc. Group];
                                                   Editable=No }
    { 1303;   ;Loaded Customer No. ;Code20        ;CaptionML=[ENU=Loaded Customer No.;
                                                              ESM=N§ cliente cargado;
                                                              FRC=Nø client charg‚;
                                                              ENC=Loaded Customer No.];
                                                   Editable=No }
    { 1304;   ;Loaded Price Group  ;Code20        ;CaptionML=[ENU=Loaded Price Group;
                                                              ESM=Grupo precio cargado;
                                                              FRC=Groupe prix charg‚;
                                                              ENC=Loaded Price Group];
                                                   Editable=No }
    { 5400;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(Code));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::Item);
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ESM=C¢d. unidad medida;
                                                              FRC=Code unit‚ de mesure;
                                                              ENC=Unit of Measure Code] }
    { 5700;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(Code));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::Item);
                                                              END;

                                                   CaptionML=[ENU=Variant Code;
                                                              ESM=C¢d. variante;
                                                              FRC=Code variante;
                                                              ENC=Variant Code] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Line Disc.;
                                                              ESM=Permite dto. l¡nea;
                                                              FRC=Autoriser remise ligne;
                                                              ENC=Allow Line Disc.] }
  }
  KEYS
  {
    {    ;Line Type,Type,Code,Sales Type,Sales Code,Starting Date,Currency Code,Variant Code,Unit of Measure Code,Minimum Quantity,Loaded Item No.,Loaded Disc. Group,Loaded Customer No.,Loaded Price Group;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EndDateErr@1000 : TextConst 'ENU=%1 cannot be after %2.;ESM=%1 no puede ser posterior %2.;FRC=%1 ne peut pas ˆtre post‚rieur(e) … %2;ENC=%1 cannot be after %2.';
      MustBeBlankErr@1003 : TextConst 'ENU=%1 must be blank.;ESM=%1 debe ser blanco.;FRC=%1 doit ˆtre blanc.;ENC=%1 must be blank.';
      CustNotInPriceGrErr@1004 : TextConst 'ENU=This customer is not assigned to any price group, therefore a price group could not be used in context of this customer.;ESM=Este cliente no est  asignado a ning£n grupo de precio, por lo que no se puede usar un grupo de precio en el contexto de este cliente.;FRC=Ce client n''est affect‚ … aucun groupe de prix. Par cons‚quent, il n''est pas possible d''utiliser un groupe de prix avec ce client.;ENC=This customer is not assigned to any price group, therefore a price group could not be used in context of this customer.';
      CustNotInDiscGrErr@1001 : TextConst 'ENU=This customer is not assigned to any discount group, therefore a discount group could not be used in context of this customer.;ESM=Este cliente no est  asignado a ning£n grupo de descuento, por lo que no se puede usar un grupo de descuento en el contexto de este cliente.;FRC=Ce client n''est affect‚ … aucun groupe de remises. Par cons‚quent, il n''est pas possible d''utiliser un groupe de remises avec ce client.;ENC=This customer is not assigned to any discount group, therefore a discount group could not be used in context of this customer.';
      ItemNotInDiscGrErr@1002 : TextConst 'ENU=This item is not assigned to any discount group, therefore a discount group could not be used in context of this item.;ESM=Este producto no est  asignado a ning£n grupo de descuento, por lo que no se puede usar un grupo de descuento en el contexto de este producto.;FRC=Cet article n''est affect‚ … aucun groupe de remises. Par cons‚quent, il n''est pas possible d''utiliser un groupe de remises avec cet article.;ENC=This item is not assigned to any discount group, therefore a discount group could not be used in context of this item.';
      IncludeVATQst@1006 : TextConst 'ENU=One or more of the sales prices do not include tax.\Do you want to update all sales prices to include tax?;ESM=Uno o m s de los precios de venta no incluyen IVA.\¨Desea actualizar todos los precios de venta para incluir el IVA?;FRC=Un ou plusieurs prix de vente n''incluent pas la TVA.\Voulez-vous mettre … jour tous les prix de vente pour qu''ils incluent la TVAÿ?;ENC=One or more of the sales prices do not include Tax.\Do you want to update all sales prices to include Tax?';
      ExcludeVATQst@1007 : TextConst 'ENU=One or more of the sales prices include tax.\Do you want to update all sales prices to exclude tax?;ESM=Uno o m s de los precios de venta incluyen IVA.\¨Desea actualizar todos los precios de venta para excluir el IVA?;FRC=Un ou plusieurs prix de vente incluent la TVA.\Voulez-vous mettre … jour tous les prix de vente pour qu''ils excluent la TVAÿ?;ENC=One or more of the sales prices include Tax.\Do you want to update all sales prices to exclude Tax?';

    LOCAL PROCEDURE UpdateValuesFromItem@1();
    VAR
      Item@1000 : Record 27;
    BEGIN
      IF "Line Type" <> "Line Type"::"Sales Price" THEN
        EXIT;

      IF Item.GET(Code) THEN BEGIN
        "Allow Invoice Disc." := Item."Allow Invoice Disc.";
        IF "Sales Type" = "Sales Type"::"All Customers" THEN BEGIN
          "Price Includes VAT" := Item."Price Includes VAT";
          "VAT Bus. Posting Gr. (Price)" := Item."VAT Bus. Posting Gr. (Price)";
        END;
      END;
    END;

    PROCEDURE LoadDataForItem@7(Item@1000 : Record 27);
    VAR
      SalesPrice@1002 : Record 7002;
      SalesLineDiscountItem@1001 : Record 7004;
      SalesLineDiscountItemGroup@1003 : Record 7004;
    BEGIN
      RESET;
      DELETEALL;

      "Loaded Item No." := Item."No.";
      "Loaded Disc. Group" := Item."Item Disc. Group";

      SetFiltersOnSalesPrice(SalesPrice);
      LoadSalesPrice(SalesPrice);

      SetFiltersOnSalesLineDiscountItem(SalesLineDiscountItem);
      LoadSalesLineDiscount(SalesLineDiscountItem);

      SetFiltersOnSalesLineDiscountItemGroup(SalesLineDiscountItemGroup);
      LoadSalesLineDiscount(SalesLineDiscountItemGroup);

      IF FINDFIRST THEN;
    END;

    PROCEDURE LoadDataForCustomer@2(Customer@1000 : Record 18);
    BEGIN
      RESET;
      DELETEALL;

      "Loaded Customer No." := Customer."No.";
      "Loaded Disc. Group" := Customer."Customer Disc. Group";
      "Loaded Price Group" := Customer."Customer Price Group";

      LoadSalesPriceForCustomer;
      LoadSalesPriceForAllCustomers;
      LoadSalesPriceForCustPriceGr;

      LoadSalesLineDiscForCustomer;
      LoadSalesLineDiscForAllCustomers;
      LoadSalesLineDiscForCustDiscGr;
    END;

    LOCAL PROCEDURE LoadSalesLineDiscForCustomer@20();
    VAR
      SalesLineDiscount@1000 : Record 7004;
    BEGIN
      SetFiltersForSalesLineDiscForCustomer(SalesLineDiscount);
      LoadSalesLineDiscount(SalesLineDiscount);
    END;

    LOCAL PROCEDURE LoadSalesLineDiscForAllCustomers@17();
    VAR
      SalesLineDiscount@1000 : Record 7004;
    BEGIN
      SetFiltersForSalesLineDiscForAllCustomers(SalesLineDiscount);
      LoadSalesLineDiscount(SalesLineDiscount);
    END;

    LOCAL PROCEDURE LoadSalesLineDiscForCustDiscGr@15();
    VAR
      SalesLineDiscount@1000 : Record 7004;
    BEGIN
      SetFiltersForSalesLineDiscForCustDiscGr(SalesLineDiscount);
      LoadSalesLineDiscount(SalesLineDiscount);
    END;

    LOCAL PROCEDURE LoadSalesPriceForCustomer@21();
    VAR
      SalesPrice@1000 : Record 7002;
    BEGIN
      SetFiltersForSalesPriceForCustomer(SalesPrice);
      LoadSalesPrice(SalesPrice);
    END;

    LOCAL PROCEDURE LoadSalesPriceForAllCustomers@23();
    VAR
      SalesPrice@1000 : Record 7002;
    BEGIN
      SetFiltersForSalesPriceForAllCustomers(SalesPrice);
      LoadSalesPrice(SalesPrice);
    END;

    LOCAL PROCEDURE LoadSalesPriceForCustPriceGr@24();
    VAR
      SalesPrice@1000 : Record 7002;
    BEGIN
      SetFiltersForSalesPriceForCustPriceGr(SalesPrice);
      LoadSalesPrice(SalesPrice);
    END;

    LOCAL PROCEDURE SetFiltersForSalesLineDiscForCustomer@34(VAR SalesLineDiscount@1000 : Record 7004);
    BEGIN
      SalesLineDiscount.SETRANGE("Sales Type","Sales Type"::Customer);
      SalesLineDiscount.SETRANGE("Sales Code","Loaded Customer No.");
    END;

    LOCAL PROCEDURE SetFiltersForSalesLineDiscForAllCustomers@33(VAR SalesLineDiscount@1000 : Record 7004);
    BEGIN
      SalesLineDiscount.SETRANGE("Sales Type","Sales Type"::"All Customers");
    END;

    LOCAL PROCEDURE SetFiltersForSalesLineDiscForCustDiscGr@32(VAR SalesLineDiscount@1001 : Record 7004);
    BEGIN
      SalesLineDiscount.SETRANGE("Sales Code","Loaded Disc. Group");
      SalesLineDiscount.SETRANGE("Sales Type","Sales Type"::"Customer Price/Disc. Group");
    END;

    LOCAL PROCEDURE SetFiltersForSalesPriceForCustomer@31(VAR SalesPrice@1000 : Record 7002);
    BEGIN
      SalesPrice.SETRANGE("Sales Type","Sales Type"::Customer);
      SalesPrice.SETRANGE("Sales Code","Loaded Customer No.");
    END;

    LOCAL PROCEDURE SetFiltersForSalesPriceForAllCustomers@30(VAR SalesPrice@1001 : Record 7002);
    BEGIN
      SalesPrice.SETRANGE("Sales Type","Sales Type"::"All Customers");
    END;

    LOCAL PROCEDURE SetFiltersForSalesPriceForCustPriceGr@29(VAR SalesPrice@1001 : Record 7002);
    BEGIN
      SalesPrice.SETRANGE("Sales Code","Loaded Price Group");
      SalesPrice.SETRANGE("Sales Type","Sales Type"::"Customer Price/Disc. Group");
    END;

    LOCAL PROCEDURE LoadSalesLineDiscount@4(VAR SalesLineDiscount@1000 : Record 7004);
    BEGIN
      IF SalesLineDiscount.FINDSET THEN
        REPEAT
          INIT;
          "Line Type" := "Line Type"::"Sales Line Discount";

          Code := SalesLineDiscount.Code;
          Type := SalesLineDiscount.Type;
          "Sales Code" := SalesLineDiscount."Sales Code";
          "Sales Type" := SalesLineDiscount."Sales Type";

          "Starting Date" := SalesLineDiscount."Starting Date";
          "Minimum Quantity" := SalesLineDiscount."Minimum Quantity";
          "Unit of Measure Code" := SalesLineDiscount."Unit of Measure Code";

          "Line Discount %" := SalesLineDiscount."Line Discount %";
          "Currency Code" := SalesLineDiscount."Currency Code";
          "Ending Date" := SalesLineDiscount."Ending Date";
          "Variant Code" := SalesLineDiscount."Variant Code";

          INSERT;
        UNTIL SalesLineDiscount.NEXT = 0;
    END;

    LOCAL PROCEDURE LoadSalesPrice@5(VAR SalesPrice@1000 : Record 7002);
    BEGIN
      IF SalesPrice.FINDSET THEN
        REPEAT
          INIT;
          "Line Type" := "Line Type"::"Sales Price";

          Code := SalesPrice."Item No.";
          Type := Type::Item;
          "Sales Code" := SalesPrice."Sales Code";
          "Sales Type" := SalesPrice."Sales Type";

          "Starting Date" := SalesPrice."Starting Date";
          "Minimum Quantity" := SalesPrice."Minimum Quantity";
          "Unit of Measure Code" := SalesPrice."Unit of Measure Code";
          "Unit Price" := SalesPrice."Unit Price";
          "Currency Code" := SalesPrice."Currency Code";
          "Ending Date" := SalesPrice."Ending Date";
          "Variant Code" := SalesPrice."Variant Code";

          "Price Includes VAT" := SalesPrice."Price Includes VAT";
          "VAT Bus. Posting Gr. (Price)" := SalesPrice."VAT Bus. Posting Gr. (Price)";

          INSERT;
        UNTIL SalesPrice.NEXT = 0;
    END;

    LOCAL PROCEDURE InsertNewPriceLine@14();
    VAR
      SalesPrice@1001 : Record 7002;
    BEGIN
      SalesPrice.INIT;

      SalesPrice."Item No." := Code;
      SalesPrice."Sales Code" := "Sales Code";
      SalesPrice."Sales Type" := "Sales Type";
      SalesPrice."Starting Date" := "Starting Date";
      SalesPrice."Minimum Quantity" := "Minimum Quantity";
      SalesPrice."Unit of Measure Code" := "Unit of Measure Code";
      SalesPrice."Unit Price" := "Unit Price";
      SalesPrice."Currency Code" := "Currency Code";
      SalesPrice."Ending Date" := "Ending Date";
      SalesPrice."Variant Code" := "Variant Code";

      SalesPrice."Allow Invoice Disc." := "Allow Invoice Disc.";
      SalesPrice."Allow Line Disc." := "Allow Line Disc.";
      SalesPrice."VAT Bus. Posting Gr. (Price)" := "VAT Bus. Posting Gr. (Price)";
      SalesPrice."Price Includes VAT" := "Price Includes VAT";

      SalesPrice.INSERT(TRUE);
    END;

    LOCAL PROCEDURE InsertNewDiscountLine@13();
    VAR
      SalesLineDiscount@1000 : Record 7004;
    BEGIN
      SalesLineDiscount.INIT;

      SalesLineDiscount.Code := Code;
      SalesLineDiscount.Type := Type;
      SalesLineDiscount."Sales Code" := "Sales Code";
      SalesLineDiscount."Sales Type" := "Sales Type";
      SalesLineDiscount."Starting Date" := "Starting Date";
      SalesLineDiscount."Minimum Quantity" := "Minimum Quantity";
      SalesLineDiscount."Unit of Measure Code" := "Unit of Measure Code";
      SalesLineDiscount."Line Discount %" := "Line Discount %";
      SalesLineDiscount."Currency Code" := "Currency Code";
      SalesLineDiscount."Ending Date" := "Ending Date";
      SalesLineDiscount."Variant Code" := "Variant Code";
      SalesLineDiscount.INSERT(TRUE);
    END;

    LOCAL PROCEDURE SetFiltersOnSalesPrice@8(VAR SalesPrice@1000 : Record 7002);
    BEGIN
      SalesPrice.SETRANGE("Item No.","Loaded Item No.");
      SalesPrice.SETFILTER("Sales Type",'<> %1',SalesPrice."Sales Type"::Campaign);
    END;

    LOCAL PROCEDURE SetFiltersOnSalesLineDiscountItem@9(VAR SalesLineDiscount@1000 : Record 7004);
    BEGIN
      SalesLineDiscount.SETRANGE(Type,SalesLineDiscount.Type::Item);
      SalesLineDiscount.SETRANGE(Code,"Loaded Item No.");
      SalesLineDiscount.SETFILTER("Sales Type",'<> %1',SalesLineDiscount."Sales Type"::Campaign);
    END;

    LOCAL PROCEDURE SetFiltersOnSalesLineDiscountItemGroup@11(VAR SalesLineDiscount@1000 : Record 7004);
    BEGIN
      SalesLineDiscount.SETRANGE(Type,SalesLineDiscount.Type::"Item Disc. Group");
      SalesLineDiscount.SETRANGE(Code,"Loaded Disc. Group");
      SalesLineDiscount.SETFILTER("Sales Type",'<> %1',SalesLineDiscount."Sales Type"::Campaign);
    END;

    PROCEDURE FilterToActualRecords@10();
    BEGIN
      SETFILTER("Ending Date",'%1|%2..',0D,TODAY)
    END;

    LOCAL PROCEDURE DeleteOldRecordVersion@12();
    BEGIN
      TESTFIELD("Line Type");
      IF xRec."Line Type" = xRec."Line Type"::"Sales Line Discount" THEN
        DeleteOldRecordVersionFromDiscounts
      ELSE
        DeleteOldRecordVersionFromPrices;
    END;

    LOCAL PROCEDURE DeleteOldRecordVersionFromDiscounts@18();
    VAR
      SalesLineDiscount@1000 : Record 7004;
    BEGIN
      SalesLineDiscount.GET(
        xRec.Type,
        xRec.Code,
        xRec."Sales Type",
        xRec."Sales Code",
        xRec."Starting Date",
        xRec."Currency Code",
        xRec."Variant Code",
        xRec."Unit of Measure Code",
        xRec."Minimum Quantity");

      SalesLineDiscount.DELETE(TRUE);
    END;

    LOCAL PROCEDURE DeleteOldRecordVersionFromPrices@19();
    VAR
      SalesPrice@1000 : Record 7002;
    BEGIN
      SalesPrice.GET(
        xRec.Code,
        xRec."Sales Type",
        xRec."Sales Code",
        xRec."Starting Date",
        xRec."Currency Code",
        xRec."Variant Code",
        xRec."Unit of Measure Code",
        xRec."Minimum Quantity");

      SalesPrice.DELETE(TRUE);
    END;

    LOCAL PROCEDURE InsertNewRecordVersion@16();
    BEGIN
      TESTFIELD("Line Type");
      IF "Line Type" = "Line Type"::"Sales Line Discount" THEN
        InsertNewDiscountLine
      ELSE
        InsertNewPriceLine
    END;

    PROCEDURE CustHasLines@25(Cust@1000 : Record 18) : Boolean;
    VAR
      SalesLineDiscount@1001 : Record 7004;
      SalesPrice@1002 : Record 7002;
    BEGIN
      RESET;

      "Loaded Customer No." := Cust."No.";
      "Loaded Disc. Group" := Cust."Customer Disc. Group";
      "Loaded Price Group" := Cust."Customer Price Group";

      SetFiltersForSalesLineDiscForAllCustomers(SalesLineDiscount);
      IF SalesLineDiscount.COUNT > 0 THEN
        EXIT(TRUE);
      CLEAR(SalesLineDiscount);

      SetFiltersForSalesPriceForAllCustomers(SalesPrice);
      IF SalesPrice.COUNT > 0 THEN
        EXIT(TRUE);
      CLEAR(SalesPrice);

      SetFiltersForSalesLineDiscForCustDiscGr(SalesLineDiscount);
      IF SalesLineDiscount.COUNT > 0 THEN
        EXIT(TRUE);
      CLEAR(SalesLineDiscount);

      SetFiltersForSalesPriceForCustPriceGr(SalesPrice);
      IF SalesPrice.COUNT > 0 THEN
        EXIT(TRUE);
      CLEAR(SalesPrice);

      SetFiltersForSalesLineDiscForCustomer(SalesLineDiscount);
      IF SalesLineDiscount.COUNT > 0 THEN
        EXIT(TRUE);
      CLEAR(SalesLineDiscount);

      SetFiltersForSalesPriceForCustomer(SalesPrice);
      IF SalesPrice.COUNT > 0 THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE UpdatePriceIncludesVatAndPrices@6(Item@1002 : Record 27;IncludesVat@1000 : Boolean);
    VAR
      VATPostingSetup@1001 : Record 325;
      MsgQst@1003 : Text;
    BEGIN
      SETRANGE("Price Includes VAT",NOT IncludesVat);
      SETRANGE("Line Type","Line Type"::"Sales Price");
      SETRANGE(Type,Type::Item);
      SETFILTER("Unit Price",'>0');

      IF NOT FINDSET THEN
        EXIT;

      IF IncludesVat THEN
        MsgQst := IncludeVATQst
      ELSE
        MsgQst := ExcludeVATQst;

      IF NOT CONFIRM(MsgQst,FALSE) THEN
        EXIT;

      REPEAT
        VATPostingSetup.GET("VAT Bus. Posting Gr. (Price)",Item."VAT Prod. Posting Group");

        "Price Includes VAT" := IncludesVat;

        IF IncludesVat THEN
          "Unit Price" := "Unit Price" * (100 + VATPostingSetup."VAT %") / 100
        ELSE
          "Unit Price" := "Unit Price" * 100 / (100 + VATPostingSetup."VAT %");

        MODIFY(TRUE);
      UNTIL NEXT = 0;
    END;

    BEGIN
    END.
  }
}

