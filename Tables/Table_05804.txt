OBJECT Table 5804 Avg. Cost Adjmt. Entry Point
{
  OBJECT-PROPERTIES
  {
    Date=09/15/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               UpdateItem;
             END;

    OnModify=BEGIN
               UpdateItem;
             END;

    OnDelete=BEGIN
               UpdateItem;
             END;

    CaptionML=[ENU=Avg. Cost Adjmt. Entry Point;
               ESM=Punto de entrada aj. costo promedio;
               FRC=Ajustement co–t moyen;
               ENC=Avg. Cost Adjmt. Entry Point];
  }
  FIELDS
  {
    { 1   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              ESM=N§ producto;
                                                              FRC=Nø d'article;
                                                              ENC=Item No.] }
    { 2   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              ESM=C¢d. variante;
                                                              FRC=Code variante;
                                                              ENC=Variant Code] }
    { 3   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              ESM=C¢d. almac‚n;
                                                              FRC=Code d'emplacement;
                                                              ENC=Location Code] }
    { 4   ;   ;Valuation Date      ;Date          ;CaptionML=[ENU=Valuation Date;
                                                              ESM=Fecha valoraci¢n;
                                                              FRC=Date d'‚valuation;
                                                              ENC=Valuation Date] }
    { 5   ;   ;Cost Is Adjusted    ;Boolean       ;CaptionML=[ENU=Cost Is Adjusted;
                                                              ESM=Costo ajustado;
                                                              FRC=Le co–t est ajust‚;
                                                              ENC=Cost Is Adjusted] }
  }
  KEYS
  {
    {    ;Item No.,Variant Code,Location Code,Valuation Date;
                                                   Clustered=Yes }
    {    ;Item No.,Cost Is Adjusted,Valuation Date }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Item@1000 : Record 27;
      FiscalYearAccPeriod@1003 : Record 50;

    LOCAL PROCEDURE UpdateItem@3();
    BEGIN
      GetItem("Item No.");
      IF Item."Cost is Adjusted" THEN BEGIN
        Item.LOCKTABLE;
        Item."Cost is Adjusted" := FALSE;
        Item.MODIFY;
      END;
    END;

    PROCEDURE ValuationExists@8(ValueEntry@1000 : Record 5802) : Boolean;
    VAR
      CalendarPeriod@1001 : Record 2000000007;
    BEGIN
      RESET;
      "Item No." := ValueEntry."Item No.";
      "Valuation Date" := ValueEntry."Valuation Date";
      GetItem(ValueEntry."Item No.");
      IF Item."Costing Method" = Item."Costing Method"::Average THEN BEGIN
        CalendarPeriod."Period Start" := "Valuation Date";
        GetValuationPeriod(CalendarPeriod);
        "Valuation Date" := CalendarPeriod."Period End";
      END;
      IF (Item."Costing Method" = Item."Costing Method"::Average) AND
         IsAvgCostCalcTypeItem("Valuation Date")
      THEN BEGIN
        "Location Code" := '';
        "Variant Code" := '';
      END ELSE BEGIN
        "Variant Code" := ValueEntry."Variant Code";
        "Location Code" := ValueEntry."Location Code";
      END;

      EXIT(FIND);
    END;

    PROCEDURE PrevValuationAdjusted@9(ValueEntry@1001 : Record 5802) ValuationAdjusted : Boolean;
    VAR
      CopyOfAvgCostAdjmtPoint@1000 : Record 5804;
    BEGIN
      ValuationAdjusted := TRUE;
      IF ValueEntry."Valuation Date" = 0D THEN
        EXIT(ValuationAdjusted);

      CopyOfAvgCostAdjmtPoint.COPY(Rec);
      RESET;
      SETCURRENTKEY("Item No.","Cost Is Adjusted");
      SETRANGE("Item No.",ValueEntry."Item No.");
      SETRANGE("Cost Is Adjusted",FALSE);
      SETRANGE("Valuation Date",0D,CALCDATE('<-1D>',ValueEntry."Valuation Date"));
      ValuationAdjusted := ISEMPTY;
      COPY(CopyOfAvgCostAdjmtPoint);
      EXIT(ValuationAdjusted);
    END;

    PROCEDURE UpdateValuationDate@7(ValueEntry@1000 : Record 5802);
    BEGIN
      IF ValuationExists(ValueEntry) THEN BEGIN
        IF NOT "Cost Is Adjusted" THEN
          EXIT;
        "Cost Is Adjusted" := FALSE;
        MODIFY;
      END ELSE BEGIN
        INIT;
        INSERT;
      END;

      UpdateNextValuations;
    END;

    LOCAL PROCEDURE UpdateNextValuations@1();
    VAR
      CopyOfAvgCostAdjmtPoint@1000 : Record 5804;
    BEGIN
      CopyOfAvgCostAdjmtPoint.COPY(Rec);
      SETCURRENTKEY("Item No.","Cost Is Adjusted");
      SETRANGE("Item No.","Item No.");
      SETRANGE("Cost Is Adjusted",TRUE);
      IF TRUE IN [Item."Costing Method" <> Item."Costing Method"::Average,
                  NOT (IsAvgCostCalcTypeItem("Valuation Date") OR
                       AvgCostCalcTypeIsChanged("Valuation Date"))]
      THEN BEGIN
        SETRANGE("Location Code","Location Code");
        SETRANGE("Variant Code","Variant Code");
      END;
      SETFILTER("Valuation Date",'>%1',"Valuation Date");
      MODIFYALL("Cost Is Adjusted",FALSE);
      COPY(CopyOfAvgCostAdjmtPoint);
    END;

    PROCEDURE AvgCostCalcTypeIsChanged@6(FromDate@1001 : Date) : Boolean;
    VAR
      NextFiscalYearAccPeriod@1000 : Record 50;
    BEGIN
      GetAvgCostCalcTypeIsChgPeriod(NextFiscalYearAccPeriod,FromDate);
      EXIT(NextFiscalYearAccPeriod."Starting Date" > FromDate);
    END;

    PROCEDURE GetAvgCostCalcTypeIsChgPeriod@12(VAR NextFiscalYearAccPeriod@1001 : Record 50;FromDate@1000 : Date);
    BEGIN
      NextFiscalYearAccPeriod.SETRANGE("New Fiscal Year",TRUE);
      NextFiscalYearAccPeriod.SETFILTER("Starting Date",'>%1',FromDate);
      NextFiscalYearAccPeriod.SETFILTER("Average Cost Calc. Type",'<>%1',FiscalYearAccPeriod."Average Cost Calc. Type");
    END;

    PROCEDURE GetValuationPeriod@2(VAR CalendarPeriod@1000 : Record 2000000007);
    VAR
      PeriodMgt@1001 : Codeunit 359;
    BEGIN
      GetFiscalYearAccPeriod("Valuation Date");

      IF FiscalYearAccPeriod."Average Cost Period" = FiscalYearAccPeriod."Average Cost Period"::" " THEN
        FiscalYearAccPeriod.FIELDERROR("Average Cost Period");

      IF CalendarPeriod."Period Start" = 0D THEN BEGIN
        CalendarPeriod."Period End" := 0D;
        EXIT;
      END;

      IF NOT PeriodMgt.FindDate('',CalendarPeriod,FiscalYearAccPeriod."Average Cost Period" - 1) THEN
        FiscalYearAccPeriod.GET(CalendarPeriod."Period Start");

      IF FiscalYearAccPeriod."Average Cost Period" IN
         [FiscalYearAccPeriod."Average Cost Period"::Day,
          FiscalYearAccPeriod."Average Cost Period"::"Accounting Period"]
      THEN
        EXIT;

      GetFiscalYearAccPeriod(CalendarPeriod."Period End");
      IF FiscalYearAccPeriod."Starting Date" IN [CalendarPeriod."Period Start"..CalendarPeriod."Period End"] THEN
        IF "Valuation Date" < FiscalYearAccPeriod."Starting Date" THEN
          CalendarPeriod."Period End" := CALCDATE('<-1D>',FiscalYearAccPeriod."Starting Date")
        ELSE
          CalendarPeriod."Period Start" := FiscalYearAccPeriod."Starting Date";
    END;

    PROCEDURE IsAvgCostCalcTypeItem@4(ValuationDate@1000 : Date) : Boolean;
    BEGIN
      GetFiscalYearAccPeriod(ValuationDate);
      EXIT(FiscalYearAccPeriod."Average Cost Calc. Type" = FiscalYearAccPeriod."Average Cost Calc. Type"::Item);
    END;

    LOCAL PROCEDURE GetFiscalYearAccPeriod@13(ValuationDate@1000 : Date);
    BEGIN
      FiscalYearAccPeriod.SETRANGE("New Fiscal Year",TRUE);
      FiscalYearAccPeriod.SETRANGE("Starting Date",0D,ValuationDate);
      IF NOT FiscalYearAccPeriod.FIND('+') THEN BEGIN
        FiscalYearAccPeriod.SETRANGE("Starting Date");
        FiscalYearAccPeriod.FIND('-');
      END;
    END;

    PROCEDURE SetAvgCostAjmtFilter@10(VAR AvgCostAdjmtPoint@1000 : Record 5804);
    VAR
      NextFiscalYearAccPeriod@1001 : Record 50;
    BEGIN
      AvgCostAdjmtPoint.RESET;
      AvgCostAdjmtPoint.SETRANGE("Item No.","Item No.");
      AvgCostAdjmtPoint.SETRANGE("Variant Code","Variant Code");
      AvgCostAdjmtPoint.SETRANGE("Location Code","Location Code");
      IF AvgCostCalcTypeIsChanged("Valuation Date") THEN BEGIN
        GetAvgCostCalcTypeIsChgPeriod(NextFiscalYearAccPeriod,"Valuation Date");
        AvgCostAdjmtPoint.SETRANGE("Valuation Date","Valuation Date",CALCDATE('<1D>',NextFiscalYearAccPeriod."Starting Date"));
      END ELSE
        AvgCostAdjmtPoint.SETRANGE("Valuation Date","Valuation Date",12319999D);
    END;

    LOCAL PROCEDURE GetItem@5(ItemNo@1000 : Code[20]);
    BEGIN
      IF ItemNo <> Item."No." THEN
        Item.GET(ItemNo);
    END;

    BEGIN
    END.
  }
}

