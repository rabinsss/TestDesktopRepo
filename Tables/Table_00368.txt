OBJECT Table 368 Dimension Selection Buffer
{
  OBJECT-PROPERTIES
  {
    Date=01/29/16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.44974;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Dimension Selection Buffer;
               ESM=Mem. inter. selecc. dimensi¢n;
               FRC=Tampon s‚lection analytique;
               ENC=Dimension Selection Buffer];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Text30        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code] }
    { 2   ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 3   ;   ;Selected            ;Boolean       ;OnValidate=BEGIN
                                                                "New Dimension Value Code" := '';
                                                                "Dimension Value Filter" := '';
                                                                Level := Level::" ";
                                                              END;

                                                   CaptionML=[ENU=Selected;
                                                              ESM=Selecc.;
                                                              FRC=S‚lectionn‚;
                                                              ENC=Selected] }
    { 4   ;   ;New Dimension Value Code;Code20    ;TableRelation=IF (Code=CONST(G/L Account)) "G/L Account".No.
                                                                 ELSE IF (Code=CONST(Business Unit)) "Business Unit".Code
                                                                 ELSE "Dimension Value".Code WHERE (Dimension Code=FIELD(Code));
                                                   OnValidate=BEGIN
                                                                Selected := TRUE;
                                                              END;

                                                   CaptionML=[ENU=New Dimension Value Code;
                                                              ESM=Nuevo c¢d. valor dim.;
                                                              FRC=Nouveau code valeur dimension;
                                                              ENC=New Dimension Value Code] }
    { 5   ;   ;Dimension Value Filter;Code250     ;TableRelation=IF (Filter Lookup Table No.=CONST(15)) "G/L Account".No.
                                                                 ELSE IF (Filter Lookup Table No.=CONST(220)) "Business Unit".Code
                                                                 ELSE IF (Filter Lookup Table No.=CONST(841)) "Cash Flow Account".No.
                                                                 ELSE IF (Filter Lookup Table No.=CONST(840)) "Cash Flow Forecast".No.
                                                                 ELSE "Dimension Value".Code WHERE (Dimension Code=FIELD(Code));
                                                   OnValidate=BEGIN
                                                                IF (Level = Level::" ") AND ("Dimension Value Filter" = '') THEN
                                                                  Selected := FALSE
                                                                ELSE
                                                                  Selected := TRUE;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Dimension Value Filter;
                                                              ESM=Filtro valor dimensi¢n;
                                                              FRC=Filtre valeur de dimension;
                                                              ENC=Dimension Value Filter] }
    { 6   ;   ;Level               ;Option        ;OnValidate=BEGIN
                                                                IF (Level = Level::" ") AND ("Dimension Value Filter" = '') THEN
                                                                  Selected := FALSE
                                                                ELSE
                                                                  Selected := TRUE;
                                                              END;

                                                   CaptionML=[ENU=Level;
                                                              ESM=Nivel;
                                                              FRC=Niveau;
                                                              ENC=Level];
                                                   OptionCaptionML=[ENU=" ,Level 1,Level 2,Level 3,Level 4";
                                                                    ESM=" ,Nivel 1,Nivel 2,Nivel 3,Nivel 4";
                                                                    FRC=" ,Niveau 1,Niveau 2,Niveau 3,Niveau 4";
                                                                    ENC=" ,Level 1,Level 2,Level 3,Level 4"];
                                                   OptionString=[ ,Level 1,Level 2,Level 3,Level 4] }
    { 7   ;   ;Filter Lookup Table No.;Integer    ;InitValue=349;
                                                   CaptionML=[ENU=Filter Lookup Table No.;
                                                              ESM=N§ tabla b£squeda;
                                                              FRC=Filtre pour consultation de table nø;
                                                              ENC=Filter Lookup Table No.];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Level,Code                               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Another user has modified the selected dimensions for the %1 field after you retrieved it from the database.\;ESM=Otro usuario ha modificado las dimensiones seleccionadas para el campo %1 despu‚s de que usted las sacara .\;FRC=Un autre utilisateur a modifi‚ l''axe analytique s‚lectionn‚ pour le champ %1 alors que vous ‚tiez en train de travailler dessus.\;ENC=Another user has modified the selected dimensions for the %1 field after you retrieved it from the database.\';
      Text002@1002 : TextConst 'ENU="Enter your changes again in the Dimension Selection window by clicking the AssistButton on the %1 field. ";ESM="Introd. de nuevo sus cambios en ventana Selecci¢n dimensi¢n haciendo clic en el AssistButton en el campo %1. ";FRC="Entrez … nouveau vos modifications dans la fenˆtre de s‚lection de dimension en cliquant sur l''AssistButton du champ %1. ";ENC="Enter your changes again in the Dimension Selection window by clicking the AssistButton on the %1 field. "';

    PROCEDURE SetDimSelectionMultiple@4(ObjectType@1000 : Integer;ObjectID@1001 : Integer;VAR SelectedDimText@1002 : Text[250]);
    VAR
      SelectedDim@1006 : Record 369;
      Dim@1003 : Record 348;
      TempDimSelectionBuf@1004 : TEMPORARY Record 368;
      DimSelectionMultiple@1005 : Page 562;
    BEGIN
      CLEAR(DimSelectionMultiple);
      IF Dim.FIND('-') THEN
        REPEAT
          DimSelectionMultiple.InsertDimSelBuf(
            SelectedDim.GET(USERID,ObjectType,ObjectID,'',Dim.Code),
            Dim.Code,Dim.GetMLName(GLOBALLANGUAGE));
        UNTIL Dim.NEXT = 0;

      IF DimSelectionMultiple.RUNMODAL = ACTION::OK THEN BEGIN
        DimSelectionMultiple.GetDimSelBuf(TempDimSelectionBuf);
        SetDimSelection(ObjectType,ObjectID,'',SelectedDimText,TempDimSelectionBuf);
      END;
    END;

    PROCEDURE SetDimSelectionChange@1(ObjectType@1000 : Integer;ObjectID@1001 : Integer;VAR SelectedDimText@1002 : Text[250]);
    VAR
      SelectedDim@1006 : Record 369;
      Dim@1003 : Record 348;
      TempDimSelectionBuf@1004 : TEMPORARY Record 368;
      DimSelectionChange@1005 : Page 567;
    BEGIN
      CLEAR(DimSelectionChange);
      IF Dim.FIND('-') THEN
        REPEAT
          DimSelectionChange.InsertDimSelBuf(
            SelectedDim.GET(USERID,ObjectType,ObjectID,'',Dim.Code),
            Dim.Code,Dim.GetMLName(GLOBALLANGUAGE),
            SelectedDim."New Dimension Value Code",
            SelectedDim."Dimension Value Filter");
        UNTIL Dim.NEXT = 0;

      IF DimSelectionChange.RUNMODAL = ACTION::OK THEN BEGIN
        DimSelectionChange.GetDimSelBuf(TempDimSelectionBuf);
        SetDimSelection(ObjectType,ObjectID,'',SelectedDimText,TempDimSelectionBuf);
      END;
    END;

    PROCEDURE CompareDimText@2(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10];SelectedDimText@1003 : Text[250];DimTextFieldName@1004 : Text[100]);
    VAR
      SelectedDim@1005 : Record 369;
      SelectedDimTextFromDb@1006 : Text[250];
    BEGIN
      SelectedDimTextFromDb := '';
      SelectedDim.SETCURRENTKEY(
        "User ID","Object Type","Object ID","Analysis View Code",Level,"Dimension Code");
      SetDefaultRangeOnSelectedDimTable(SelectedDim,ObjectType,ObjectID,AnalysisViewCode);
      IF SelectedDim.FIND('-') THEN
        REPEAT
          AddDimCodeToText(SelectedDim."Dimension Code",SelectedDimTextFromDb);
        UNTIL SelectedDim.NEXT = 0;
      IF SelectedDimTextFromDb <> SelectedDimText THEN
        ERROR(
          Text000 +
          Text002,
          DimTextFieldName);
    END;

    LOCAL PROCEDURE AddDimCodeToText@3(DimCode@1000 : Code[20];VAR Text@1001 : Text[250]);
    BEGIN
      IF Text = '' THEN
        Text := DimCode
      ELSE
        IF (STRLEN(Text) + STRLEN(DimCode)) <= (MAXSTRLEN(Text) - 4) THEN
          Text := STRSUBSTNO('%1;%2',Text,DimCode)
        ELSE
          IF COPYSTR(Text,STRLEN(Text) - 2,3) <> '...' THEN
            Text := STRSUBSTNO('%1;...',Text)
    END;

    PROCEDURE SetDimSelection@5(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10];VAR SelectedDimText@1003 : Text[250];VAR DimSelectionBuf@1004 : Record 368);
    VAR
      SelectedDim@1005 : Record 369;
    BEGIN
      SetDefaultRangeOnSelectedDimTable(SelectedDim,ObjectType,ObjectID,AnalysisViewCode);
      SelectedDim.DELETEALL;
      SelectedDimText := '';
      DimSelectionBuf.SETCURRENTKEY(Level,Code);
      DimSelectionBuf.SETRANGE(Selected,TRUE);
      IF DimSelectionBuf.FIND('-') THEN BEGIN
        REPEAT
          SelectedDim."User ID" := USERID;
          SelectedDim."Object Type" := ObjectType;
          SelectedDim."Object ID" := ObjectID;
          SelectedDim."Analysis View Code" := AnalysisViewCode;
          SelectedDim."Dimension Code" := DimSelectionBuf.Code;
          SelectedDim."New Dimension Value Code" := DimSelectionBuf."New Dimension Value Code";
          SelectedDim."Dimension Value Filter" := DimSelectionBuf."Dimension Value Filter";
          SelectedDim.Level := DimSelectionBuf.Level;
          SelectedDim.INSERT;
        UNTIL DimSelectionBuf.NEXT = 0;
        SelectedDimText := GetDimSelectionText(ObjectType,ObjectID,AnalysisViewCode);
      END;
    END;

    PROCEDURE SetDimSelectionLevelGLAcc@40(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10];VAR SelectedDimText@1003 : Text[250]);
    VAR
      GLAcc@1007 : Record 15;
    BEGIN
      SetDimSelectionLevel(ObjectType,ObjectID,AnalysisViewCode,SelectedDimText,GLAcc.TABLECAPTION);
    END;

    PROCEDURE SetDimSelectionLevelCFAcc@7(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10];VAR SelectedDimText@1003 : Text[250]);
    VAR
      CFAcc@1007 : Record 841;
    BEGIN
      SetDimSelectionLevel(ObjectType,ObjectID,AnalysisViewCode,SelectedDimText,CFAcc.TABLECAPTION);
    END;

    LOCAL PROCEDURE SetDimSelectionLevel@8(ObjectType@1003 : Integer;ObjectID@1002 : Integer;AnalysisViewCode@1001 : Code[10];VAR SelectedDimText@1000 : Text[250];AccTableCaption@1009 : Text[30]);
    VAR
      SelectedDim@1007 : Record 369;
      AnalysisView@1004 : Record 363;
      Dim@1005 : Record 348;
      TempDimSelectionBuf@1006 : TEMPORARY Record 368;
      DimSelectionLevel@1008 : Page 564;
    BEGIN
      CLEAR(DimSelectionLevel);
      IF AnalysisView.GET(AnalysisViewCode) THEN BEGIN
        IF Dim.GET(AnalysisView."Dimension 1 Code") THEN
          DimSelectionLevel.InsertDimSelBuf(
            SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,Dim.Code),
            Dim.Code,Dim.GetMLName(GLOBALLANGUAGE),
            SelectedDim."Dimension Value Filter",SelectedDim.Level);

        IF Dim.GET(AnalysisView."Dimension 2 Code") THEN
          DimSelectionLevel.InsertDimSelBuf(
            SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,Dim.Code),
            Dim.Code,Dim.GetMLName(GLOBALLANGUAGE),
            SelectedDim."Dimension Value Filter",SelectedDim.Level);

        IF Dim.GET(AnalysisView."Dimension 3 Code") THEN
          DimSelectionLevel.InsertDimSelBuf(
            SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,Dim.Code),
            Dim.Code,Dim.GetMLName(GLOBALLANGUAGE),
            SelectedDim."Dimension Value Filter",SelectedDim.Level);

        IF Dim.GET(AnalysisView."Dimension 4 Code") THEN
          DimSelectionLevel.InsertDimSelBuf(
            SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,Dim.Code),
            Dim.Code,Dim.GetMLName(GLOBALLANGUAGE),
            SelectedDim."Dimension Value Filter",SelectedDim.Level);

        DimSelectionLevel.InsertDimSelBuf(
          SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,AccTableCaption),
          AccTableCaption,AccTableCaption,
          SelectedDim."Dimension Value Filter",SelectedDim.Level);
      END;

      IF DimSelectionLevel.RUNMODAL = ACTION::OK THEN BEGIN
        DimSelectionLevel.GetDimSelBuf(TempDimSelectionBuf);
        SetDimSelection(ObjectType,ObjectID,AnalysisViewCode,SelectedDimText,TempDimSelectionBuf);
      END;
    END;

    PROCEDURE GetDimSelectionText@6(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10]) : Text[250];
    VAR
      SelectedDim@1003 : Record 369;
      SelectedDimText@1004 : Text[250];
    BEGIN
      SetDefaultRangeOnSelectedDimTable(SelectedDim,ObjectType,ObjectID,AnalysisViewCode);
      SelectedDim.SETCURRENTKEY("User ID","Object Type","Object ID","Analysis View Code",Level,"Dimension Code");
      WITH SelectedDim DO BEGIN
        IF FIND('-') THEN
          REPEAT
            AddDimCodeToText("Dimension Code",SelectedDimText);
          UNTIL NEXT = 0;
      END;
      EXIT(SelectedDimText);
    END;

    LOCAL PROCEDURE SetDefaultRangeOnSelectedDimTable@10(VAR SelectedDim@1003 : Record 369;ObjectType@1002 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1000 : Code[10]);
    BEGIN
      SelectedDim.SETRANGE("User ID",USERID);
      SelectedDim.SETRANGE("Object Type",ObjectType);
      SelectedDim.SETRANGE("Object ID",ObjectID);
      SelectedDim.SETRANGE("Analysis View Code",AnalysisViewCode);
    END;

    BEGIN
    END.
  }
}

